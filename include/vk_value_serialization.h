/*
    Copyright (C) 2021-2023 George Cave - gcave@stablecoder.ca

    SPDX-License-Identifier: Apache-2.0

    This file was auto-generated by the Vulkan Mini Libs 2 utility:
    https://github.com/stablecoder/vulkan-mini-libs-2.git
    or
    https://git.stabletec.com/utilities/vulkan-mini-libs-2.git

    Check for an updated version anytime, or state concerns/bugs.
*/

#ifndef VK_VALUE_SERIALIZATION_H
#define VK_VALUE_SERIALIZATION_H

/*  USAGE:
    To use, include this header where the declarations for the boolean checks are required.

    On *ONE* compilation unit, include the definition of:
    #define VK_VALUE_SERIALIZATION_CONFIG_MAIN

    so that the definitions are compiled somewhere following the one definition rule, either from
    this header *OR* the vk_value_serialization.hpp header.
*/

#ifdef __cplusplus
extern "C" {
#endif

#include <vulkan/vulkan.h>

#ifdef __cplusplus
static_assert(VK_HEADER_VERSION >= 72,
              "VK_HEADER_VERSION is from before the minimum supported version of v72.");
static_assert(VK_HEADER_VERSION <= 273,
              "VK_HEADER_VERSION is from after the maximum supported version of v273.");
#else
_Static_assert(VK_HEADER_VERSION >= 72,
               "VK_HEADER_VERSION is from before the minimum supported version of v72.");
_Static_assert(VK_HEADER_VERSION <= 273,
               "VK_HEADER_VERSION is from after the maximum supported version of v273.");
#endif

typedef enum STecVkSerializationResult {
  STEC_VK_SERIALIZATION_RESULT_SUCCESS = 0,
  STEC_VK_SERIALIZATION_RESULT_ERROR_INCOMPLETE,
  STEC_VK_SERIALIZATION_RESULT_ERROR_TYPE_NOT_FOUND,
  STEC_VK_SERIALIZATION_RESULT_ERROR_TYPE_HAS_NO_EMPTY_VALUE,
  STEC_VK_SERIALIZATION_RESULT_ERROR_VALUE_NOT_FOUND,
} STecVkSerializationResult;

/**
 * @brief Serializes a Vulkan enumerator/flag type (32-bit)
 * @param pVkType is a pointer to the string name of the Vulkan enumerator/flag type
 * @param vkValue is the numeric value being serialized
 * @param pSerializedLength is a pointer to an integer related to the size of pSerialized, as
 * described below.
 * @param pSerialized is either NULL or a pointer to an character array.
 * @note pSerialized is only written to if STEC_VK_SERIALIZATION_RESULT_SUCCESS or
 * STEC_VK_SERIALIZATION_RESULT_ERROR_INCOMPLETE is returned.
 *
 * If pSerialized is NULL, then the size required to return all layer names is returned in
 * pSerializedLength. Otherwise, pSerializedLength must point to a variable set by the user to the
 * size of the pSerialized array, and on return the variable is overwritten with the characters
 * actually written to pSerialized. If pSerializedLength is less than the total size required to
 * return all, at most pSerializedLength is written, and
 * STEC_VK_SERIALIZATION_RESULT_ERROR_INCOMPLETE will be returned instead of
 * STEC_VK_SERIALIZATION_RESULT_SUCCESS, to indicate that not all names were returned.
 *
 * If the Vulkan type could not be determined or found, then
 * STEC_VK_SERIALIZATION_RESULT_ERROR_TYPE_NOT_FOUND is returned.
 *
 * If the value given in vkValue is 0 and the corresponding Vulkan type doesn't have an equivalent
 * 0-value that can be serialized, then STEC_VK_SERIALIZATION_RESULT_ERROR_TYPE_HAS_NO_EMPTY_VALUE
 * is returned. If Any other given vkValue or bitmask cannot be translated fully, then
 * STEC_VK_SERIALIZATION_RESULT_ERROR_VALUE_NOT_FOUND is returned.
 */
STecVkSerializationResult vk_serialize32(char const *pVkType,
                                         uint32_t vkValue,
                                         uint32_t *pSerializedLength,
                                         char *pSerialized);

/**
 * @brief Serializes a Vulkan enumerator/flag type (64-bit)
 * @param pVkType is a pointer to the string name of the Vulkan enumerator/flag type
 * @param vkValue is the numeric value being serialized
 * @param pSerializedLength is a pointer to an integer related to the size of pSerialized, as
 * described below.
 * @param pSerialized is either NULL or a pointer to an character array.
 * @note pSerialized is only written to if STEC_VK_SERIALIZATION_RESULT_SUCCESS or
 * STEC_VK_SERIALIZATION_RESULT_ERROR_INCOMPLETE is returned.
 *
 * If pSerialized is NULL, then the size required to return all layer names is returned in
 * pSerializedLength. Otherwise, pSerializedLength must point to a variable set by the user to the
 * size of the pSerialized array, and on return the variable is overwritten with the characters
 * actually written to pSerialized. If pSerializedLength is less than the total size required to
 * return all, at most pSerializedLength is written, and
 * STEC_VK_SERIALIZATION_RESULT_ERROR_INCOMPLETE will be returned instead of
 * STEC_VK_SERIALIZATION_RESULT_SUCCESS, to indicate that not all names were returned.
 *
 * If the Vulkan type could not be determined or found, then
 * STEC_VK_SERIALIZATION_RESULT_ERROR_TYPE_NOT_FOUND is returned.
 *
 * If the value given in vkValue is 0 and the corresponding Vulkan type doesn't have an equivalent
 * 0-value that can be serialized, then STEC_VK_SERIALIZATION_RESULT_ERROR_TYPE_HAS_NO_EMPTY_VALUE
 * is returned. If Any other given vkValue or bitmask cannot be translated fully, then
 * STEC_VK_SERIALIZATION_RESULT_ERROR_VALUE_NOT_FOUND is returned.
 */
STecVkSerializationResult vk_serialize64(char const *pVkType,
                                         uint64_t vkValue,
                                         uint32_t *pSerializedLength,
                                         char *pSerialized);

/**
 * @brief Parses a Vulkan enumerator/flag serialized string (32-bit)
 * @param pVkType is a pointer to the string name of the Vulkan enumerator/flag type
 * @param pVkString is a pointer to the string being parsed
 * @param pParsedValue is a pointer to a value that will be modified with the parsed value. Only
 * modified if STEC_VK_SERIALIZATION_RESULT_SUCCESS is returned.
 *
 * This attempts to parse the given Vulkan string, according to the values available for the Vulkan
 * type, and updates the return parsed value upon STEC_VK_SERIALIZATION_RESULT_SUCCESS.
 *
 * If the type cannot be determined or found, STEC_VK_SERIALIZATION_RESULT_ERROR_TYPE_NOT_FOUND is
 * returned.
 *
 * If a particular token in the parsing string cannot be determined or found, then
 * STEC_VK_SERIALIZATION_RESULT_ERROR_VALUE_NOT_FOUND is returned.
 */
STecVkSerializationResult vk_parse32(char const *pVkType,
                                     char const *pVkString,
                                     uint32_t *pParsedValue);

/**
 * @brief Parses a Vulkan enumerator/flag serialized string (64-bit)
 * @param pVkType is a pointer to the string name of the Vulkan enumerator/flag type
 * @param pVkString is a pointer to the string being parsed
 * @param pParsedValue is a pointer to a value that will be modified with the parsed value. Only
 * modified if STEC_VK_SERIALIZATION_RESULT_SUCCESS is returned.
 *
 * This attempts to parse the given Vulkan string, according to the values available for the Vulkan
 * type, and updates the return parsed value upon STEC_VK_SERIALIZATION_RESULT_SUCCESS.
 *
 * If the type cannot be determined or found, STEC_VK_SERIALIZATION_RESULT_ERROR_TYPE_NOT_FOUND is
 * returned.
 *
 * If a particular token in the parsing string cannot be determined or found, then
 * STEC_VK_SERIALIZATION_RESULT_ERROR_VALUE_NOT_FOUND is returned.
 */
STecVkSerializationResult vk_parse64(char const *pVkType,
                                     char const *pVkString,
                                     uint64_t *pParsedValue);

#ifdef VK_VALUE_SERIALIZATION_CONFIG_MAIN
#include <assert.h>
#include <ctype.h>
#include <stdbool.h>
#include <stdlib.h>
#include <string.h>

#define cVendorCount sizeof(cVendorList) / sizeof(char const *)
char const *cVendorList[38] = {
    "IMG",    "AMD",  "AMDX",   "ARM",  "FSL",        "BRCM",     "NXP",     "NV",
    "NVX",    "VIV",  "VSI",    "KDAB", "ANDROID",    "CHROMIUM", "FUCHSIA", "GGP",
    "GOOGLE", "QCOM", "LUNARG", "NZXT", "SAMSUNG",    "SEC",      "TIZEN",   "RENDERDOC",
    "NN",     "MVK",  "KHR",    "KHX",  "EXT",        "MESA",     "INTEL",   "HUAWEI",
    "VALVE",  "QNX",  "JUICE",  "FB",   "RASTERGRID", "MSFT",
};

typedef struct EnumValueSet {
  char const *name;
  int64_t value;
  bool alias;
} EnumValueSet;

EnumValueSet const VkFramebufferCreateFlagsSets[] = {
    {"IMAGELESS_BIT_KHR", 0x00000001, true},
    {"IMAGELESS", 0x00000001, false},
};

EnumValueSet const VkRenderPassCreateFlagsSets[] = {
    {"TRANSFORM_BIT_QCOM", 0x00000002, false},
};

EnumValueSet const VkSamplerCreateFlagsSets[] = {
    {"SUBSAMPLED_BIT_EXT", 0x00000001, false},
    {"SUBSAMPLED_COARSE_RECONSTRUCTION_BIT_EXT", 0x00000002, false},
    {"NON_SEAMLESS_CUBE_MAP_BIT_EXT", 0x00000004, false},
    {"IMAGE_PROCESSING_BIT_QCOM", 0x00000010, false},
    {"DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT", 0x00000008, false},
};

EnumValueSet const VkPipelineLayoutCreateFlagsSets[] = {
    {"INDEPENDENT_SETS_BIT_EXT", 0x00000002, false},
};

EnumValueSet const VkPipelineCacheCreateFlagsSets[] = {
    {"EXTERNALLY_SYNCHRONIZED_BIT_EXT", 0x00000001, true},
    {"EXTERNALLY_SYNCHRONIZED", 0x00000001, false},
};

EnumValueSet const VkPipelineDepthStencilStateCreateFlagsSets[] = {
    {"RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM", 0x00000001, true},
    {"RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM", 0x00000002, true},
    {"RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_EXT", 0x00000001, false},
    {"RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_EXT", 0x00000002, false},
};

EnumValueSet const VkPipelineColorBlendStateCreateFlagsSets[] = {
    {"RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_ARM", 0x00000001, true},
    {"RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_EXT", 0x00000001, false},
};

EnumValueSet const VkPipelineShaderStageCreateFlagsSets[] = {
    {"ALLOW_VARYING_SUBGROUP_SIZE_BIT_EXT", 0x00000001, true},
    {"REQUIRE_FULL_SUBGROUPS_BIT_EXT", 0x00000002, true},
    {"ALLOW_VARYING_SUBGROUP_SIZE", 0x00000001, false},
    {"REQUIRE_FULL_SUBGROUPS", 0x00000002, false},
};

EnumValueSet const VkDescriptorSetLayoutCreateFlagsSets[] = {
    {"PUSH_DESCRIPTOR_BIT_KHR", 0x00000001, false},
    {"UPDATE_AFTER_BIND_POOL_BIT_EXT", 0x00000002, true},
    {"UPDATE_AFTER_BIND_POOL", 0x00000002, false},
    {"HOST_ONLY_POOL_BIT_VALVE", 0x00000004, true},
    {"HOST_ONLY_POOL_BIT_EXT", 0x00000004, false},
    {"DESCRIPTOR_BUFFER_BIT_EXT", 0x00000010, false},
    {"EMBEDDED_IMMUTABLE_SAMPLERS_BIT_EXT", 0x00000020, false},
    {"INDIRECT_BINDABLE_BIT_NV", 0x00000080, false},
};

EnumValueSet const VkInstanceCreateFlagsSets[] = {
    {"ENUMERATE_PORTABILITY_BIT_KHR", 0x00000001, false},
};

EnumValueSet const VkDeviceQueueCreateFlagsSets[] = {
    {"PROTECTED", 0x00000001, false},
};

EnumValueSet const VkQueueFlagsSets[] = {
    {"GRAPHICS", 0x00000001, false},
    {"COMPUTE", 0x00000002, false},
    {"TRANSFER", 0x00000004, false},
    {"SPARSE_BINDING", 0x00000008, false},
    {"PROTECTED", 0x00000010, false},
    {"VIDEO_DECODE_BIT_KHR", 0x00000020, false},
    {"VIDEO_ENCODE_BIT_KHR", 0x00000040, false},
    {"OPTICAL_FLOW_BIT_NV", 0x00000100, false},
};

EnumValueSet const VkMemoryPropertyFlagsSets[] = {
    {"DEVICE_LOCAL", 0x00000001, false},
    {"HOST_VISIBLE", 0x00000002, false},
    {"HOST_COHERENT", 0x00000004, false},
    {"HOST_CACHED", 0x00000008, false},
    {"LAZILY_ALLOCATED", 0x00000010, false},
    {"PROTECTED", 0x00000020, false},
    {"DEVICE_COHERENT_BIT_AMD", 0x00000040, false},
    {"DEVICE_UNCACHED_BIT_AMD", 0x00000080, false},
    {"RDMA_CAPABLE_BIT_NV", 0x00000100, false},
};

EnumValueSet const VkMemoryHeapFlagsSets[] = {
    {"DEVICE_LOCAL", 0x00000001, false},
    {"MULTI_INSTANCE", 0x00000002, false},
    {"MULTI_INSTANCE_BIT_KHR", 0x00000002, true},
};

EnumValueSet const VkAccessFlagsSets[] = {
    {"INDIRECT_COMMAND_READ", 0x00000001, false},
    {"INDEX_READ", 0x00000002, false},
    {"VERTEX_ATTRIBUTE_READ", 0x00000004, false},
    {"UNIFORM_READ", 0x00000008, false},
    {"INPUT_ATTACHMENT_READ", 0x00000010, false},
    {"SHADER_READ", 0x00000020, false},
    {"SHADER_WRITE", 0x00000040, false},
    {"COLOR_ATTACHMENT_READ", 0x00000080, false},
    {"COLOR_ATTACHMENT_WRITE", 0x00000100, false},
    {"DEPTH_STENCIL_ATTACHMENT_READ", 0x00000200, false},
    {"DEPTH_STENCIL_ATTACHMENT_WRITE", 0x00000400, false},
    {"TRANSFER_READ", 0x00000800, false},
    {"TRANSFER_WRITE", 0x00001000, false},
    {"HOST_READ", 0x00002000, false},
    {"HOST_WRITE", 0x00004000, false},
    {"MEMORY_READ", 0x00008000, false},
    {"MEMORY_WRITE", 0x00010000, false},
    {"COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT", 0x00080000, false},
    {"COMMAND_PROCESS_READ_BIT_NVX", 0x00020000, false},
    {"COMMAND_PROCESS_WRITE_BIT_NVX", 0x00040000, false},
    {"CONDITIONAL_RENDERING_READ_BIT_EXT", 0x00100000, false},
    {"SHADING_RATE_IMAGE_READ_BIT_NV", 0x00800000, true},
    {"ACCELERATION_STRUCTURE_READ_BIT_NVX", 0x00200000, false},
    {"ACCELERATION_STRUCTURE_WRITE_BIT_NVX", 0x00400000, false},
    {"TRANSFORM_FEEDBACK_WRITE_BIT_EXT", 0x02000000, false},
    {"TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT", 0x04000000, false},
    {"TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT", 0x08000000, false},
    {"ACCELERATION_STRUCTURE_READ_BIT_NV", 0x00200000, true},
    {"ACCELERATION_STRUCTURE_WRITE_BIT_NV", 0x00400000, true},
    {"FRAGMENT_DENSITY_MAP_READ_BIT_EXT", 0x01000000, false},
    {"ACCELERATION_STRUCTURE_READ_BIT_KHR", 0x00200000, false},
    {"ACCELERATION_STRUCTURE_WRITE_BIT_KHR", 0x00400000, false},
    {"COMMAND_PREPROCESS_READ_BIT_NV", 0x00020000, false},
    {"COMMAND_PREPROCESS_WRITE_BIT_NV", 0x00040000, false},
    {"FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR", 0x00800000, false},
    {"NONE_KHR", 0, true},
    {"NONE", 0, false},
};

EnumValueSet const VkBufferUsageFlagsSets[] = {
    {"TRANSFER_SRC", 0x00000001, false},
    {"TRANSFER_DST", 0x00000002, false},
    {"UNIFORM_TEXEL_BUFFER", 0x00000004, false},
    {"STORAGE_TEXEL_BUFFER", 0x00000008, false},
    {"UNIFORM_BUFFER", 0x00000010, false},
    {"STORAGE_BUFFER", 0x00000020, false},
    {"INDEX_BUFFER", 0x00000040, false},
    {"VERTEX_BUFFER", 0x00000080, false},
    {"INDIRECT_BUFFER", 0x00000100, false},
    {"CONDITIONAL_RENDERING_BIT_EXT", 0x00000200, false},
    {"RAYTRACING_BIT_NVX", 0x00000400, false},
    {"TRANSFORM_FEEDBACK_BUFFER_BIT_EXT", 0x00000800, false},
    {"TRANSFORM_FEEDBACK_COUNTER_BUFFER_BIT_EXT", 0x00001000, false},
    {"RAY_TRACING_BIT_NV", 0x00000400, true},
    {"SHADER_DEVICE_ADDRESS_BIT_EXT", 0x00020000, true},
    {"SHADER_DEVICE_ADDRESS_BIT_KHR", 0x00020000, true},
    {"SHADER_DEVICE_ADDRESS", 0x00020000, false},
    {"RAY_TRACING_BIT_KHR", 0x00000400, false},
    {"ACCELERATION_STRUCTURE_BUILD_INPUT_READ_ONLY_BIT_KHR", 0x00080000, false},
    {"ACCELERATION_STRUCTURE_STORAGE_BIT_KHR", 0x00100000, false},
    {"SHADER_BINDING_TABLE_BIT_KHR", 0x00000400, false},
    {"VIDEO_DECODE_SRC_BIT_KHR", 0x00002000, false},
    {"VIDEO_DECODE_DST_BIT_KHR", 0x00004000, false},
    {"VIDEO_ENCODE_DST_BIT_KHR", 0x00008000, false},
    {"VIDEO_ENCODE_SRC_BIT_KHR", 0x00010000, false},
    {"MICROMAP_BUILD_INPUT_READ_ONLY_BIT_EXT", 0x00800000, false},
    {"MICROMAP_STORAGE_BIT_EXT", 0x01000000, false},
    {"SAMPLER_DESCRIPTOR_BUFFER_BIT_EXT", 0x00200000, false},
    {"RESOURCE_DESCRIPTOR_BUFFER_BIT_EXT", 0x00400000, false},
    {"PUSH_DESCRIPTORS_DESCRIPTOR_BUFFER_BIT_EXT", 0x04000000, false},
    {"EXECUTION_GRAPH_SCRATCH_BIT_AMDX", 0x02000000, false},
};

EnumValueSet const VkBufferCreateFlagsSets[] = {
    {"SPARSE_BINDING", 0x00000001, false},
    {"SPARSE_RESIDENCY", 0x00000002, false},
    {"SPARSE_ALIASED", 0x00000004, false},
    {"PROTECTED", 0x00000008, false},
    {"DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT", 0x00000010, true},
    {"DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR", 0x00000010, true},
    {"DEVICE_ADDRESS_CAPTURE_REPLAY", 0x00000010, false},
    {"DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT", 0x00000020, false},
};

EnumValueSet const VkShaderStageFlagsSets[] = {
    {"VERTEX", 0x00000001, false},
    {"TESSELLATION_CONTROL", 0x00000002, false},
    {"TESSELLATION_EVALUATION", 0x00000004, false},
    {"GEOMETRY", 0x00000008, false},
    {"FRAGMENT", 0x00000010, false},
    {"COMPUTE", 0x00000020, false},
    {"ALL_GRAPHICS", 0x0000001F, false},
    {"ALL", 0x7FFFFFFF, false},
    {"TASK_BIT_NV", 0x00000040, true},
    {"MESH_BIT_NV", 0x00000080, true},
    {"RAYGEN_BIT_NVX", 0x00000100, false},
    {"ANY_HIT_BIT_NVX", 0x00000200, false},
    {"CLOSEST_HIT_BIT_NVX", 0x00000400, false},
    {"MISS_BIT_NVX", 0x00000800, false},
    {"INTERSECTION_BIT_NVX", 0x00001000, false},
    {"CALLABLE_BIT_NVX", 0x00002000, false},
    {"RAYGEN_BIT_NV", 0x00000100, true},
    {"ANY_HIT_BIT_NV", 0x00000200, true},
    {"CLOSEST_HIT_BIT_NV", 0x00000400, true},
    {"MISS_BIT_NV", 0x00000800, true},
    {"INTERSECTION_BIT_NV", 0x00001000, true},
    {"CALLABLE_BIT_NV", 0x00002000, true},
    {"RAYGEN_BIT_KHR", 0x00000100, false},
    {"ANY_HIT_BIT_KHR", 0x00000200, false},
    {"CLOSEST_HIT_BIT_KHR", 0x00000400, false},
    {"MISS_BIT_KHR", 0x00000800, false},
    {"INTERSECTION_BIT_KHR", 0x00001000, false},
    {"CALLABLE_BIT_KHR", 0x00002000, false},
    {"SUBPASS_SHADING_BIT_HUAWEI", 0x00004000, false},
    {"TASK_BIT_EXT", 0x00000040, false},
    {"MESH_BIT_EXT", 0x00000080, false},
    {"CLUSTER_CULLING_BIT_HUAWEI", 0x00080000, false},
};

EnumValueSet const VkImageUsageFlagsSets[] = {
    {"TRANSFER_SRC", 0x00000001, false},
    {"TRANSFER_DST", 0x00000002, false},
    {"SAMPLED", 0x00000004, false},
    {"STORAGE", 0x00000008, false},
    {"COLOR_ATTACHMENT", 0x00000010, false},
    {"DEPTH_STENCIL_ATTACHMENT", 0x00000020, false},
    {"TRANSIENT_ATTACHMENT", 0x00000040, false},
    {"INPUT_ATTACHMENT", 0x00000080, false},
    {"SHADING_RATE_IMAGE_BIT_NV", 0x00000100, true},
    {"FRAGMENT_DENSITY_MAP_BIT_EXT", 0x00000200, false},
    {"FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR", 0x00000100, false},
    {"VIDEO_DECODE_DST_BIT_KHR", 0x00000400, false},
    {"VIDEO_DECODE_SRC_BIT_KHR", 0x00000800, false},
    {"VIDEO_DECODE_DPB_BIT_KHR", 0x00001000, false},
    {"VIDEO_ENCODE_DST_BIT_KHR", 0x00002000, false},
    {"VIDEO_ENCODE_SRC_BIT_KHR", 0x00004000, false},
    {"VIDEO_ENCODE_DPB_BIT_KHR", 0x00008000, false},
    {"INVOCATION_MASK_BIT_HUAWEI", 0x00040000, false},
    {"SAMPLE_WEIGHT_BIT_QCOM", 0x00100000, false},
    {"SAMPLE_BLOCK_MATCH_BIT_QCOM", 0x00200000, false},
    {"ATTACHMENT_FEEDBACK_LOOP_BIT_EXT", 0x00080000, false},
    {"HOST_TRANSFER_BIT_EXT", 0x00400000, false},
};

EnumValueSet const VkImageCreateFlagsSets[] = {
    {"SPARSE_BINDING", 0x00000001, false},
    {"SPARSE_RESIDENCY", 0x00000002, false},
    {"SPARSE_ALIASED", 0x00000004, false},
    {"MUTABLE_FORMAT", 0x00000008, false},
    {"CUBE_COMPATIBLE", 0x00000010, false},
    {"ALIAS", 0x00000400, false},
    {"SPLIT_INSTANCE_BIND_REGIONS", 0x00000040, false},
    {"2D_ARRAY_COMPATIBLE", 0x00000020, false},
    {"BLOCK_TEXEL_VIEW_COMPATIBLE", 0x00000080, false},
    {"EXTENDED_USAGE", 0x00000100, false},
    {"PROTECTED", 0x00000800, false},
    {"DISJOINT", 0x00000200, false},
    {"SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR", 0x00000040, true},
    {"2D_ARRAY_COMPATIBLE_BIT_KHR", 0x00000020, true},
    {"BLOCK_TEXEL_VIEW_COMPATIBLE_BIT_KHR", 0x00000080, true},
    {"EXTENDED_USAGE_BIT_KHR", 0x00000100, true},
    {"SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT", 0x00001000, false},
    {"DISJOINT_BIT_KHR", 0x00000200, true},
    {"ALIAS_BIT_KHR", 0x00000400, true},
    {"CORNER_SAMPLED_BIT_NV", 0x00002000, false},
    {"SUBSAMPLED_BIT_EXT", 0x00004000, false},
    {"FRAGMENT_DENSITY_MAP_OFFSET_BIT_QCOM", 0x00008000, false},
    {"2D_VIEW_COMPATIBLE_BIT_EXT", 0x00020000, false},
    {"MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_BIT_EXT", 0x00040000, false},
    {"DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT", 0x00010000, false},
};

EnumValueSet const VkImageViewCreateFlagsSets[] = {
    {"FRAGMENT_DENSITY_MAP_DYNAMIC_BIT_EXT", 0x00000001, false},
    {"FRAGMENT_DENSITY_MAP_DEFERRED_BIT_EXT", 0x00000002, false},
    {"DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT", 0x00000004, false},
};

EnumValueSet const VkPipelineCreateFlagsSets[] = {
    {"DISABLE_OPTIMIZATION", 0x00000001, false},
    {"ALLOW_DERIVATIVES", 0x00000002, false},
    {"DERIVATIVE", 0x00000004, false},
    {"VIEW_INDEX_FROM_DEVICE_INDEX", 0x00000008, false},
    {"DISPATCH_BASE", 0x00000010, true},
    {"VIEW_INDEX_FROM_DEVICE_INDEX_BIT_KHR", 0x00000008, true},
    {"DISPATCH_BASE_KHR", 0x00000010, true},
    {"DEFER_COMPILE_BIT_NVX", 0x00000020, false},
    {"DEFER_COMPILE_BIT_NV", 0x00000020, false},
    {"CAPTURE_STATISTICS_BIT_KHR", 0x00000040, false},
    {"CAPTURE_INTERNAL_REPRESENTATIONS_BIT_KHR", 0x00000080, false},
    {"DISPATCH_BASE", 0x00000010, false},
    {"RAY_TRACING_NO_NULL_ANY_HIT_SHADERS_BIT_KHR", 0x00004000, false},
    {"RAY_TRACING_NO_NULL_CLOSEST_HIT_SHADERS_BIT_KHR", 0x00008000, false},
    {"RAY_TRACING_NO_NULL_MISS_SHADERS_BIT_KHR", 0x00010000, false},
    {"RAY_TRACING_NO_NULL_INTERSECTION_SHADERS_BIT_KHR", 0x00020000, false},
    {"RAY_TRACING_SKIP_TRIANGLES_BIT_KHR", 0x00001000, false},
    {"RAY_TRACING_SKIP_AABBS_BIT_KHR", 0x00002000, false},
    {"INDIRECT_BINDABLE_BIT_NV", 0x00040000, false},
    {"LIBRARY_BIT_KHR", 0x00000800, false},
    {"FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT_EXT", 0x00000100, true},
    {"EARLY_RETURN_ON_FAILURE_BIT_EXT", 0x00000200, true},
    {"RAY_TRACING_SHADER_GROUP_HANDLE_CAPTURE_REPLAY_BIT_KHR", 0x00080000, false},
    {"RAY_TRACING_ALLOW_MOTION_BIT_NV", 0x00100000, false},
    {"VK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR", 0x00200000,
     true},
    {"VK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT", 0x00400000,
     true},
    {"RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR", 0x00200000, false},
    {"RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT", 0x00400000, false},
    {"FAIL_ON_PIPELINE_COMPILE_REQUIRED", 0x00000100, false},
    {"EARLY_RETURN_ON_FAILURE", 0x00000200, false},
    {"RETAIN_LINK_TIME_OPTIMIZATION_INFO_BIT_EXT", 0x00800000, false},
    {"LINK_TIME_OPTIMIZATION_BIT_EXT", 0x00000400, false},
    {"COLOR_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT", 0x02000000, false},
    {"DEPTH_STENCIL_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT", 0x04000000, false},
    {"RAY_TRACING_OPACITY_MICROMAP_BIT_EXT", 0x01000000, false},
    {"NO_PROTECTED_ACCESS_BIT_EXT", 0x08000000, false},
    {"PROTECTED_ACCESS_ONLY_BIT_EXT", 0x40000000, false},
    {"DESCRIPTOR_BUFFER_BIT_EXT", 0x20000000, false},
    {"RAY_TRACING_DISPLACEMENT_MICROMAP_BIT_NV", 0x10000000, false},
};

EnumValueSet const VkColorComponentFlagsSets[] = {
    {"R", 0x00000001, false},
    {"G", 0x00000002, false},
    {"B", 0x00000004, false},
    {"A", 0x00000008, false},
};

EnumValueSet const VkFenceCreateFlagsSets[] = {
    {"SIGNALED", 0x00000001, false},
};

EnumValueSet const VkFormatFeatureFlagsSets[] = {
    {"SAMPLED_IMAGE", 0x00000001, false},
    {"STORAGE_IMAGE", 0x00000002, false},
    {"STORAGE_IMAGE_ATOMIC", 0x00000004, false},
    {"UNIFORM_TEXEL_BUFFER", 0x00000008, false},
    {"STORAGE_TEXEL_BUFFER", 0x00000010, false},
    {"STORAGE_TEXEL_BUFFER_ATOMIC", 0x00000020, false},
    {"VERTEX_BUFFER", 0x00000040, false},
    {"COLOR_ATTACHMENT", 0x00000080, false},
    {"COLOR_ATTACHMENT_BLEND", 0x00000100, false},
    {"DEPTH_STENCIL_ATTACHMENT", 0x00000200, false},
    {"BLIT_SRC", 0x00000400, false},
    {"BLIT_DST", 0x00000800, false},
    {"SAMPLED_IMAGE_FILTER_LINEAR", 0x00001000, false},
    {"TRANSFER_SRC", 0x00004000, false},
    {"TRANSFER_DST", 0x00008000, false},
    {"MIDPOINT_CHROMA_SAMPLES", 0x00020000, false},
    {"SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER", 0x00040000, false},
    {"SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER", 0x00080000, false},
    {"SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT", 0x00100000, false},
    {"SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE", 0x00200000, false},
    {"DISJOINT", 0x00400000, false},
    {"COSITED_CHROMA_SAMPLES", 0x00800000, false},
    {"SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG", 0x00002000, true},
    {"TRANSFER_SRC_BIT_KHR", 0x00004000, true},
    {"TRANSFER_DST_BIT_KHR", 0x00008000, true},
    {"SAMPLED_IMAGE_FILTER_MINMAX_BIT_EXT", 0x00010000, true},
    {"MIDPOINT_CHROMA_SAMPLES_BIT_KHR", 0x00020000, true},
    {"SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR", 0x00040000, true},
    {"SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR", 0x00080000, true},
    {"SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR", 0x00100000, true},
    {"SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR", 0x00200000,
     true},
    {"DISJOINT_BIT_KHR", 0x00400000, true},
    {"COSITED_CHROMA_SAMPLES_BIT_KHR", 0x00800000, true},
    {"FRAGMENT_DENSITY_MAP_BIT_EXT", 0x01000000, false},
    {"SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT", 0x00002000, false},
    {"SAMPLED_IMAGE_FILTER_MINMAX", 0x00010000, false},
    {"ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR", 0x20000000, false},
    {"FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR", 0x40000000, false},
    {"VIDEO_DECODE_OUTPUT_BIT_KHR", 0x02000000, false},
    {"VIDEO_DECODE_DPB_BIT_KHR", 0x04000000, false},
    {"VIDEO_ENCODE_INPUT_BIT_KHR", 0x08000000, false},
    {"VIDEO_ENCODE_DPB_BIT_KHR", 0x10000000, false},
};

EnumValueSet const VkQueryControlFlagsSets[] = {
    {"PRECISE", 0x00000001, false},
};

EnumValueSet const VkQueryResultFlagsSets[] = {
    {"64", 0x00000001, false},
    {"WAIT", 0x00000002, false},
    {"WITH_AVAILABILITY", 0x00000004, false},
    {"PARTIAL", 0x00000008, false},
    {"WITH_STATUS_BIT_KHR", 0x00000010, false},
};

EnumValueSet const VkEventCreateFlagsSets[] = {
    {"DEVICE_ONLY_BIT_KHR", 0x00000001, true},
    {"DEVICE_ONLY", 0x00000001, false},
};

EnumValueSet const VkCommandPoolCreateFlagsSets[] = {
    {"TRANSIENT", 0x00000001, false},
    {"RESET_COMMAND_BUFFER", 0x00000002, false},
    {"PROTECTED", 0x00000004, false},
};

EnumValueSet const VkCommandPoolResetFlagsSets[] = {
    {"RELEASE_RESOURCES", 0x00000001, false},
};

EnumValueSet const VkCommandBufferResetFlagsSets[] = {
    {"RELEASE_RESOURCES", 0x00000001, false},
};

EnumValueSet const VkCommandBufferUsageFlagsSets[] = {
    {"ONE_TIME_SUBMIT", 0x00000001, false},
    {"RENDER_PASS_CONTINUE", 0x00000002, false},
    {"SIMULTANEOUS_USE", 0x00000004, false},
};

EnumValueSet const VkQueryPipelineStatisticFlagsSets[] = {
    {"INPUT_ASSEMBLY_VERTICES", 0x00000001, false},
    {"INPUT_ASSEMBLY_PRIMITIVES", 0x00000002, false},
    {"VERTEX_SHADER_INVOCATIONS", 0x00000004, false},
    {"GEOMETRY_SHADER_INVOCATIONS", 0x00000008, false},
    {"GEOMETRY_SHADER_PRIMITIVES", 0x00000010, false},
    {"CLIPPING_INVOCATIONS", 0x00000020, false},
    {"CLIPPING_PRIMITIVES", 0x00000040, false},
    {"FRAGMENT_SHADER_INVOCATIONS", 0x00000080, false},
    {"TESSELLATION_CONTROL_SHADER_PATCHES", 0x00000100, false},
    {"TESSELLATION_EVALUATION_SHADER_INVOCATIONS", 0x00000200, false},
    {"COMPUTE_SHADER_INVOCATIONS", 0x00000400, false},
    {"TASK_SHADER_INVOCATIONS_BIT_EXT", 0x00000800, false},
    {"MESH_SHADER_INVOCATIONS_BIT_EXT", 0x00001000, false},
    {"CLUSTER_CULLING_SHADER_INVOCATIONS_BIT_HUAWEI", 0x00002000, false},
};

EnumValueSet const VkImageAspectFlagsSets[] = {
    {"COLOR", 0x00000001, false},
    {"DEPTH", 0x00000002, false},
    {"STENCIL", 0x00000004, false},
    {"METADATA", 0x00000008, false},
    {"PLANE_0", 0x00000010, false},
    {"PLANE_1", 0x00000020, false},
    {"PLANE_2", 0x00000040, false},
    {"PLANE_0_BIT_KHR", 0x00000010, true},
    {"PLANE_1_BIT_KHR", 0x00000020, true},
    {"PLANE_2_BIT_KHR", 0x00000040, true},
    {"MEMORY_PLANE_0_BIT_EXT", 0x00000080, false},
    {"MEMORY_PLANE_1_BIT_EXT", 0x00000100, false},
    {"MEMORY_PLANE_2_BIT_EXT", 0x00000200, false},
    {"MEMORY_PLANE_3_BIT_EXT", 0x00000400, false},
    {"NONE_KHR", 0, true},
    {"NONE", 0, false},
};

EnumValueSet const VkSparseMemoryBindFlagsSets[] = {
    {"METADATA", 0x00000001, false},
};

EnumValueSet const VkSparseImageFormatFlagsSets[] = {
    {"SINGLE_MIPTAIL", 0x00000001, false},
    {"ALIGNED_MIP_SIZE", 0x00000002, false},
    {"NONSTANDARD_BLOCK_SIZE", 0x00000004, false},
};

EnumValueSet const VkSubpassDescriptionFlagsSets[] = {
    {"PER_VIEW_ATTRIBUTES_BIT_NVX", 0x00000001, false},
    {"PER_VIEW_POSITION_X_ONLY_BIT_NVX", 0x00000002, false},
    {"FRAGMENT_REGION_BIT_QCOM", 0x00000004, false},
    {"SHADER_RESOLVE_BIT_QCOM", 0x00000008, false},
    {"RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_BIT_ARM", 0x00000010, true},
    {"RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM", 0x00000020, true},
    {"RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM", 0x00000040, true},
    {"RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_BIT_EXT", 0x00000010, false},
    {"RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_EXT", 0x00000020, false},
    {"RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_EXT", 0x00000040, false},
    {"ENABLE_LEGACY_DITHERING_BIT_EXT", 0x00000080, false},
};

EnumValueSet const VkPipelineStageFlagsSets[] = {
    {"TOP_OF_PIPE", 0x00000001, false},
    {"DRAW_INDIRECT", 0x00000002, false},
    {"VERTEX_INPUT", 0x00000004, false},
    {"VERTEX_SHADER", 0x00000008, false},
    {"TESSELLATION_CONTROL_SHADER", 0x00000010, false},
    {"TESSELLATION_EVALUATION_SHADER", 0x00000020, false},
    {"GEOMETRY_SHADER", 0x00000040, false},
    {"FRAGMENT_SHADER", 0x00000080, false},
    {"EARLY_FRAGMENT_TESTS", 0x00000100, false},
    {"LATE_FRAGMENT_TESTS", 0x00000200, false},
    {"COLOR_ATTACHMENT_OUTPUT", 0x00000400, false},
    {"COMPUTE_SHADER", 0x00000800, false},
    {"TRANSFER", 0x00001000, false},
    {"BOTTOM_OF_PIPE", 0x00002000, false},
    {"HOST", 0x00004000, false},
    {"ALL_GRAPHICS", 0x00008000, false},
    {"ALL_COMMANDS", 0x00010000, false},
    {"COMMAND_PROCESS_BIT_NVX", 0x00020000, false},
    {"CONDITIONAL_RENDERING_BIT_EXT", 0x00040000, false},
    {"SHADING_RATE_IMAGE_BIT_NV", 0x00400000, true},
    {"TASK_SHADER_BIT_NV", 0x00080000, true},
    {"MESH_SHADER_BIT_NV", 0x00100000, true},
    {"RAYTRACING_BIT_NVX", 0x00200000, false},
    {"TRANSFORM_FEEDBACK_BIT_EXT", 0x01000000, false},
    {"RAY_TRACING_SHADER_BIT_NV", 0x00200000, true},
    {"ACCELERATION_STRUCTURE_BUILD_BIT_NV", 0x02000000, true},
    {"FRAGMENT_DENSITY_PROCESS_BIT_EXT", 0x00800000, false},
    {"ACCELERATION_STRUCTURE_BUILD_BIT_KHR", 0x02000000, false},
    {"RAY_TRACING_SHADER_BIT_KHR", 0x00200000, false},
    {"COMMAND_PREPROCESS_BIT_NV", 0x00020000, false},
    {"FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR", 0x00400000, false},
    {"NONE_KHR", 0, true},
    {"NONE", 0, false},
    {"TASK_SHADER_BIT_EXT", 0x00080000, false},
    {"MESH_SHADER_BIT_EXT", 0x00100000, false},
};

EnumValueSet const VkSampleCountFlagsSets[] = {
    {"1", 0x00000001, false},  {"2", 0x00000002, false},  {"4", 0x00000004, false},
    {"8", 0x00000008, false},  {"16", 0x00000010, false}, {"32", 0x00000020, false},
    {"64", 0x00000040, false},
};

EnumValueSet const VkAttachmentDescriptionFlagsSets[] = {
    {"MAY_ALIAS", 0x00000001, false},
};

EnumValueSet const VkStencilFaceFlagsSets[] = {
    {"FRONT", 0x00000001, false},
    {"BACK", 0x00000002, false},
    {"VK_STENCIL_FRONT_AND_BACK", 0x00000003, true},
    {"FRONT_AND_BACK", 0x00000003, false},
};

EnumValueSet const VkCullModeFlagsSets[] = {
    {"NONE", 0, false},
    {"FRONT", 0x00000001, false},
    {"BACK", 0x00000002, false},
    {"FRONT_AND_BACK", 0x00000003, false},
};

EnumValueSet const VkDescriptorPoolCreateFlagsSets[] = {
    {"FREE_DESCRIPTOR_SET", 0x00000001, false},
    {"UPDATE_AFTER_BIND_BIT_EXT", 0x00000002, true},
    {"UPDATE_AFTER_BIND", 0x00000002, false},
    {"HOST_ONLY_BIT_VALVE", 0x00000004, true},
    {"HOST_ONLY_BIT_EXT", 0x00000004, false},
    {"ALLOW_OVERALLOCATION_SETS_BIT_NV", 0x00000008, false},
    {"ALLOW_OVERALLOCATION_POOLS_BIT_NV", 0x00000010, false},
};

EnumValueSet const VkDependencyFlagsSets[] = {
    {"BY_REGION", 0x00000001, false},           {"DEVICE_GROUP", 0x00000004, false},
    {"VIEW_LOCAL", 0x00000002, false},          {"VIEW_LOCAL_BIT_KHR", 0x00000002, true},
    {"DEVICE_GROUP_BIT_KHR", 0x00000004, true}, {"FEEDBACK_LOOP_BIT_EXT", 0x00000008, false},
};

EnumValueSet const VkSubgroupFeatureFlagsSets[] = {
    {"BASIC", 0x00000001, false},
    {"VOTE", 0x00000002, false},
    {"ARITHMETIC", 0x00000004, false},
    {"BALLOT", 0x00000008, false},
    {"SHUFFLE", 0x00000010, false},
    {"SHUFFLE_RELATIVE", 0x00000020, false},
    {"CLUSTERED", 0x00000040, false},
    {"QUAD", 0x00000080, false},
    {"PARTITIONED_BIT_NV", 0x00000100, false},
};

EnumValueSet const VkIndirectCommandsLayoutUsageFlagsNVSets[] = {
    {"EXPLICIT_PREPROCESS", 0x00000001, false},
    {"INDEXED_SEQUENCES", 0x00000002, false},
    {"UNORDERED_SEQUENCES", 0x00000004, false},
};

EnumValueSet const VkIndirectStateFlagsNVSets[] = {
    {"FLAG_FRONTFACE", 0x00000001, false},
};

EnumValueSet const VkGeometryFlagsKHRSets[] = {
    {"OPAQUE", 0x00000001, false},
    {"NO_DUPLICATE_ANY_HIT_INVOCATION", 0x00000002, false},
    {"OPAQUE_BIT_NV", 0x00000001, true},
    {"NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_NV", 0x00000002, true},
};

EnumValueSet const VkGeometryInstanceFlagsKHRSets[] = {
    {"TRIANGLE_FACING_CULL_DISABLE", 0x00000001, false},
    {"FORCE_OPAQUE", 0x00000004, false},
    {"FORCE_NO_OPAQUE", 0x00000008, false},
    {"TRIANGLE_FRONT_COUNTERCLOCKWISE", 0x00000002, true},
    {"TRIANGLE_CULL_DISABLE_BIT_NV", 0x00000001, true},
    {"TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_NV", 0x00000002, true},
    {"FORCE_OPAQUE_BIT_NV", 0x00000004, true},
    {"FORCE_NO_OPAQUE_BIT_NV", 0x00000008, true},
    {"TRIANGLE_FLIP_FACING", 0x00000002, false},
    {"FORCE_OPACITY_MICROMAP_2_STATE_EXT", 0x00000010, false},
    {"DISABLE_OPACITY_MICROMAPS_EXT", 0x00000020, false},
};

EnumValueSet const VkBuildAccelerationStructureFlagsKHRSets[] = {
    {"ALLOW_UPDATE", 0x00000001, false},
    {"ALLOW_COMPACTION", 0x00000002, false},
    {"PREFER_FAST_TRACE", 0x00000004, false},
    {"PREFER_FAST_BUILD", 0x00000008, false},
    {"LOW_MEMORY", 0x00000010, false},
    {"ALLOW_UPDATE_BIT_NV", 0x00000001, true},
    {"ALLOW_COMPACTION_BIT_NV", 0x00000002, true},
    {"PREFER_FAST_TRACE_BIT_NV", 0x00000004, true},
    {"PREFER_FAST_BUILD_BIT_NV", 0x00000008, true},
    {"LOW_MEMORY_BIT_NV", 0x00000010, true},
    {"MOTION_BIT_NV", 0x00000020, false},
    {"ALLOW_OPACITY_MICROMAP_UPDATE_EXT", 0x00000040, false},
    {"ALLOW_DISABLE_OPACITY_MICROMAPS_EXT", 0x00000080, false},
    {"ALLOW_OPACITY_MICROMAP_DATA_UPDATE_EXT", 0x00000100, false},
    {"ALLOW_DISPLACEMENT_MICROMAP_UPDATE_NV", 0x00000200, false},
    {"ALLOW_DATA_ACCESS", 0x00000800, false},
};

EnumValueSet const VkAccelerationStructureCreateFlagsKHRSets[] = {
    {"DEVICE_ADDRESS_CAPTURE_REPLAY", 0x00000001, false},
    {"MOTION_BIT_NV", 0x00000004, false},
    {"DESCRIPTOR_BUFFER_CAPTURE_REPLAY_BIT_EXT", 0x00000008, false},
};

EnumValueSet const VkPipelineCreationFeedbackFlagsSets[] = {
    {"VALID", 0x00000001, false},
    {"VALID_BIT_EXT", 0x00000001, true},
    {"APPLICATION_PIPELINE_CACHE_HIT", 0x00000002, false},
    {"APPLICATION_PIPELINE_CACHE_HIT_BIT_EXT", 0x00000002, true},
    {"BASE_PIPELINE_ACCELERATION", 0x00000004, false},
    {"BASE_PIPELINE_ACCELERATION_BIT_EXT", 0x00000004, true},
};

EnumValueSet const VkPerformanceCounterDescriptionFlagsKHRSets[] = {
    {"PERFORMANCE_IMPACTING", 0x00000001, true},
    {"CONCURRENTLY_IMPACTED", 0x00000002, true},
    {"PERFORMANCE_IMPACTING", 0x00000001, false},
    {"CONCURRENTLY_IMPACTED", 0x00000002, false},
};

EnumValueSet const VkSemaphoreWaitFlagsSets[] = {
    {"ANY", 0x00000001, false},
    {"ANY_BIT_KHR", 0x00000001, true},
};

EnumValueSet const VkDeviceDiagnosticsConfigFlagsNVSets[] = {
    {"ENABLE_SHADER_DEBUG_INFO", 0x00000001, false},
    {"ENABLE_RESOURCE_TRACKING", 0x00000002, false},
    {"ENABLE_AUTOMATIC_CHECKPOINTS", 0x00000004, false},
    {"ENABLE_SHADER_ERROR_REPORTING", 0x00000008, false},
};

EnumValueSet const VkAccessFlags2Sets[] = {
    {"NONE", 0, false},
    {"NONE_KHR", 0, true},
    {"INDIRECT_COMMAND_READ", 0x00000001, false},
    {"INDIRECT_COMMAND_READ_BIT_KHR", 0x00000001, true},
    {"INDEX_READ", 0x00000002, false},
    {"INDEX_READ_BIT_KHR", 0x00000002, true},
    {"VERTEX_ATTRIBUTE_READ", 0x00000004, false},
    {"VERTEX_ATTRIBUTE_READ_BIT_KHR", 0x00000004, true},
    {"UNIFORM_READ", 0x00000008, false},
    {"UNIFORM_READ_BIT_KHR", 0x00000008, true},
    {"INPUT_ATTACHMENT_READ", 0x00000010, false},
    {"INPUT_ATTACHMENT_READ_BIT_KHR", 0x00000010, true},
    {"SHADER_READ", 0x00000020, false},
    {"SHADER_READ_BIT_KHR", 0x00000020, true},
    {"SHADER_WRITE", 0x00000040, false},
    {"SHADER_WRITE_BIT_KHR", 0x00000040, true},
    {"COLOR_ATTACHMENT_READ", 0x00000080, false},
    {"COLOR_ATTACHMENT_READ_BIT_KHR", 0x00000080, true},
    {"COLOR_ATTACHMENT_WRITE", 0x00000100, false},
    {"COLOR_ATTACHMENT_WRITE_BIT_KHR", 0x00000100, true},
    {"DEPTH_STENCIL_ATTACHMENT_READ", 0x00000200, false},
    {"DEPTH_STENCIL_ATTACHMENT_READ_BIT_KHR", 0x00000200, true},
    {"DEPTH_STENCIL_ATTACHMENT_WRITE", 0x00000400, false},
    {"DEPTH_STENCIL_ATTACHMENT_WRITE_BIT_KHR", 0x00000400, true},
    {"TRANSFER_READ", 0x00000800, false},
    {"TRANSFER_READ_BIT_KHR", 0x00000800, true},
    {"TRANSFER_WRITE", 0x00001000, false},
    {"TRANSFER_WRITE_BIT_KHR", 0x00001000, true},
    {"HOST_READ", 0x00002000, false},
    {"HOST_READ_BIT_KHR", 0x00002000, true},
    {"HOST_WRITE", 0x00004000, false},
    {"HOST_WRITE_BIT_KHR", 0x00004000, true},
    {"MEMORY_READ", 0x00008000, false},
    {"MEMORY_READ_BIT_KHR", 0x00008000, true},
    {"MEMORY_WRITE", 0x00010000, false},
    {"MEMORY_WRITE_BIT_KHR", 0x00010000, true},
    {"SHADER_SAMPLED_READ", 0x100000000, false},
    {"SHADER_SAMPLED_READ_BIT_KHR", 0x100000000, true},
    {"SHADER_STORAGE_READ", 0x200000000, false},
    {"SHADER_STORAGE_READ_BIT_KHR", 0x200000000, true},
    {"SHADER_STORAGE_WRITE", 0x400000000, false},
    {"SHADER_STORAGE_WRITE_BIT_KHR", 0x400000000, true},
    {"VIDEO_DECODE_READ_BIT_KHR", 0x800000000, false},
    {"VIDEO_DECODE_WRITE_BIT_KHR", 0x1000000000, false},
    {"VIDEO_ENCODE_READ_BIT_KHR", 0x2000000000, false},
    {"VIDEO_ENCODE_WRITE_BIT_KHR", 0x4000000000, false},
    {"TRANSFORM_FEEDBACK_WRITE_BIT_EXT", 0x02000000, false},
    {"TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT", 0x04000000, false},
    {"TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT", 0x08000000, false},
    {"CONDITIONAL_RENDERING_READ_BIT_EXT", 0x00100000, false},
    {"COMMAND_PREPROCESS_READ_BIT_NV", 0x00020000, false},
    {"COMMAND_PREPROCESS_WRITE_BIT_NV", 0x00040000, false},
    {"FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR", 0x00800000, false},
    {"SHADING_RATE_IMAGE_READ_BIT_NV", 0x00800000, true},
    {"ACCELERATION_STRUCTURE_READ_BIT_KHR", 0x00200000, false},
    {"ACCELERATION_STRUCTURE_WRITE_BIT_KHR", 0x00400000, false},
    {"ACCELERATION_STRUCTURE_READ_BIT_NV", 0x00200000, true},
    {"ACCELERATION_STRUCTURE_WRITE_BIT_NV", 0x00400000, true},
    {"FRAGMENT_DENSITY_MAP_READ_BIT_EXT", 0x01000000, false},
    {"COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT", 0x00080000, false},
    {"INVOCATION_MASK_READ_BIT_HUAWEI", 0x8000000000, false},
    {"SHADER_BINDING_TABLE_READ_BIT_KHR", 0x10000000000, false},
    {"MICROMAP_READ_BIT_EXT", 0x100000000000, false},
    {"MICROMAP_WRITE_BIT_EXT", 0x200000000000, false},
    {"OPTICAL_FLOW_READ_BIT_NV", 0x40000000000, false},
    {"OPTICAL_FLOW_WRITE_BIT_NV", 0x80000000000, false},
    {"DESCRIPTOR_BUFFER_READ_BIT_EXT", 0x20000000000, false},
};

EnumValueSet const VkPipelineStageFlags2Sets[] = {
    {"NONE", 0, false},
    {"NONE_KHR", 0, true},
    {"TOP_OF_PIPE", 0x00000001, false},
    {"TOP_OF_PIPE_BIT_KHR", 0x00000001, true},
    {"DRAW_INDIRECT", 0x00000002, false},
    {"DRAW_INDIRECT_BIT_KHR", 0x00000002, true},
    {"VERTEX_INPUT", 0x00000004, false},
    {"VERTEX_INPUT_BIT_KHR", 0x00000004, true},
    {"VERTEX_SHADER", 0x00000008, false},
    {"VERTEX_SHADER_BIT_KHR", 0x00000008, true},
    {"TESSELLATION_CONTROL_SHADER", 0x00000010, false},
    {"TESSELLATION_CONTROL_SHADER_BIT_KHR", 0x00000010, true},
    {"TESSELLATION_EVALUATION_SHADER", 0x00000020, false},
    {"TESSELLATION_EVALUATION_SHADER_BIT_KHR", 0x00000020, true},
    {"GEOMETRY_SHADER", 0x00000040, false},
    {"GEOMETRY_SHADER_BIT_KHR", 0x00000040, true},
    {"FRAGMENT_SHADER", 0x00000080, false},
    {"FRAGMENT_SHADER_BIT_KHR", 0x00000080, true},
    {"EARLY_FRAGMENT_TESTS", 0x00000100, false},
    {"EARLY_FRAGMENT_TESTS_BIT_KHR", 0x00000100, true},
    {"LATE_FRAGMENT_TESTS", 0x00000200, false},
    {"LATE_FRAGMENT_TESTS_BIT_KHR", 0x00000200, true},
    {"COLOR_ATTACHMENT_OUTPUT", 0x00000400, false},
    {"COLOR_ATTACHMENT_OUTPUT_BIT_KHR", 0x00000400, true},
    {"COMPUTE_SHADER", 0x00000800, false},
    {"COMPUTE_SHADER_BIT_KHR", 0x00000800, true},
    {"ALL_TRANSFER", 0x00001000, false},
    {"ALL_TRANSFER_BIT_KHR", 0x00001000, true},
    {"TRANSFER", 0x00001000, true},
    {"TRANSFER_BIT_KHR", 0x00001000, true},
    {"BOTTOM_OF_PIPE", 0x00002000, false},
    {"BOTTOM_OF_PIPE_BIT_KHR", 0x00002000, true},
    {"HOST", 0x00004000, false},
    {"HOST_BIT_KHR", 0x00004000, true},
    {"ALL_GRAPHICS", 0x00008000, false},
    {"ALL_GRAPHICS_BIT_KHR", 0x00008000, true},
    {"ALL_COMMANDS", 0x00010000, false},
    {"ALL_COMMANDS_BIT_KHR", 0x00010000, true},
    {"COPY", 0x100000000, false},
    {"COPY_BIT_KHR", 0x100000000, true},
    {"RESOLVE", 0x200000000, false},
    {"RESOLVE_BIT_KHR", 0x200000000, true},
    {"BLIT", 0x400000000, false},
    {"BLIT_BIT_KHR", 0x400000000, true},
    {"CLEAR", 0x800000000, false},
    {"CLEAR_BIT_KHR", 0x800000000, true},
    {"INDEX_INPUT", 0x1000000000, false},
    {"INDEX_INPUT_BIT_KHR", 0x1000000000, true},
    {"VERTEX_ATTRIBUTE_INPUT", 0x2000000000, false},
    {"VERTEX_ATTRIBUTE_INPUT_BIT_KHR", 0x2000000000, true},
    {"PRE_RASTERIZATION_SHADERS", 0x4000000000, false},
    {"PRE_RASTERIZATION_SHADERS_BIT_KHR", 0x4000000000, true},
    {"VIDEO_DECODE_BIT_KHR", 0x04000000, false},
    {"VIDEO_ENCODE_BIT_KHR", 0x08000000, false},
    {"TRANSFORM_FEEDBACK_BIT_EXT", 0x01000000, false},
    {"CONDITIONAL_RENDERING_BIT_EXT", 0x00040000, false},
    {"COMMAND_PREPROCESS_BIT_NV", 0x00020000, false},
    {"FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR", 0x00400000, false},
    {"SHADING_RATE_IMAGE_BIT_NV", 0x00400000, true},
    {"ACCELERATION_STRUCTURE_BUILD_BIT_KHR", 0x02000000, false},
    {"RAY_TRACING_SHADER_BIT_KHR", 0x00200000, false},
    {"RAY_TRACING_SHADER_BIT_NV", 0x00200000, true},
    {"ACCELERATION_STRUCTURE_BUILD_BIT_NV", 0x02000000, true},
    {"FRAGMENT_DENSITY_PROCESS_BIT_EXT", 0x00800000, false},
    {"TASK_SHADER_BIT_NV", 0x00080000, true},
    {"MESH_SHADER_BIT_NV", 0x00100000, true},
    {"SUBPASS_SHADING_BIT_HUAWEI", 0x8000000000, true},
    {"INVOCATION_MASK_BIT_HUAWEI", 0x10000000000, false},
    {"ACCELERATION_STRUCTURE_COPY_BIT_KHR", 0x10000000, false},
    {"TASK_SHADER_BIT_EXT", 0x00080000, false},
    {"MESH_SHADER_BIT_EXT", 0x00100000, false},
    {"MICROMAP_BUILD_BIT_EXT", 0x40000000, false},
    {"OPTICAL_FLOW_BIT_NV", 0x20000000, false},
    {"CLUSTER_CULLING_SHADER_BIT_HUAWEI", 0x20000000000, false},
    {"SUBPASS_SHADER_BIT_HUAWEI", 0x8000000000, false},
};

EnumValueSet const VkFormatFeatureFlags2Sets[] = {
    {"SAMPLED_IMAGE", 0x00000001, false},
    {"SAMPLED_IMAGE_BIT_KHR", 0x00000001, true},
    {"STORAGE_IMAGE", 0x00000002, false},
    {"STORAGE_IMAGE_BIT_KHR", 0x00000002, true},
    {"STORAGE_IMAGE_ATOMIC", 0x00000004, false},
    {"STORAGE_IMAGE_ATOMIC_BIT_KHR", 0x00000004, true},
    {"UNIFORM_TEXEL_BUFFER", 0x00000008, false},
    {"UNIFORM_TEXEL_BUFFER_BIT_KHR", 0x00000008, true},
    {"STORAGE_TEXEL_BUFFER", 0x00000010, false},
    {"STORAGE_TEXEL_BUFFER_BIT_KHR", 0x00000010, true},
    {"STORAGE_TEXEL_BUFFER_ATOMIC", 0x00000020, false},
    {"STORAGE_TEXEL_BUFFER_ATOMIC_BIT_KHR", 0x00000020, true},
    {"VERTEX_BUFFER", 0x00000040, false},
    {"VERTEX_BUFFER_BIT_KHR", 0x00000040, true},
    {"COLOR_ATTACHMENT", 0x00000080, false},
    {"COLOR_ATTACHMENT_BIT_KHR", 0x00000080, true},
    {"COLOR_ATTACHMENT_BLEND", 0x00000100, false},
    {"COLOR_ATTACHMENT_BLEND_BIT_KHR", 0x00000100, true},
    {"DEPTH_STENCIL_ATTACHMENT", 0x00000200, false},
    {"DEPTH_STENCIL_ATTACHMENT_BIT_KHR", 0x00000200, true},
    {"BLIT_SRC", 0x00000400, false},
    {"BLIT_SRC_BIT_KHR", 0x00000400, true},
    {"BLIT_DST", 0x00000800, false},
    {"BLIT_DST_BIT_KHR", 0x00000800, true},
    {"SAMPLED_IMAGE_FILTER_LINEAR", 0x00001000, false},
    {"SAMPLED_IMAGE_FILTER_LINEAR_BIT_KHR", 0x00001000, true},
    {"SAMPLED_IMAGE_FILTER_CUBIC", 0x00002000, false},
    {"SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT", 0x00002000, true},
    {"TRANSFER_SRC", 0x00004000, false},
    {"TRANSFER_SRC_BIT_KHR", 0x00004000, true},
    {"TRANSFER_DST", 0x00008000, false},
    {"TRANSFER_DST_BIT_KHR", 0x00008000, true},
    {"SAMPLED_IMAGE_FILTER_MINMAX", 0x00010000, false},
    {"SAMPLED_IMAGE_FILTER_MINMAX_BIT_KHR", 0x00010000, true},
    {"MIDPOINT_CHROMA_SAMPLES", 0x00020000, false},
    {"MIDPOINT_CHROMA_SAMPLES_BIT_KHR", 0x00020000, true},
    {"SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER", 0x00040000, false},
    {"SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR", 0x00040000, true},
    {"SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER", 0x00080000, false},
    {"SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR", 0x00080000, true},
    {"SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT", 0x00100000, false},
    {"SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR", 0x00100000, true},
    {"SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE", 0x00200000, false},
    {"SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR", 0x00200000,
     true},
    {"DISJOINT", 0x00400000, false},
    {"DISJOINT_BIT_KHR", 0x00400000, true},
    {"COSITED_CHROMA_SAMPLES", 0x00800000, false},
    {"COSITED_CHROMA_SAMPLES_BIT_KHR", 0x00800000, true},
    {"STORAGE_READ_WITHOUT_FORMAT", 0x80000000, false},
    {"STORAGE_READ_WITHOUT_FORMAT_BIT_KHR", 0x80000000, true},
    {"STORAGE_WRITE_WITHOUT_FORMAT", 0x100000000, false},
    {"STORAGE_WRITE_WITHOUT_FORMAT_BIT_KHR", 0x100000000, true},
    {"SAMPLED_IMAGE_DEPTH_COMPARISON", 0x200000000, false},
    {"SAMPLED_IMAGE_DEPTH_COMPARISON_BIT_KHR", 0x200000000, true},
    {"VIDEO_DECODE_OUTPUT_BIT_KHR", 0x02000000, false},
    {"VIDEO_DECODE_DPB_BIT_KHR", 0x04000000, false},
    {"ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR", 0x20000000, false},
    {"FRAGMENT_DENSITY_MAP_BIT_EXT", 0x01000000, false},
    {"FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR", 0x40000000, false},
    {"VIDEO_ENCODE_INPUT_BIT_KHR", 0x08000000, false},
    {"VIDEO_ENCODE_DPB_BIT_KHR", 0x10000000, false},
    {"LINEAR_COLOR_ATTACHMENT_BIT_NV", 0x4000000000, false},
    {"WEIGHT_IMAGE_BIT_QCOM", 0x400000000, false},
    {"WEIGHT_SAMPLED_IMAGE_BIT_QCOM", 0x800000000, false},
    {"BLOCK_MATCHING_BIT_QCOM", 0x1000000000, false},
    {"BOX_FILTER_SAMPLED_BIT_QCOM", 0x2000000000, false},
    {"OPTICAL_FLOW_IMAGE_BIT_NV", 0x10000000000, false},
    {"OPTICAL_FLOW_VECTOR_BIT_NV", 0x20000000000, false},
    {"OPTICAL_FLOW_COST_BIT_NV", 0x40000000000, false},
    {"HOST_IMAGE_TRANSFER_BIT_EXT", 0x400000000000, false},
};

EnumValueSet const VkRenderingFlagsSets[] = {
    {"CONTENTS_SECONDARY_COMMAND_BUFFERS", 0x00000001, false},
    {"CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT_KHR", 0x00000001, true},
    {"SUSPENDING", 0x00000002, false},
    {"SUSPENDING_BIT_KHR", 0x00000002, true},
    {"RESUMING", 0x00000004, false},
    {"RESUMING_BIT_KHR", 0x00000004, true},
    {"ENABLE_LEGACY_DITHERING_BIT_EXT", 0x00000008, false},
    {"CONTENTS_INLINE_BIT_EXT", 0x00000010, false},
};

EnumValueSet const VkMemoryDecompressionMethodFlagsNVSets[] = {
    {"GDEFLATE_1_0", 0x00000001, false},
};

EnumValueSet const VkBuildMicromapFlagsEXTSets[] = {
    {"PREFER_FAST_TRACE", 0x00000001, false},
    {"PREFER_FAST_BUILD", 0x00000002, false},
    {"ALLOW_COMPACTION", 0x00000004, false},
};

EnumValueSet const VkMicromapCreateFlagsEXTSets[] = {
    {"DEVICE_ADDRESS_CAPTURE_REPLAY", 0x00000001, false},
};

EnumValueSet const VkPipelineCreateFlags2KHRSets[] = {
    {"DISABLE_OPTIMIZATION", 0x00000001, false},
    {"ALLOW_DERIVATIVES", 0x00000002, false},
    {"DERIVATIVE", 0x00000004, false},
    {"VIEW_INDEX_FROM_DEVICE_INDEX", 0x00000008, false},
    {"DISPATCH_BASE", 0x00000010, false},
    {"CAPTURE_STATISTICS", 0x00000040, false},
    {"CAPTURE_INTERNAL_REPRESENTATIONS", 0x00000080, false},
    {"FAIL_ON_PIPELINE_COMPILE_REQUIRED", 0x00000100, false},
    {"EARLY_RETURN_ON_FAILURE", 0x00000200, false},
    {"LIBRARY", 0x00000800, false},
    {"RAY_TRACING_SKIP_TRIANGLES", 0x00001000, false},
    {"RAY_TRACING_SKIP_AABBS", 0x00002000, false},
    {"RAY_TRACING_NO_NULL_ANY_HIT_SHADERS", 0x00004000, false},
    {"RAY_TRACING_NO_NULL_CLOSEST_HIT_SHADERS", 0x00008000, false},
    {"RAY_TRACING_NO_NULL_MISS_SHADERS", 0x00010000, false},
    {"RAY_TRACING_NO_NULL_INTERSECTION_SHADERS", 0x00020000, false},
    {"RAY_TRACING_SHADER_GROUP_HANDLE_CAPTURE_REPLAY", 0x00080000, false},
    {"RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT", 0x00200000, false},
    {"RESERVED_BIT_28_NV", 0x10000000, false},
    {"DEFER_COMPILE", 0x00000020, false},
    {"LINK_TIME_OPTIMIZATION", 0x00000400, false},
    {"RETAIN_LINK_TIME_OPTIMIZATION_INFO", 0x00800000, false},
    {"INDIRECT_BINDABLE", 0x00040000, false},
    {"RAY_TRACING_ALLOW_MOTION", 0x00100000, false},
    {"RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT", 0x00400000, false},
    {"RAY_TRACING_OPACITY_MICROMAP", 0x01000000, false},
    {"COLOR_ATTACHMENT_FEEDBACK_LOOP", 0x02000000, false},
    {"DEPTH_STENCIL_ATTACHMENT_FEEDBACK_LOOP", 0x04000000, false},
    {"NO_PROTECTED_ACCESS", 0x08000000, false},
    {"PROTECTED_ACCESS_ONLY", 0x40000000, false},
    {"DESCRIPTOR_BUFFER", 0x20000000, false},
    {"DEFER_COMPILE_BIT_NV", 0x00000020, false},
    {"LINK_TIME_OPTIMIZATION_BIT_EXT", 0x00000400, false},
    {"RETAIN_LINK_TIME_OPTIMIZATION_INFO_BIT_EXT", 0x00800000, false},
    {"INDIRECT_BINDABLE_BIT_NV", 0x00040000, false},
    {"RAY_TRACING_ALLOW_MOTION_BIT_NV", 0x00100000, false},
    {"RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT", 0x00400000, false},
    {"RAY_TRACING_OPACITY_MICROMAP_BIT_EXT", 0x01000000, false},
    {"COLOR_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT", 0x02000000, false},
    {"DEPTH_STENCIL_ATTACHMENT_FEEDBACK_LOOP_BIT_EXT", 0x04000000, false},
    {"NO_PROTECTED_ACCESS_BIT_EXT", 0x08000000, false},
    {"PROTECTED_ACCESS_ONLY_BIT_EXT", 0x40000000, false},
    {"RAY_TRACING_DISPLACEMENT_MICROMAP_BIT_NV", 0x10000000, false},
    {"DESCRIPTOR_BUFFER_BIT_EXT", 0x20000000, false},
};

EnumValueSet const VkBufferUsageFlags2KHRSets[] = {
    {"TRANSFER_SRC", 0x00000001, false},
    {"TRANSFER_DST", 0x00000002, false},
    {"UNIFORM_TEXEL_BUFFER", 0x00000004, false},
    {"STORAGE_TEXEL_BUFFER", 0x00000008, false},
    {"UNIFORM_BUFFER", 0x00000010, false},
    {"STORAGE_BUFFER", 0x00000020, false},
    {"INDEX_BUFFER", 0x00000040, false},
    {"VERTEX_BUFFER", 0x00000080, false},
    {"INDIRECT_BUFFER", 0x00000100, false},
    {"EXECUTION_GRAPH_SCRATCH_BIT_AMDX", 0x02000000, false},
    {"SHADER_BINDING_TABLE", 0x00000400, false},
    {"VIDEO_DECODE_SRC", 0x00002000, false},
    {"VIDEO_DECODE_DST", 0x00004000, false},
    {"VIDEO_ENCODE_DST", 0x00008000, false},
    {"VIDEO_ENCODE_SRC", 0x00010000, false},
    {"SHADER_DEVICE_ADDRESS", 0x00020000, false},
    {"ACCELERATION_STRUCTURE_BUILD_INPUT_READ_ONLY", 0x00080000, false},
    {"ACCELERATION_STRUCTURE_STORAGE", 0x00100000, false},
    {"CONDITIONAL_RENDERING", 0x00000200, false},
    {"RAY_TRACING", 0x00000400, true},
    {"TRANSFORM_FEEDBACK_BUFFER", 0x00000800, false},
    {"TRANSFORM_FEEDBACK_COUNTER_BUFFER", 0x00001000, false},
    {"SAMPLER_DESCRIPTOR_BUFFER", 0x00200000, false},
    {"RESOURCE_DESCRIPTOR_BUFFER", 0x00400000, false},
    {"PUSH_DESCRIPTORS_DESCRIPTOR_BUFFER", 0x04000000, false},
    {"MICROMAP_BUILD_INPUT_READ_ONLY", 0x00800000, false},
    {"MICROMAP_STORAGE", 0x01000000, false},
    {"CONDITIONAL_RENDERING_BIT_EXT", 0x00000200, false},
    {"RAY_TRACING_BIT_NV", 0x00000400, true},
    {"TRANSFORM_FEEDBACK_BUFFER_BIT_EXT", 0x00000800, false},
    {"TRANSFORM_FEEDBACK_COUNTER_BUFFER_BIT_EXT", 0x00001000, false},
    {"SAMPLER_DESCRIPTOR_BUFFER_BIT_EXT", 0x00200000, false},
    {"RESOURCE_DESCRIPTOR_BUFFER_BIT_EXT", 0x00400000, false},
    {"PUSH_DESCRIPTORS_DESCRIPTOR_BUFFER_BIT_EXT", 0x04000000, false},
    {"MICROMAP_BUILD_INPUT_READ_ONLY_BIT_EXT", 0x00800000, false},
    {"MICROMAP_STORAGE_BIT_EXT", 0x01000000, false},
};

EnumValueSet const VkCompositeAlphaFlagsKHRSets[] = {
    {"OPAQUE", 0x00000001, false},
    {"PRE_MULTIPLIED", 0x00000002, false},
    {"POST_MULTIPLIED", 0x00000004, false},
    {"INHERIT", 0x00000008, false},
};

EnumValueSet const VkDisplayPlaneAlphaFlagsKHRSets[] = {
    {"OPAQUE", 0x00000001, false},
    {"GLOBAL", 0x00000002, false},
    {"PER_PIXEL", 0x00000004, false},
    {"PER_PIXEL_PREMULTIPLIED", 0x00000008, false},
};

EnumValueSet const VkSurfaceTransformFlagsKHRSets[] = {
    {"IDENTITY", 0x00000001, false},
    {"ROTATE_90", 0x00000002, false},
    {"ROTATE_180", 0x00000004, false},
    {"ROTATE_270", 0x00000008, false},
    {"HORIZONTAL_MIRROR", 0x00000010, false},
    {"HORIZONTAL_MIRROR_ROTATE_90", 0x00000020, false},
    {"HORIZONTAL_MIRROR_ROTATE_180", 0x00000040, false},
    {"HORIZONTAL_MIRROR_ROTATE_270", 0x00000080, false},
    {"INHERIT", 0x00000100, false},
};

EnumValueSet const VkSwapchainCreateFlagsKHRSets[] = {
    {"SPLIT_INSTANCE_BIND_REGIONS", 0x00000001, false},
    {"PROTECTED", 0x00000002, false},
    {"MUTABLE_FORMAT", 0x00000004, false},
    {"DEFERRED_MEMORY_ALLOCATION_BIT_EXT", 0x00000008, false},
};

EnumValueSet const VkPeerMemoryFeatureFlagsSets[] = {
    {"COPY_SRC", 0x00000001, false},           {"COPY_DST", 0x00000002, false},
    {"GENERIC_SRC", 0x00000004, false},        {"GENERIC_DST", 0x00000008, false},
    {"COPY_SRC_BIT_KHR", 0x00000001, true},    {"COPY_DST_BIT_KHR", 0x00000002, true},
    {"GENERIC_SRC_BIT_KHR", 0x00000004, true}, {"GENERIC_DST_BIT_KHR", 0x00000008, true},
};

EnumValueSet const VkMemoryAllocateFlagsSets[] = {
    {"DEVICE_MASK", 0x00000001, false},
    {"DEVICE_MASK_BIT_KHR", 0x00000001, true},
    {"DEVICE_ADDRESS_BIT_KHR", 0x00000002, true},
    {"DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR", 0x00000004, true},
    {"DEVICE_ADDRESS", 0x00000002, false},
    {"DEVICE_ADDRESS_CAPTURE_REPLAY", 0x00000004, false},
};

EnumValueSet const VkDeviceGroupPresentModeFlagsKHRSets[] = {
    {"LOCAL", 0x00000001, false},
    {"REMOTE", 0x00000002, false},
    {"SUM", 0x00000004, false},
    {"LOCAL_MULTI_DEVICE", 0x00000008, false},
};

EnumValueSet const VkDebugReportFlagsEXTSets[] = {
    {"INFORMATION", 0x00000001, false},
    {"WARNING", 0x00000002, false},
    {"PERFORMANCE_WARNING", 0x00000004, false},
    {"ERROR", 0x00000008, false},
    {"DEBUG", 0x00000010, false},
};

EnumValueSet const VkExternalMemoryHandleTypeFlagsNVSets[] = {
    {"OPAQUE_WIN32", 0x00000001, false},
    {"OPAQUE_WIN32_KMT", 0x00000002, false},
    {"D3D11_IMAGE", 0x00000004, false},
    {"D3D11_IMAGE_KMT", 0x00000008, false},
};

EnumValueSet const VkExternalMemoryFeatureFlagsNVSets[] = {
    {"DEDICATED_ONLY", 0x00000001, false},
    {"EXPORTABLE", 0x00000002, false},
    {"IMPORTABLE", 0x00000004, false},
};

EnumValueSet const VkExternalMemoryHandleTypeFlagsSets[] = {
    {"OPAQUE_FD", 0x00000001, false},
    {"OPAQUE_WIN32", 0x00000002, false},
    {"OPAQUE_WIN32_KMT", 0x00000004, false},
    {"D3D11_TEXTURE", 0x00000008, false},
    {"D3D11_TEXTURE_KMT", 0x00000010, false},
    {"D3D12_HEAP", 0x00000020, false},
    {"D3D12_RESOURCE", 0x00000040, false},
    {"OPAQUE_FD_BIT_KHR", 0x00000001, true},
    {"OPAQUE_WIN32_BIT_KHR", 0x00000002, true},
    {"OPAQUE_WIN32_KMT_BIT_KHR", 0x00000004, true},
    {"D3D11_TEXTURE_BIT_KHR", 0x00000008, true},
    {"D3D11_TEXTURE_KMT_BIT_KHR", 0x00000010, true},
    {"D3D12_HEAP_BIT_KHR", 0x00000020, true},
    {"D3D12_RESOURCE_BIT_KHR", 0x00000040, true},
    {"DMA_BUF_BIT_EXT", 0x00000200, false},
    {"ANDROID_HARDWARE_BUFFER_BIT_ANDROID", 0x00000400, false},
    {"HOST_ALLOCATION_BIT_EXT", 0x00000080, false},
    {"HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT", 0x00000100, false},
    {"ZIRCON_VMO_BIT_FUCHSIA", 0x00000800, false},
    {"RDMA_ADDRESS_BIT_NV", 0x00001000, false},
    {"SCREEN_BUFFER_BIT_QNX", 0x00004000, false},
};

EnumValueSet const VkExternalMemoryFeatureFlagsSets[] = {
    {"DEDICATED_ONLY", 0x00000001, false},    {"EXPORTABLE", 0x00000002, false},
    {"IMPORTABLE", 0x00000004, false},        {"DEDICATED_ONLY_BIT_KHR", 0x00000001, true},
    {"EXPORTABLE_BIT_KHR", 0x00000002, true}, {"IMPORTABLE_BIT_KHR", 0x00000004, true},
};

EnumValueSet const VkExternalSemaphoreHandleTypeFlagsSets[] = {
    {"OPAQUE_FD", 0x00000001, false},
    {"OPAQUE_WIN32", 0x00000002, false},
    {"OPAQUE_WIN32_KMT", 0x00000004, false},
    {"D3D12_FENCE", 0x00000008, false},
    {"SYNC_FD", 0x00000010, false},
    {"OPAQUE_FD_BIT_KHR", 0x00000001, true},
    {"OPAQUE_WIN32_BIT_KHR", 0x00000002, true},
    {"OPAQUE_WIN32_KMT_BIT_KHR", 0x00000004, true},
    {"D3D12_FENCE_BIT_KHR", 0x00000008, true},
    {"SYNC_FD_BIT_KHR", 0x00000010, true},
    {"D3D11_FENCE", 0x00000008, true},
    {"ZIRCON_EVENT_BIT_FUCHSIA", 0x00000080, false},
};

EnumValueSet const VkExternalSemaphoreFeatureFlagsSets[] = {
    {"EXPORTABLE", 0x00000001, false},
    {"IMPORTABLE", 0x00000002, false},
    {"EXPORTABLE_BIT_KHR", 0x00000001, true},
    {"IMPORTABLE_BIT_KHR", 0x00000002, true},
};

EnumValueSet const VkSemaphoreImportFlagsSets[] = {
    {"TEMPORARY", 0x00000001, false},
    {"TEMPORARY_BIT_KHR", 0x00000001, true},
};

EnumValueSet const VkExternalFenceHandleTypeFlagsSets[] = {
    {"OPAQUE_FD", 0x00000001, false},
    {"OPAQUE_WIN32", 0x00000002, false},
    {"OPAQUE_WIN32_KMT", 0x00000004, false},
    {"SYNC_FD", 0x00000008, false},
    {"OPAQUE_FD_BIT_KHR", 0x00000001, true},
    {"OPAQUE_WIN32_BIT_KHR", 0x00000002, true},
    {"OPAQUE_WIN32_KMT_BIT_KHR", 0x00000004, true},
    {"SYNC_FD_BIT_KHR", 0x00000008, true},
};

EnumValueSet const VkExternalFenceFeatureFlagsSets[] = {
    {"EXPORTABLE", 0x00000001, false},
    {"IMPORTABLE", 0x00000002, false},
    {"EXPORTABLE_BIT_KHR", 0x00000001, true},
    {"IMPORTABLE_BIT_KHR", 0x00000002, true},
};

EnumValueSet const VkFenceImportFlagsSets[] = {
    {"TEMPORARY", 0x00000001, false},
    {"TEMPORARY_BIT_KHR", 0x00000001, true},
};

EnumValueSet const VkSurfaceCounterFlagsEXTSets[] = {
    {"VBLANK", 0x00000001, true},
    {"VBLANK", 0x00000001, false},
};

EnumValueSet const VkDebugUtilsMessageSeverityFlagsEXTSets[] = {
    {"VERBOSE", 0x00000001, false},
    {"INFO", 0x00000010, false},
    {"WARNING", 0x00000100, false},
    {"ERROR", 0x00001000, false},
};

EnumValueSet const VkDebugUtilsMessageTypeFlagsEXTSets[] = {
    {"GENERAL", 0x00000001, false},
    {"VALIDATION", 0x00000002, false},
    {"PERFORMANCE", 0x00000004, false},
    {"DEVICE_ADDRESS_BINDING", 0x00000008, false},
};

EnumValueSet const VkDescriptorBindingFlagsSets[] = {
    {"UPDATE_AFTER_BIND", 0x00000001, false},
    {"UPDATE_UNUSED_WHILE_PENDING", 0x00000002, false},
    {"PARTIALLY_BOUND", 0x00000004, false},
    {"VARIABLE_DESCRIPTOR_COUNT", 0x00000008, false},
    {"UPDATE_AFTER_BIND_BIT_EXT", 0x00000001, true},
    {"UPDATE_UNUSED_WHILE_PENDING_BIT_EXT", 0x00000002, true},
    {"PARTIALLY_BOUND_BIT_EXT", 0x00000004, true},
    {"VARIABLE_DESCRIPTOR_COUNT_BIT_EXT", 0x00000008, true},
};

EnumValueSet const VkConditionalRenderingFlagsEXTSets[] = {
    {"INVERTED", 0x00000001, false},
};

EnumValueSet const VkResolveModeFlagsSets[] = {
    {"NONE", 0, false},
    {"SAMPLE_ZERO", 0x00000001, false},
    {"AVERAGE", 0x00000002, false},
    {"MIN", 0x00000004, false},
    {"MAX", 0x00000008, false},
    {"NONE_KHR", 0, true},
    {"SAMPLE_ZERO_BIT_KHR", 0x00000001, true},
    {"AVERAGE_BIT_KHR", 0x00000002, true},
    {"MIN_BIT_KHR", 0x00000004, true},
    {"MAX_BIT_KHR", 0x00000008, true},
    {"EXTERNAL_FORMAT_DOWNSAMPLE_ANDROID", 0x00000010, false},
};

EnumValueSet const VkSwapchainImageUsageFlagsANDROIDSets[] = {
    {"SHARED", 0x00000001, false},
};

EnumValueSet const VkToolPurposeFlagsSets[] = {
    {"VALIDATION", 0x00000001, false},
    {"VALIDATION_BIT_EXT", 0x00000001, true},
    {"PROFILING", 0x00000002, false},
    {"PROFILING_BIT_EXT", 0x00000002, true},
    {"TRACING", 0x00000004, false},
    {"TRACING_BIT_EXT", 0x00000004, true},
    {"ADDITIONAL_FEATURES", 0x00000008, false},
    {"ADDITIONAL_FEATURES_BIT_EXT", 0x00000008, true},
    {"MODIFYING_FEATURES", 0x00000010, false},
    {"MODIFYING_FEATURES_BIT_EXT", 0x00000010, true},
    {"DEBUG_REPORTING_BIT_EXT", 0x00000020, false},
    {"DEBUG_MARKERS_BIT_EXT", 0x00000040, false},
};

EnumValueSet const VkSubmitFlagsSets[] = {
    {"PROTECTED", 0x00000001, false},
    {"PROTECTED_BIT_KHR", 0x00000001, true},
};

EnumValueSet const VkHostImageCopyFlagsEXTSets[] = {
    {"MEMCPY", 0x00000001, false},
};

EnumValueSet const VkImageConstraintsInfoFlagsFUCHSIASets[] = {
    {"CPU_READ_RARELY", 0x00000001, false},    {"CPU_READ_OFTEN", 0x00000002, false},
    {"CPU_WRITE_RARELY", 0x00000004, false},   {"CPU_WRITE_OFTEN", 0x00000008, false},
    {"PROTECTED_OPTIONAL", 0x00000010, false},
};

EnumValueSet const VkGraphicsPipelineLibraryFlagsEXTSets[] = {
    {"VERTEX_INPUT_INTERFACE", 0x00000001, false},
    {"PRE_RASTERIZATION_SHADERS", 0x00000002, false},
    {"FRAGMENT_SHADER", 0x00000004, false},
    {"FRAGMENT_OUTPUT_INTERFACE", 0x00000008, false},
};

EnumValueSet const VkImageCompressionFlagsEXTSets[] = {
    {"DEFAULT", 0, false},
    {"FIXED_RATE_DEFAULT", 0x00000001, false},
    {"FIXED_RATE_EXPLICIT", 0x00000002, false},
    {"DISABLED", 0x00000004, false},
};

EnumValueSet const VkImageCompressionFixedRateFlagsEXTSets[] = {
    {"NONE", 0, false},           {"1BPC", 0x00000001, false},  {"2BPC", 0x00000002, false},
    {"3BPC", 0x00000004, false},  {"4BPC", 0x00000008, false},  {"5BPC", 0x00000010, false},
    {"6BPC", 0x00000020, false},  {"7BPC", 0x00000040, false},  {"8BPC", 0x00000080, false},
    {"9BPC", 0x00000100, false},  {"10BPC", 0x00000200, false}, {"11BPC", 0x00000400, false},
    {"12BPC", 0x00000800, false}, {"13BPC", 0x00001000, false}, {"14BPC", 0x00002000, false},
    {"15BPC", 0x00004000, false}, {"16BPC", 0x00008000, false}, {"17BPC", 0x00010000, false},
    {"18BPC", 0x00020000, false}, {"19BPC", 0x00040000, false}, {"20BPC", 0x00080000, false},
    {"21BPC", 0x00100000, false}, {"22BPC", 0x00200000, false}, {"23BPC", 0x00400000, false},
    {"24BPC", 0x00800000, false},
};

EnumValueSet const VkExportMetalObjectTypeFlagsEXTSets[] = {
    {"METAL_DEVICE", 0x00000001, false},    {"METAL_COMMAND_QUEUE", 0x00000002, false},
    {"METAL_BUFFER", 0x00000004, false},    {"METAL_TEXTURE", 0x00000008, false},
    {"METAL_IOSURFACE", 0x00000010, false}, {"METAL_SHARED_EVENT", 0x00000020, false},
};

EnumValueSet const VkDeviceAddressBindingFlagsEXTSets[] = {
    {"INTERNAL_OBJECT", 0x00000001, false},
};

EnumValueSet const VkOpticalFlowGridSizeFlagsNVSets[] = {
    {"UNKNOWN", 0, false},      {"1X1", 0x00000001, false}, {"2X2", 0x00000002, false},
    {"4X4", 0x00000004, false}, {"8X8", 0x00000008, false},
};

EnumValueSet const VkOpticalFlowUsageFlagsNVSets[] = {
    {"UNKNOWN", 0, false},       {"INPUT", 0x00000001, false}, {"OUTPUT", 0x00000002, false},
    {"HINT", 0x00000004, false}, {"COST", 0x00000008, false},  {"GLOBAL_FLOW", 0x00000010, false},
};

EnumValueSet const VkOpticalFlowSessionCreateFlagsNVSets[] = {
    {"ENABLE_HINT", 0x00000001, false},        {"ENABLE_COST", 0x00000002, false},
    {"ENABLE_GLOBAL_FLOW", 0x00000004, false}, {"ALLOW_REGIONS", 0x00000008, false},
    {"BOTH_DIRECTIONS", 0x00000010, false},
};

EnumValueSet const VkOpticalFlowExecuteFlagsNVSets[] = {
    {"DISABLE_TEMPORAL_HINTS", 0x00000001, false},
};

EnumValueSet const VkFrameBoundaryFlagsEXTSets[] = {
    {"FRAME_END", 0x00000001, false},
};

EnumValueSet const VkPresentScalingFlagsEXTSets[] = {
    {"ONE_TO_ONE", 0x00000001, false},
    {"ASPECT_RATIO_STRETCH", 0x00000002, false},
    {"STRETCH", 0x00000004, false},
};

EnumValueSet const VkPresentGravityFlagsEXTSets[] = {
    {"MIN", 0x00000001, false},
    {"MAX", 0x00000002, false},
    {"CENTERED", 0x00000004, false},
};

EnumValueSet const VkShaderCreateFlagsEXTSets[] = {
    {"LINK_STAGE", 0x00000001, false},
    {"ALLOW_VARYING_SUBGROUP_SIZE", 0x00000002, false},
    {"REQUIRE_FULL_SUBGROUPS", 0x00000004, false},
    {"NO_TASK_SHADER", 0x00000008, false},
    {"DISPATCH_BASE", 0x00000010, false},
    {"FRAGMENT_SHADING_RATE_ATTACHMENT", 0x00000020, false},
    {"FRAGMENT_DENSITY_MAP_ATTACHMENT", 0x00000040, false},
};

EnumValueSet const VkPhysicalDeviceSchedulingControlsFlagsARMSets[] = {
    {"SHADER_CORE_COUNT", 0x00000001, false},
};

EnumValueSet const VkVideoCodecOperationFlagsKHRSets[] = {
    {"ENCODE_H264_BIT_EXT", 0x00010000, false}, {"DECODE_H264_BIT_EXT", 0x00000001, false},
    {"DECODE_H265_BIT_EXT", 0x00000002, false}, {"INVALID", 0, false},
    {"ENCODE_H265_BIT_EXT", 0x00020000, false}, {"NONE", 0, false},
    {"DECODE_H264", 0x00000001, false},         {"DECODE_H265", 0x00000002, false},
};

EnumValueSet const VkVideoCapabilityFlagsKHRSets[] = {
    {"PROTECTED_CONTENT", 0x00000001, false},
    {"SEPARATE_REFERENCE_IMAGES", 0x00000002, false},
};

EnumValueSet const VkVideoSessionCreateFlagsKHRSets[] = {
    {"PROTECTED_CONTENT", 0x00000001, false},
    {"DEFAULT", 0, false},
    {"ALLOW_ENCODE_PARAMETER_OPTIMIZATIONS", 0x00000002, false},
};

EnumValueSet const VkVideoCodingControlFlagsKHRSets[] = {
    {"RESET", 0x00000001, false},
    {"DEFAULT", 0, false},
    {"ENCODE_RATE_CONTROL", 0x00000002, false},
    {"ENCODE_RATE_CONTROL_LAYER", 0x00000004, false},
    {"ENCODE_QUALITY_LEVEL", 0x00000004, false},
};

EnumValueSet const VkVideoDecodeUsageFlagsKHRSets[] = {
    {"DEFAULT", 0, false},
    {"TRANSCODING", 0x00000001, false},
    {"OFFLINE", 0x00000002, false},
    {"STREAMING", 0x00000004, false},
};

EnumValueSet const VkVideoDecodeCapabilityFlagsKHRSets[] = {
    {"DPB_AND_OUTPUT_COINCIDE", 0x00000001, false},
    {"DPB_AND_OUTPUT_DISTINCT", 0x00000002, false},
    {"DEFAULT", 0, false},
};

EnumValueSet const VkVideoDecodeFlagsKHRSets[] = {
    {"DEFAULT", 0, false},
    {"RESERVED_0", 0x00000001, false},
};

EnumValueSet const VkVideoDecodeH264PictureLayoutFlagsKHRSets[] = {
    {"PROGRESSIVE", 0, false},
    {"INTERLACED_INTERLEAVED_LINES", 0x00000001, false},
    {"INTERLACED_SEPARATE_PLANES", 0x00000002, false},
};

EnumValueSet const VkVideoEncodeFlagsKHRSets[] = {
    {"DEFAULT", 0, false},
    {"RESERVED_0", 0x00000001, false},
};

EnumValueSet const VkVideoEncodeUsageFlagsKHRSets[] = {
    {"DEFAULT", 0, false},
    {"TRANSCODING", 0x00000001, false},
    {"STREAMING", 0x00000002, false},
    {"RECORDING", 0x00000004, false},
    {"CONFERENCING", 0x00000008, false},
};

EnumValueSet const VkVideoEncodeContentFlagsKHRSets[] = {
    {"DEFAULT", 0, false},
    {"CAMERA", 0x00000001, false},
    {"DESKTOP", 0x00000002, false},
    {"RENDERED", 0x00000004, false},
};

EnumValueSet const VkVideoEncodeCapabilityFlagsKHRSets[] = {
    {"PRECEDING_EXTERNALLY_ENCODED_BYTES", 0x00000001, false},
    {"DEFAULT", 0, false},
    {"INSUFFICIENT_BITSTREAM_BUFFER_RANGE_DETECTION", 0x00000002, false},
};

EnumValueSet const VkVideoEncodeFeedbackFlagsKHRSets[] = {
    {"BITSTREAM_BUFFER_OFFSET", 0x00000001, false},
    {"BITSTREAM_BYTES_WRITTEN", 0x00000002, false},
    {"BITSTREAM_HAS_OVERRIDES", 0x00000004, false},
};

EnumValueSet const VkVideoEncodeRateControlFlagsKHRSets[] = {
    {"DEFAULT", 0, false},
    {"RESET", 0x00000001, false},
    {"RESERVED_0", 0x00000001, false},
};

EnumValueSet const VkVideoEncodeRateControlModeFlagsKHRSets[] = {
    {"CBR", 0x00000002, false}, {"VBR", 0x00000004, false},      {"NONE", 0, false},
    {"DEFAULT", 0, false},      {"DISABLED", 0x00000001, false},
};

EnumValueSet const VkVideoChromaSubsamplingFlagsKHRSets[] = {
    {"MONOCHROME", 0x00000001, false}, {"420", 0x00000002, false}, {"422", 0x00000004, false},
    {"444", 0x00000008, false},        {"INVALID", 0, false},      {"INVALID", 0, false},
};

EnumValueSet const VkVideoComponentBitDepthFlagsKHRSets[] = {
    {"INVALID", 0, false},
    {"8", 0x00000001, false},
    {"10", 0x00000004, false},
    {"12", 0x00000010, false},
};

EnumValueSet const VkVideoEncodeH264CapabilityFlagsEXTSets[] = {
    {"CHROMA_QP_OFFSET", 0x00000040, false},
    {"SECOND_CHROMA_QP_OFFSET", 0x00000080, false},
    {"TRANSFORM_8X8", 0x00002000, false},
    {"CABAC", 0x00004000, false},
    {"CAVLC", 0x00008000, false},
    {"DEBLOCKING_FILTER_DISABLED", 0x00010000, false},
    {"DEBLOCKING_FILTER_ENABLED", 0x00020000, false},
    {"DEBLOCKING_FILTER_PARTIAL", 0x00040000, false},
    {"MULTIPLE_SLICE_PER_FRAME", 0x00100000, false},
    {"WEIGHTED_BI_PRED_IMPLICIT", 0x00000004, false},
    {"EVENLY_DISTRIBUTED_SLICE_SIZE", 0x00000400, false},
    {"OPTIONAL_RC_EXTENSION_STRUCT", 0x00000800, false},
    {"HRD_COMPLIANCE", 0x00000001, false},
    {"ROW_UNALIGNED_SLICE", 0x00000004, false},
    {"DIFFERENT_SLICE_TYPE", 0x00000008, false},
    {"SEPARATE_COLOUR_PLANE", 0x00000004, false},
    {"QPPRIME_Y_ZERO_TRANSFORM_BYPASS", 0x00000008, false},
    {"SCALING_LISTS", 0x00000010, false},
    {"PIC_INIT_QP_MINUS26", 0x00000100, false},
    {"WEIGHTED_PRED", 0x00000200, false},
    {"WEIGHTED_BIPRED_EXPLICIT", 0x00000400, false},
    {"WEIGHTED_BIPRED_IMPLICIT", 0x00000800, false},
    {"WEIGHTED_PRED_NO_TABLE", 0x00001000, false},
    {"DISABLE_DIRECT_SPATIAL_MV_PRED", 0x00080000, false},
    {"SLICE_MB_COUNT", 0x00200000, false},
    {"DIRECT_8X8_INFERENCE", 0x00000001, false},
    {"B_FRAME_IN_L1_LIST", 0x00000020, false},
    {"DIRECT_8X8_INFERENCE_ENABLED", 0x00000001, false},
    {"DIRECT_8X8_INFERENCE_DISABLED", 0x00000002, false},
    {"DIFFERENT_REFERENCE_FINAL_LISTS", 0x02000000, false},
    {"PREDICTION_WEIGHT_TABLE_GENERATED", 0x00000002, false},
    {"B_FRAME_IN_L0_LIST", 0x00000010, false},
    {"PER_PICTURE_TYPE_MIN_MAX_QP", 0x00000040, false},
    {"PER_SLICE_CONSTANT_QP", 0x00000080, false},
    {"GENERATE_PREFIX_NALU", 0x00000100, false},
};

EnumValueSet const VkVideoEncodeH264StdFlagsEXTSets[] = {
    {"SEPARATE_COLOR_PLANE_FLAG_SET", 0x00000001, false},
    {"QPPRIME_Y_ZERO_TRANSFORM_BYPASS_FLAG_SET", 0x00000002, false},
    {"SCALING_MATRIX_PRESENT_FLAG_SET", 0x00000004, false},
    {"CHROMA_QP_INDEX_OFFSET", 0x00000008, false},
    {"SECOND_CHROMA_QP_INDEX_OFFSET", 0x00000010, false},
    {"PIC_INIT_QP_MINUS26", 0x00000020, false},
    {"WEIGHTED_PRED_FLAG_SET", 0x00000040, false},
    {"WEIGHTED_BIPRED_IDC_EXPLICIT", 0x00000080, false},
    {"WEIGHTED_BIPRED_IDC_IMPLICIT", 0x00000100, false},
    {"TRANSFORM_8X8_MODE_FLAG_SET", 0x00000200, false},
    {"DIRECT_SPATIAL_MV_PRED_FLAG_UNSET", 0x00000400, false},
    {"ENTROPY_CODING_MODE_FLAG_UNSET", 0x00000800, false},
    {"ENTROPY_CODING_MODE_FLAG_SET", 0x00001000, false},
    {"DIRECT_8X8_INFERENCE_FLAG_UNSET", 0x00002000, false},
    {"CONSTRAINED_INTRA_PRED_FLAG_SET", 0x00004000, false},
    {"DEBLOCKING_FILTER_DISABLED", 0x00008000, false},
    {"DEBLOCKING_FILTER_ENABLED", 0x00010000, false},
    {"DEBLOCKING_FILTER_PARTIAL", 0x00020000, false},
    {"SLICE_QP_DELTA", 0x00080000, false},
    {"DIFFERENT_SLICE_QP_DELTA", 0x00100000, false},
};

EnumValueSet const VkVideoEncodeH264RateControlFlagsEXTSets[] = {
    {"ATTEMPT_HRD_COMPLIANCE", 0x00000001, false},
    {"REGULAR_GOP", 0x00000002, false},
    {"REFERENCE_PATTERN_FLAT", 0x00000004, false},
    {"REFERENCE_PATTERN_DYADIC", 0x00000008, false},
    {"TEMPORAL_LAYER_PATTERN_DYADIC", 0x00000010, false},
};

EnumValueSet const VkVideoEncodeH265CapabilityFlagsEXTSets[] = {
    {"WEIGHTED_BI_PRED_IMPLICIT", 0x00000001, false},
    {"TRANSFORM_8X8", 0x00000002, false},
    {"CHROMA_QP_OFFSET", 0x00000004, false},
    {"SECOND_CHROMA_QP_OFFSET", 0x00000008, false},
    {"DEBLOCKING_FILTER_DISABLED", 0x00000010, false},
    {"DEBLOCKING_FILTER_ENABLED", 0x00000020, false},
    {"DEBLOCKING_FILTER_PARTIAL", 0x00000040, false},
    {"MULTIPLE_SLICE_PER_FRAME", 0x00000080, false},
    {"EVENLY_DISTRIBUTED_SLICE_SIZE", 0x00000100, false},
    {"HRD_COMPLIANCE", 0x00000001, false},
    {"ROW_UNALIGNED_SLICE_SEGMENT", 0x00000004, false},
    {"SEPARATE_COLOUR_PLANE", 0x00000001, false},
    {"SCALING_LISTS", 0x00000002, false},
    {"SAMPLE_ADAPTIVE_OFFSET_ENABLED", 0x00000004, false},
    {"PCM_ENABLE", 0x00000008, false},
    {"SPS_TEMPORAL_MVP_ENABLED", 0x00000010, false},
    {"INIT_QP_MINUS26", 0x00000040, false},
    {"LOG2_PARALLEL_MERGE_LEVEL_MINUS2", 0x00000080, false},
    {"SIGN_DATA_HIDING_ENABLED", 0x00000100, false},
    {"TRANSFORM_SKIP_ENABLED", 0x00000200, false},
    {"PPS_SLICE_CHROMA_QP_OFFSETS_PRESENT", 0x00000800, false},
    {"WEIGHTED_PRED", 0x00001000, false},
    {"WEIGHTED_BIPRED", 0x00002000, false},
    {"WEIGHTED_PRED_NO_TABLE", 0x00004000, false},
    {"TRANSQUANT_BYPASS_ENABLED", 0x00008000, false},
    {"ENTROPY_CODING_SYNC_ENABLED", 0x00010000, false},
    {"DEBLOCKING_FILTER_OVERRIDE_ENABLED", 0x00020000, false},
    {"MULTIPLE_TILE_PER_FRAME", 0x00040000, false},
    {"MULTIPLE_SLICE_PER_TILE", 0x00080000, false},
    {"MULTIPLE_TILE_PER_SLICE", 0x00100000, false},
    {"SLICE_SEGMENT_CTB_COUNT", 0x00200000, false},
    {"DEPENDENT_SLICE_SEGMENT", 0x00800000, false},
    {"DIFFERENT_SLICE_TYPE", 0x01000000, false},
    {"B_FRAME_IN_L1_LIST", 0x00000020, false},
    {"TRANSFORM_SKIP_DISABLED", 0x00000400, false},
    {"DIFFERENT_REFERENCE_FINAL_LISTS", 0x04000000, false},
    {"PREDICTION_WEIGHT_TABLE_GENERATED", 0x00000002, false},
    {"DIFFERENT_SLICE_SEGMENT_TYPE", 0x00000008, false},
    {"B_FRAME_IN_L0_LIST", 0x00000010, false},
    {"PER_PICTURE_TYPE_MIN_MAX_QP", 0x00000040, false},
    {"PER_SLICE_SEGMENT_CONSTANT_QP", 0x00000080, false},
    {"MULTIPLE_TILES_PER_SLICE_SEGMENT", 0x00000100, false},
    {"MULTIPLE_SLICE_SEGMENTS_PER_TILE", 0x00000200, false},
};

EnumValueSet const VkVideoEncodeH265StdFlagsEXTSets[] = {
    {"SEPARATE_COLOR_PLANE_FLAG_SET", 0x00000001, false},
    {"SAMPLE_ADAPTIVE_OFFSET_ENABLED_FLAG_SET", 0x00000002, false},
    {"SCALING_LIST_DATA_PRESENT_FLAG_SET", 0x00000004, false},
    {"PCM_ENABLED_FLAG_SET", 0x00000008, false},
    {"SPS_TEMPORAL_MVP_ENABLED_FLAG_SET", 0x00000010, false},
    {"INIT_QP_MINUS26", 0x00000020, false},
    {"WEIGHTED_PRED_FLAG_SET", 0x00000040, false},
    {"WEIGHTED_BIPRED_FLAG_SET", 0x00000080, false},
    {"LOG2_PARALLEL_MERGE_LEVEL_MINUS2", 0x00000100, false},
    {"SIGN_DATA_HIDING_ENABLED_FLAG_SET", 0x00000200, false},
    {"TRANSFORM_SKIP_ENABLED_FLAG_SET", 0x00000400, false},
    {"TRANSFORM_SKIP_ENABLED_FLAG_UNSET", 0x00000800, false},
    {"PPS_SLICE_CHROMA_QP_OFFSETS_PRESENT_FLAG_SET", 0x00001000, false},
    {"TRANSQUANT_BYPASS_ENABLED_FLAG_SET", 0x00002000, false},
    {"CONSTRAINED_INTRA_PRED_FLAG_SET", 0x00004000, false},
    {"ENTROPY_CODING_SYNC_ENABLED_FLAG_SET", 0x00008000, false},
    {"DEBLOCKING_FILTER_OVERRIDE_ENABLED_FLAG_SET", 0x00010000, false},
    {"DEPENDENT_SLICE_SEGMENTS_ENABLED_FLAG_SET", 0x00020000, false},
    {"DEPENDENT_SLICE_SEGMENT_FLAG_SET", 0x00040000, false},
    {"SLICE_QP_DELTA", 0x00080000, false},
    {"DIFFERENT_SLICE_QP_DELTA", 0x00100000, false},
};

EnumValueSet const VkVideoEncodeH265RateControlFlagsEXTSets[] = {
    {"ATTEMPT_HRD_COMPLIANCE", 0x00000001, false},
    {"REGULAR_GOP", 0x00000002, false},
    {"REFERENCE_PATTERN_FLAT", 0x00000004, false},
    {"REFERENCE_PATTERN_DYADIC", 0x00000008, false},
    {"TEMPORAL_SUB_LAYER_PATTERN_DYADIC", 0x00000010, false},
};

EnumValueSet const VkVideoEncodeH265CtbSizeFlagsEXTSets[] = {
    {"16", 0x00000001, false},
    {"32", 0x00000002, false},
    {"64", 0x00000004, false},
    {"8", 0x00000001, false},
};

EnumValueSet const VkVideoEncodeH265TransformBlockSizeFlagsEXTSets[] = {
    {"4", 0x00000001, false},
    {"8", 0x00000002, false},
    {"16", 0x00000004, false},
    {"32", 0x00000008, false},
};

EnumValueSet const VkAttachmentLoadOpSets[] = {
    {"LOAD", 0, false},
    {"CLEAR", 1, false},
    {"DONT_CARE", 2, false},
    {"NONE_EXT", 1000400000, false},
};

EnumValueSet const VkAttachmentStoreOpSets[] = {
    {"STORE", 0, false},
    {"DONT_CARE", 1, false},
    {"NONE_QCOM", 1000301000, true},
    {"NONE_EXT", 1000301000, true},
    {"NONE_KHR", 1000301000, true},
    {"NONE", 1000301000, false},
};

EnumValueSet const VkBlendFactorSets[] = {
    {"ZERO", 0, false},
    {"ONE", 1, false},
    {"SRC_COLOR", 2, false},
    {"ONE_MINUS_SRC_COLOR", 3, false},
    {"DST_COLOR", 4, false},
    {"ONE_MINUS_DST_COLOR", 5, false},
    {"SRC_ALPHA", 6, false},
    {"ONE_MINUS_SRC_ALPHA", 7, false},
    {"DST_ALPHA", 8, false},
    {"ONE_MINUS_DST_ALPHA", 9, false},
    {"CONSTANT_COLOR", 10, false},
    {"ONE_MINUS_CONSTANT_COLOR", 11, false},
    {"CONSTANT_ALPHA", 12, false},
    {"ONE_MINUS_CONSTANT_ALPHA", 13, false},
    {"SRC_ALPHA_SATURATE", 14, false},
    {"SRC1_COLOR", 15, false},
    {"ONE_MINUS_SRC1_COLOR", 16, false},
    {"SRC1_ALPHA", 17, false},
    {"ONE_MINUS_SRC1_ALPHA", 18, false},
};

EnumValueSet const VkBlendOpSets[] = {
    {"ADD", 0, false},
    {"SUBTRACT", 1, false},
    {"REVERSE_SUBTRACT", 2, false},
    {"MIN", 3, false},
    {"MAX", 4, false},
    {"ZERO_EXT", 1000148000, false},
    {"SRC_EXT", 1000148001, false},
    {"DST_EXT", 1000148002, false},
    {"SRC_OVER_EXT", 1000148003, false},
    {"DST_OVER_EXT", 1000148004, false},
    {"SRC_IN_EXT", 1000148005, false},
    {"DST_IN_EXT", 1000148006, false},
    {"SRC_OUT_EXT", 1000148007, false},
    {"DST_OUT_EXT", 1000148008, false},
    {"SRC_ATOP_EXT", 1000148009, false},
    {"DST_ATOP_EXT", 1000148010, false},
    {"XOR_EXT", 1000148011, false},
    {"MULTIPLY_EXT", 1000148012, false},
    {"SCREEN_EXT", 1000148013, false},
    {"OVERLAY_EXT", 1000148014, false},
    {"DARKEN_EXT", 1000148015, false},
    {"LIGHTEN_EXT", 1000148016, false},
    {"COLORDODGE_EXT", 1000148017, false},
    {"COLORBURN_EXT", 1000148018, false},
    {"HARDLIGHT_EXT", 1000148019, false},
    {"SOFTLIGHT_EXT", 1000148020, false},
    {"DIFFERENCE_EXT", 1000148021, false},
    {"EXCLUSION_EXT", 1000148022, false},
    {"INVERT_EXT", 1000148023, false},
    {"INVERT_RGB_EXT", 1000148024, false},
    {"LINEARDODGE_EXT", 1000148025, false},
    {"LINEARBURN_EXT", 1000148026, false},
    {"VIVIDLIGHT_EXT", 1000148027, false},
    {"LINEARLIGHT_EXT", 1000148028, false},
    {"PINLIGHT_EXT", 1000148029, false},
    {"HARDMIX_EXT", 1000148030, false},
    {"HSL_HUE_EXT", 1000148031, false},
    {"HSL_SATURATION_EXT", 1000148032, false},
    {"HSL_COLOR_EXT", 1000148033, false},
    {"HSL_LUMINOSITY_EXT", 1000148034, false},
    {"PLUS_EXT", 1000148035, false},
    {"PLUS_CLAMPED_EXT", 1000148036, false},
    {"PLUS_CLAMPED_ALPHA_EXT", 1000148037, false},
    {"PLUS_DARKER_EXT", 1000148038, false},
    {"MINUS_EXT", 1000148039, false},
    {"MINUS_CLAMPED_EXT", 1000148040, false},
    {"CONTRAST_EXT", 1000148041, false},
    {"INVERT_OVG_EXT", 1000148042, false},
    {"RED_EXT", 1000148043, false},
    {"GREEN_EXT", 1000148044, false},
    {"BLUE_EXT", 1000148045, false},
};

EnumValueSet const VkBorderColorSets[] = {
    {"FLOAT_TRANSPARENT_BLACK", 0, false},   {"INT_TRANSPARENT_BLACK", 1, false},
    {"FLOAT_OPAQUE_BLACK", 2, false},        {"INT_OPAQUE_BLACK", 3, false},
    {"FLOAT_OPAQUE_WHITE", 4, false},        {"INT_OPAQUE_WHITE", 5, false},
    {"FLOAT_CUSTOM_EXT", 1000287003, false}, {"INT_CUSTOM_EXT", 1000287004, false},
};

EnumValueSet const VkPipelineCacheHeaderVersionSets[] = {
    {"ONE", 1, false},
};

EnumValueSet const VkComponentSwizzleSets[] = {
    {"IDENTITY", 0, false}, {"ZERO", 1, false}, {"ONE", 2, false}, {"R", 3, false},
    {"G", 4, false},        {"B", 5, false},    {"A", 6, false},
};

EnumValueSet const VkCommandBufferLevelSets[] = {
    {"PRIMARY", 0, false},
    {"SECONDARY", 1, false},
};

EnumValueSet const VkCompareOpSets[] = {
    {"NEVER", 0, false},
    {"LESS", 1, false},
    {"EQUAL", 2, false},
    {"LESS_OR_EQUAL", 3, false},
    {"GREATER", 4, false},
    {"NOT_EQUAL", 5, false},
    {"GREATER_OR_EQUAL", 6, false},
    {"ALWAYS", 7, false},
};

EnumValueSet const VkDescriptorTypeSets[] = {
    {"SAMPLER", 0, false},
    {"COMBINED_IMAGE_SAMPLER", 1, false},
    {"SAMPLED_IMAGE", 2, false},
    {"STORAGE_IMAGE", 3, false},
    {"UNIFORM_TEXEL_BUFFER", 4, false},
    {"STORAGE_TEXEL_BUFFER", 5, false},
    {"UNIFORM_BUFFER", 6, false},
    {"STORAGE_BUFFER", 7, false},
    {"UNIFORM_BUFFER_DYNAMIC", 8, false},
    {"STORAGE_BUFFER_DYNAMIC", 9, false},
    {"INPUT_ATTACHMENT", 10, false},
    {"INLINE_UNIFORM_BLOCK_EXT", 1000138000, true},
    {"ACCELERATION_STRUCTURE_NVX", 1000165000, false},
    {"ACCELERATION_STRUCTURE_NV", 1000165000, false},
    {"ACCELERATION_STRUCTURE_KHR", 1000150000, false},
    {"MUTABLE_VALVE", 1000351000, true},
    {"INLINE_UNIFORM_BLOCK", 1000138000, false},
    {"SAMPLE_WEIGHT_IMAGE_QCOM", 1000440000, false},
    {"BLOCK_MATCH_IMAGE_QCOM", 1000440001, false},
    {"MUTABLE_EXT", 1000351000, false},
};

EnumValueSet const VkDynamicStateSets[] = {
    {"VIEWPORT", 0, false},
    {"SCISSOR", 1, false},
    {"LINE_WIDTH", 2, false},
    {"DEPTH_BIAS", 3, false},
    {"BLEND_CONSTANTS", 4, false},
    {"DEPTH_BOUNDS", 5, false},
    {"STENCIL_COMPARE_MASK", 6, false},
    {"STENCIL_WRITE_MASK", 7, false},
    {"STENCIL_REFERENCE", 8, false},
    {"VIEWPORT_W_SCALING_NV", 1000087000, false},
    {"DISCARD_RECTANGLE_EXT", 1000099000, false},
    {"SAMPLE_LOCATIONS_EXT", 1000143000, false},
    {"VIEWPORT_SHADING_RATE_PALETTE_NV", 1000164004, false},
    {"VIEWPORT_COARSE_SAMPLE_ORDER_NV", 1000164006, false},
    {"EXCLUSIVE_SCISSOR_NV", 1000205001, false},
    {"LINE_STIPPLE_EXT", 1000259000, false},
    {"CULL_MODE_EXT", 1000267000, true},
    {"FRONT_FACE_EXT", 1000267001, true},
    {"PRIMITIVE_TOPOLOGY_EXT", 1000267002, true},
    {"VIEWPORT_WITH_COUNT_EXT", 1000267003, true},
    {"SCISSOR_WITH_COUNT_EXT", 1000267004, true},
    {"VERTEX_INPUT_BINDING_STRIDE_EXT", 1000267005, true},
    {"DEPTH_TEST_ENABLE_EXT", 1000267006, true},
    {"DEPTH_WRITE_ENABLE_EXT", 1000267007, true},
    {"DEPTH_COMPARE_OP_EXT", 1000267008, true},
    {"DEPTH_BOUNDS_TEST_ENABLE_EXT", 1000267009, true},
    {"STENCIL_TEST_ENABLE_EXT", 1000267010, true},
    {"STENCIL_OP_EXT", 1000267011, true},
    {"FRAGMENT_SHADING_RATE_KHR", 1000226000, false},
    {"RAY_TRACING_PIPELINE_STACK_SIZE_KHR", 1000347000, false},
    {"VERTEX_INPUT_EXT", 1000352000, false},
    {"COLOR_WRITE_ENABLE_EXT", 1000381000, false},
    {"PATCH_CONTROL_POINTS_EXT", 1000377000, false},
    {"RASTERIZER_DISCARD_ENABLE_EXT", 1000377001, true},
    {"DEPTH_BIAS_ENABLE_EXT", 1000377002, true},
    {"LOGIC_OP_EXT", 1000377003, false},
    {"PRIMITIVE_RESTART_ENABLE_EXT", 1000377004, true},
    {"CULL_MODE", 1000267000, false},
    {"FRONT_FACE", 1000267001, false},
    {"PRIMITIVE_TOPOLOGY", 1000267002, false},
    {"VIEWPORT_WITH_COUNT", 1000267003, false},
    {"SCISSOR_WITH_COUNT", 1000267004, false},
    {"VERTEX_INPUT_BINDING_STRIDE", 1000267005, false},
    {"DEPTH_TEST_ENABLE", 1000267006, false},
    {"DEPTH_WRITE_ENABLE", 1000267007, false},
    {"DEPTH_COMPARE_OP", 1000267008, false},
    {"DEPTH_BOUNDS_TEST_ENABLE", 1000267009, false},
    {"STENCIL_TEST_ENABLE", 1000267010, false},
    {"STENCIL_OP", 1000267011, false},
    {"RASTERIZER_DISCARD_ENABLE", 1000377001, false},
    {"DEPTH_BIAS_ENABLE", 1000377002, false},
    {"PRIMITIVE_RESTART_ENABLE", 1000377004, false},
    {"TESSELLATION_DOMAIN_ORIGIN_EXT", 1000455002, false},
    {"DEPTH_CLAMP_ENABLE_EXT", 1000455003, false},
    {"POLYGON_MODE_EXT", 1000455004, false},
    {"RASTERIZATION_SAMPLES_EXT", 1000455005, false},
    {"SAMPLE_MASK_EXT", 1000455006, false},
    {"ALPHA_TO_COVERAGE_ENABLE_EXT", 1000455007, false},
    {"ALPHA_TO_ONE_ENABLE_EXT", 1000455008, false},
    {"LOGIC_OP_ENABLE_EXT", 1000455009, false},
    {"COLOR_BLEND_ENABLE_EXT", 1000455010, false},
    {"COLOR_BLEND_EQUATION_EXT", 1000455011, false},
    {"COLOR_WRITE_MASK_EXT", 1000455012, false},
    {"RASTERIZATION_STREAM_EXT", 1000455013, false},
    {"CONSERVATIVE_RASTERIZATION_MODE_EXT", 1000455014, false},
    {"EXTRA_PRIMITIVE_OVERESTIMATION_SIZE_EXT", 1000455015, false},
    {"DEPTH_CLIP_ENABLE_EXT", 1000455016, false},
    {"SAMPLE_LOCATIONS_ENABLE_EXT", 1000455017, false},
    {"COLOR_BLEND_ADVANCED_EXT", 1000455018, false},
    {"PROVOKING_VERTEX_MODE_EXT", 1000455019, false},
    {"LINE_RASTERIZATION_MODE_EXT", 1000455020, false},
    {"LINE_STIPPLE_ENABLE_EXT", 1000455021, false},
    {"DEPTH_CLIP_NEGATIVE_ONE_TO_ONE_EXT", 1000455022, false},
    {"VIEWPORT_W_SCALING_ENABLE_NV", 1000455023, false},
    {"VIEWPORT_SWIZZLE_NV", 1000455024, false},
    {"COVERAGE_TO_COLOR_ENABLE_NV", 1000455025, false},
    {"COVERAGE_TO_COLOR_LOCATION_NV", 1000455026, false},
    {"COVERAGE_MODULATION_MODE_NV", 1000455027, false},
    {"COVERAGE_MODULATION_TABLE_ENABLE_NV", 1000455028, false},
    {"COVERAGE_MODULATION_TABLE_NV", 1000455029, false},
    {"SHADING_RATE_IMAGE_ENABLE_NV", 1000455030, false},
    {"REPRESENTATIVE_FRAGMENT_TEST_ENABLE_NV", 1000455031, false},
    {"COVERAGE_REDUCTION_MODE_NV", 1000455032, false},
    {"DISCARD_RECTANGLE_ENABLE_EXT", 1000099001, false},
    {"DISCARD_RECTANGLE_MODE_EXT", 1000099002, false},
    {"EXCLUSIVE_SCISSOR_ENABLE_NV", 1000205000, false},
    {"ATTACHMENT_FEEDBACK_LOOP_ENABLE_EXT", 1000524000, false},
};

EnumValueSet const VkPolygonModeSets[] = {
    {"FILL", 0, false},
    {"LINE", 1, false},
    {"POINT", 2, false},
    {"FILL_RECTANGLE_NV", 1000153000, false},
};

EnumValueSet const VkFormatSets[] = {
    {"UNDEFINED", 0, false},
    {"R4G4_UNORM_PACK8", 1, false},
    {"R4G4B4A4_UNORM_PACK16", 2, false},
    {"B4G4R4A4_UNORM_PACK16", 3, false},
    {"R5G6B5_UNORM_PACK16", 4, false},
    {"B5G6R5_UNORM_PACK16", 5, false},
    {"R5G5B5A1_UNORM_PACK16", 6, false},
    {"B5G5R5A1_UNORM_PACK16", 7, false},
    {"A1R5G5B5_UNORM_PACK16", 8, false},
    {"R8_UNORM", 9, false},
    {"R8_SNORM", 10, false},
    {"R8_USCALED", 11, false},
    {"R8_SSCALED", 12, false},
    {"R8_UINT", 13, false},
    {"R8_SINT", 14, false},
    {"R8_SRGB", 15, false},
    {"R8G8_UNORM", 16, false},
    {"R8G8_SNORM", 17, false},
    {"R8G8_USCALED", 18, false},
    {"R8G8_SSCALED", 19, false},
    {"R8G8_UINT", 20, false},
    {"R8G8_SINT", 21, false},
    {"R8G8_SRGB", 22, false},
    {"R8G8B8_UNORM", 23, false},
    {"R8G8B8_SNORM", 24, false},
    {"R8G8B8_USCALED", 25, false},
    {"R8G8B8_SSCALED", 26, false},
    {"R8G8B8_UINT", 27, false},
    {"R8G8B8_SINT", 28, false},
    {"R8G8B8_SRGB", 29, false},
    {"B8G8R8_UNORM", 30, false},
    {"B8G8R8_SNORM", 31, false},
    {"B8G8R8_USCALED", 32, false},
    {"B8G8R8_SSCALED", 33, false},
    {"B8G8R8_UINT", 34, false},
    {"B8G8R8_SINT", 35, false},
    {"B8G8R8_SRGB", 36, false},
    {"R8G8B8A8_UNORM", 37, false},
    {"R8G8B8A8_SNORM", 38, false},
    {"R8G8B8A8_USCALED", 39, false},
    {"R8G8B8A8_SSCALED", 40, false},
    {"R8G8B8A8_UINT", 41, false},
    {"R8G8B8A8_SINT", 42, false},
    {"R8G8B8A8_SRGB", 43, false},
    {"B8G8R8A8_UNORM", 44, false},
    {"B8G8R8A8_SNORM", 45, false},
    {"B8G8R8A8_USCALED", 46, false},
    {"B8G8R8A8_SSCALED", 47, false},
    {"B8G8R8A8_UINT", 48, false},
    {"B8G8R8A8_SINT", 49, false},
    {"B8G8R8A8_SRGB", 50, false},
    {"A8B8G8R8_UNORM_PACK32", 51, false},
    {"A8B8G8R8_SNORM_PACK32", 52, false},
    {"A8B8G8R8_USCALED_PACK32", 53, false},
    {"A8B8G8R8_SSCALED_PACK32", 54, false},
    {"A8B8G8R8_UINT_PACK32", 55, false},
    {"A8B8G8R8_SINT_PACK32", 56, false},
    {"A8B8G8R8_SRGB_PACK32", 57, false},
    {"A2R10G10B10_UNORM_PACK32", 58, false},
    {"A2R10G10B10_SNORM_PACK32", 59, false},
    {"A2R10G10B10_USCALED_PACK32", 60, false},
    {"A2R10G10B10_SSCALED_PACK32", 61, false},
    {"A2R10G10B10_UINT_PACK32", 62, false},
    {"A2R10G10B10_SINT_PACK32", 63, false},
    {"A2B10G10R10_UNORM_PACK32", 64, false},
    {"A2B10G10R10_SNORM_PACK32", 65, false},
    {"A2B10G10R10_USCALED_PACK32", 66, false},
    {"A2B10G10R10_SSCALED_PACK32", 67, false},
    {"A2B10G10R10_UINT_PACK32", 68, false},
    {"A2B10G10R10_SINT_PACK32", 69, false},
    {"R16_UNORM", 70, false},
    {"R16_SNORM", 71, false},
    {"R16_USCALED", 72, false},
    {"R16_SSCALED", 73, false},
    {"R16_UINT", 74, false},
    {"R16_SINT", 75, false},
    {"R16_SFLOAT", 76, false},
    {"R16G16_UNORM", 77, false},
    {"R16G16_SNORM", 78, false},
    {"R16G16_USCALED", 79, false},
    {"R16G16_SSCALED", 80, false},
    {"R16G16_UINT", 81, false},
    {"R16G16_SINT", 82, false},
    {"R16G16_SFLOAT", 83, false},
    {"R16G16B16_UNORM", 84, false},
    {"R16G16B16_SNORM", 85, false},
    {"R16G16B16_USCALED", 86, false},
    {"R16G16B16_SSCALED", 87, false},
    {"R16G16B16_UINT", 88, false},
    {"R16G16B16_SINT", 89, false},
    {"R16G16B16_SFLOAT", 90, false},
    {"R16G16B16A16_UNORM", 91, false},
    {"R16G16B16A16_SNORM", 92, false},
    {"R16G16B16A16_USCALED", 93, false},
    {"R16G16B16A16_SSCALED", 94, false},
    {"R16G16B16A16_UINT", 95, false},
    {"R16G16B16A16_SINT", 96, false},
    {"R16G16B16A16_SFLOAT", 97, false},
    {"R32_UINT", 98, false},
    {"R32_SINT", 99, false},
    {"R32_SFLOAT", 100, false},
    {"R32G32_UINT", 101, false},
    {"R32G32_SINT", 102, false},
    {"R32G32_SFLOAT", 103, false},
    {"R32G32B32_UINT", 104, false},
    {"R32G32B32_SINT", 105, false},
    {"R32G32B32_SFLOAT", 106, false},
    {"R32G32B32A32_UINT", 107, false},
    {"R32G32B32A32_SINT", 108, false},
    {"R32G32B32A32_SFLOAT", 109, false},
    {"R64_UINT", 110, false},
    {"R64_SINT", 111, false},
    {"R64_SFLOAT", 112, false},
    {"R64G64_UINT", 113, false},
    {"R64G64_SINT", 114, false},
    {"R64G64_SFLOAT", 115, false},
    {"R64G64B64_UINT", 116, false},
    {"R64G64B64_SINT", 117, false},
    {"R64G64B64_SFLOAT", 118, false},
    {"R64G64B64A64_UINT", 119, false},
    {"R64G64B64A64_SINT", 120, false},
    {"R64G64B64A64_SFLOAT", 121, false},
    {"B10G11R11_UFLOAT_PACK32", 122, false},
    {"E5B9G9R9_UFLOAT_PACK32", 123, false},
    {"D16_UNORM", 124, false},
    {"X8_D24_UNORM_PACK32", 125, false},
    {"D32_SFLOAT", 126, false},
    {"S8_UINT", 127, false},
    {"D16_UNORM_S8_UINT", 128, false},
    {"D24_UNORM_S8_UINT", 129, false},
    {"D32_SFLOAT_S8_UINT", 130, false},
    {"BC1_RGB_UNORM_BLOCK", 131, false},
    {"BC1_RGB_SRGB_BLOCK", 132, false},
    {"BC1_RGBA_UNORM_BLOCK", 133, false},
    {"BC1_RGBA_SRGB_BLOCK", 134, false},
    {"BC2_UNORM_BLOCK", 135, false},
    {"BC2_SRGB_BLOCK", 136, false},
    {"BC3_UNORM_BLOCK", 137, false},
    {"BC3_SRGB_BLOCK", 138, false},
    {"BC4_UNORM_BLOCK", 139, false},
    {"BC4_SNORM_BLOCK", 140, false},
    {"BC5_UNORM_BLOCK", 141, false},
    {"BC5_SNORM_BLOCK", 142, false},
    {"BC6H_UFLOAT_BLOCK", 143, false},
    {"BC6H_SFLOAT_BLOCK", 144, false},
    {"BC7_UNORM_BLOCK", 145, false},
    {"BC7_SRGB_BLOCK", 146, false},
    {"ETC2_R8G8B8_UNORM_BLOCK", 147, false},
    {"ETC2_R8G8B8_SRGB_BLOCK", 148, false},
    {"ETC2_R8G8B8A1_UNORM_BLOCK", 149, false},
    {"ETC2_R8G8B8A1_SRGB_BLOCK", 150, false},
    {"ETC2_R8G8B8A8_UNORM_BLOCK", 151, false},
    {"ETC2_R8G8B8A8_SRGB_BLOCK", 152, false},
    {"EAC_R11_UNORM_BLOCK", 153, false},
    {"EAC_R11_SNORM_BLOCK", 154, false},
    {"EAC_R11G11_UNORM_BLOCK", 155, false},
    {"EAC_R11G11_SNORM_BLOCK", 156, false},
    {"ASTC_4x4_UNORM_BLOCK", 157, false},
    {"ASTC_4x4_SRGB_BLOCK", 158, false},
    {"ASTC_5x4_UNORM_BLOCK", 159, false},
    {"ASTC_5x4_SRGB_BLOCK", 160, false},
    {"ASTC_5x5_UNORM_BLOCK", 161, false},
    {"ASTC_5x5_SRGB_BLOCK", 162, false},
    {"ASTC_6x5_UNORM_BLOCK", 163, false},
    {"ASTC_6x5_SRGB_BLOCK", 164, false},
    {"ASTC_6x6_UNORM_BLOCK", 165, false},
    {"ASTC_6x6_SRGB_BLOCK", 166, false},
    {"ASTC_8x5_UNORM_BLOCK", 167, false},
    {"ASTC_8x5_SRGB_BLOCK", 168, false},
    {"ASTC_8x6_UNORM_BLOCK", 169, false},
    {"ASTC_8x6_SRGB_BLOCK", 170, false},
    {"ASTC_8x8_UNORM_BLOCK", 171, false},
    {"ASTC_8x8_SRGB_BLOCK", 172, false},
    {"ASTC_10x5_UNORM_BLOCK", 173, false},
    {"ASTC_10x5_SRGB_BLOCK", 174, false},
    {"ASTC_10x6_UNORM_BLOCK", 175, false},
    {"ASTC_10x6_SRGB_BLOCK", 176, false},
    {"ASTC_10x8_UNORM_BLOCK", 177, false},
    {"ASTC_10x8_SRGB_BLOCK", 178, false},
    {"ASTC_10x10_UNORM_BLOCK", 179, false},
    {"ASTC_10x10_SRGB_BLOCK", 180, false},
    {"ASTC_12x10_UNORM_BLOCK", 181, false},
    {"ASTC_12x10_SRGB_BLOCK", 182, false},
    {"ASTC_12x12_UNORM_BLOCK", 183, false},
    {"ASTC_12x12_SRGB_BLOCK", 184, false},
    {"G8B8G8R8_422_UNORM", 1000156000, false},
    {"B8G8R8G8_422_UNORM", 1000156001, false},
    {"G8_B8_R8_3PLANE_420_UNORM", 1000156002, false},
    {"G8_B8R8_2PLANE_420_UNORM", 1000156003, false},
    {"G8_B8_R8_3PLANE_422_UNORM", 1000156004, false},
    {"G8_B8R8_2PLANE_422_UNORM", 1000156005, false},
    {"G8_B8_R8_3PLANE_444_UNORM", 1000156006, false},
    {"R10X6_UNORM_PACK16", 1000156007, false},
    {"R10X6G10X6_UNORM_2PACK16", 1000156008, false},
    {"R10X6G10X6B10X6A10X6_UNORM_4PACK16", 1000156009, false},
    {"G10X6B10X6G10X6R10X6_422_UNORM_4PACK16", 1000156010, false},
    {"B10X6G10X6R10X6G10X6_422_UNORM_4PACK16", 1000156011, false},
    {"G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16", 1000156012, false},
    {"G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16", 1000156013, false},
    {"G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16", 1000156014, false},
    {"G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16", 1000156015, false},
    {"G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16", 1000156016, false},
    {"R12X4_UNORM_PACK16", 1000156017, false},
    {"R12X4G12X4_UNORM_2PACK16", 1000156018, false},
    {"R12X4G12X4B12X4A12X4_UNORM_4PACK16", 1000156019, false},
    {"G12X4B12X4G12X4R12X4_422_UNORM_4PACK16", 1000156020, false},
    {"B12X4G12X4R12X4G12X4_422_UNORM_4PACK16", 1000156021, false},
    {"G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16", 1000156022, false},
    {"G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16", 1000156023, false},
    {"G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16", 1000156024, false},
    {"G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16", 1000156025, false},
    {"G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16", 1000156026, false},
    {"G16B16G16R16_422_UNORM", 1000156027, false},
    {"B16G16R16G16_422_UNORM", 1000156028, false},
    {"G16_B16_R16_3PLANE_420_UNORM", 1000156029, false},
    {"G16_B16R16_2PLANE_420_UNORM", 1000156030, false},
    {"G16_B16_R16_3PLANE_422_UNORM", 1000156031, false},
    {"G16_B16R16_2PLANE_422_UNORM", 1000156032, false},
    {"G16_B16_R16_3PLANE_444_UNORM", 1000156033, false},
    {"PVRTC1_2BPP_UNORM_BLOCK_IMG", 1000054000, false},
    {"PVRTC1_4BPP_UNORM_BLOCK_IMG", 1000054001, false},
    {"PVRTC2_2BPP_UNORM_BLOCK_IMG", 1000054002, false},
    {"PVRTC2_4BPP_UNORM_BLOCK_IMG", 1000054003, false},
    {"PVRTC1_2BPP_SRGB_BLOCK_IMG", 1000054004, false},
    {"PVRTC1_4BPP_SRGB_BLOCK_IMG", 1000054005, false},
    {"PVRTC2_2BPP_SRGB_BLOCK_IMG", 1000054006, false},
    {"PVRTC2_4BPP_SRGB_BLOCK_IMG", 1000054007, false},
    {"G8B8G8R8_422_UNORM_KHR", 1000156000, true},
    {"B8G8R8G8_422_UNORM_KHR", 1000156001, true},
    {"G8_B8_R8_3PLANE_420_UNORM_KHR", 1000156002, true},
    {"G8_B8R8_2PLANE_420_UNORM_KHR", 1000156003, true},
    {"G8_B8_R8_3PLANE_422_UNORM_KHR", 1000156004, true},
    {"G8_B8R8_2PLANE_422_UNORM_KHR", 1000156005, true},
    {"G8_B8_R8_3PLANE_444_UNORM_KHR", 1000156006, true},
    {"R10X6_UNORM_PACK16_KHR", 1000156007, true},
    {"R10X6G10X6_UNORM_2PACK16_KHR", 1000156008, true},
    {"R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR", 1000156009, true},
    {"G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR", 1000156010, true},
    {"B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR", 1000156011, true},
    {"G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR", 1000156012, true},
    {"G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR", 1000156013, true},
    {"G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR", 1000156014, true},
    {"G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR", 1000156015, true},
    {"G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR", 1000156016, true},
    {"R12X4_UNORM_PACK16_KHR", 1000156017, true},
    {"R12X4G12X4_UNORM_2PACK16_KHR", 1000156018, true},
    {"R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR", 1000156019, true},
    {"G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR", 1000156020, true},
    {"B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR", 1000156021, true},
    {"G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR", 1000156022, true},
    {"G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR", 1000156023, true},
    {"G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR", 1000156024, true},
    {"G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR", 1000156025, true},
    {"G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR", 1000156026, true},
    {"G16B16G16R16_422_UNORM_KHR", 1000156027, true},
    {"B16G16R16G16_422_UNORM_KHR", 1000156028, true},
    {"G16_B16_R16_3PLANE_420_UNORM_KHR", 1000156029, true},
    {"G16_B16R16_2PLANE_420_UNORM_KHR", 1000156030, true},
    {"G16_B16_R16_3PLANE_422_UNORM_KHR", 1000156031, true},
    {"G16_B16R16_2PLANE_422_UNORM_KHR", 1000156032, true},
    {"G16_B16_R16_3PLANE_444_UNORM_KHR", 1000156033, true},
    {"ASTC_4x4_SFLOAT_BLOCK_EXT", 1000066000, true},
    {"ASTC_5x4_SFLOAT_BLOCK_EXT", 1000066001, true},
    {"ASTC_5x5_SFLOAT_BLOCK_EXT", 1000066002, true},
    {"ASTC_6x5_SFLOAT_BLOCK_EXT", 1000066003, true},
    {"ASTC_6x6_SFLOAT_BLOCK_EXT", 1000066004, true},
    {"ASTC_8x5_SFLOAT_BLOCK_EXT", 1000066005, true},
    {"ASTC_8x6_SFLOAT_BLOCK_EXT", 1000066006, true},
    {"ASTC_8x8_SFLOAT_BLOCK_EXT", 1000066007, true},
    {"ASTC_10x5_SFLOAT_BLOCK_EXT", 1000066008, true},
    {"ASTC_10x6_SFLOAT_BLOCK_EXT", 1000066009, true},
    {"ASTC_10x8_SFLOAT_BLOCK_EXT", 1000066010, true},
    {"ASTC_10x10_SFLOAT_BLOCK_EXT", 1000066011, true},
    {"ASTC_12x10_SFLOAT_BLOCK_EXT", 1000066012, true},
    {"ASTC_12x12_SFLOAT_BLOCK_EXT", 1000066013, true},
    {"A4R4G4B4_UNORM_PACK16_EXT", 1000340000, true},
    {"A4B4G4R4_UNORM_PACK16_EXT", 1000340001, true},
    {"G8_B8R8_2PLANE_444_UNORM_EXT", 1000330000, true},
    {"G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16_EXT", 1000330001, true},
    {"G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16_EXT", 1000330002, true},
    {"G16_B16R16_2PLANE_444_UNORM_EXT", 1000330003, true},
    {"G8_B8R8_2PLANE_444_UNORM", 1000330000, false},
    {"G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16", 1000330001, false},
    {"G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16", 1000330002, false},
    {"G16_B16R16_2PLANE_444_UNORM", 1000330003, false},
    {"A4R4G4B4_UNORM_PACK16", 1000340000, false},
    {"A4B4G4R4_UNORM_PACK16", 1000340001, false},
    {"ASTC_4x4_SFLOAT_BLOCK", 1000066000, false},
    {"ASTC_5x4_SFLOAT_BLOCK", 1000066001, false},
    {"ASTC_5x5_SFLOAT_BLOCK", 1000066002, false},
    {"ASTC_6x5_SFLOAT_BLOCK", 1000066003, false},
    {"ASTC_6x6_SFLOAT_BLOCK", 1000066004, false},
    {"ASTC_8x5_SFLOAT_BLOCK", 1000066005, false},
    {"ASTC_8x6_SFLOAT_BLOCK", 1000066006, false},
    {"ASTC_8x8_SFLOAT_BLOCK", 1000066007, false},
    {"ASTC_10x5_SFLOAT_BLOCK", 1000066008, false},
    {"ASTC_10x6_SFLOAT_BLOCK", 1000066009, false},
    {"ASTC_10x8_SFLOAT_BLOCK", 1000066010, false},
    {"ASTC_10x10_SFLOAT_BLOCK", 1000066011, false},
    {"ASTC_12x10_SFLOAT_BLOCK", 1000066012, false},
    {"ASTC_12x12_SFLOAT_BLOCK", 1000066013, false},
    {"R16G16_S10_5_NV", 1000464000, false},
    {"A1B5G5R5_UNORM_PACK16_KHR", 1000470000, false},
    {"A8_UNORM_KHR", 1000470001, false},
};

EnumValueSet const VkFrontFaceSets[] = {
    {"COUNTER_CLOCKWISE", 0, false},
    {"CLOCKWISE", 1, false},
};

EnumValueSet const VkImageLayoutSets[] = {
    {"UNDEFINED", 0, false},
    {"GENERAL", 1, false},
    {"COLOR_ATTACHMENT_OPTIMAL", 2, false},
    {"DEPTH_STENCIL_ATTACHMENT_OPTIMAL", 3, false},
    {"DEPTH_STENCIL_READ_ONLY_OPTIMAL", 4, false},
    {"SHADER_READ_ONLY_OPTIMAL", 5, false},
    {"TRANSFER_SRC_OPTIMAL", 6, false},
    {"TRANSFER_DST_OPTIMAL", 7, false},
    {"PREINITIALIZED", 8, false},
    {"DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL", 1000117000, false},
    {"DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL", 1000117001, false},
    {"PRESENT_SRC_KHR", 1000001002, false},
    {"SHARED_PRESENT_KHR", 1000111000, false},
    {"DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL_KHR", 1000117000, true},
    {"DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL_KHR", 1000117001, true},
    {"SHADING_RATE_OPTIMAL_NV", 1000164003, true},
    {"FRAGMENT_DENSITY_MAP_OPTIMAL_EXT", 1000218000, false},
    {"DEPTH_ATTACHMENT_OPTIMAL_KHR", 1000241000, true},
    {"DEPTH_READ_ONLY_OPTIMAL_KHR", 1000241001, true},
    {"STENCIL_ATTACHMENT_OPTIMAL_KHR", 1000241002, true},
    {"STENCIL_READ_ONLY_OPTIMAL_KHR", 1000241003, true},
    {"DEPTH_ATTACHMENT_OPTIMAL", 1000241000, false},
    {"DEPTH_READ_ONLY_OPTIMAL", 1000241001, false},
    {"STENCIL_ATTACHMENT_OPTIMAL", 1000241002, false},
    {"STENCIL_READ_ONLY_OPTIMAL", 1000241003, false},
    {"FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR", 1000164003, false},
    {"READ_ONLY_OPTIMAL_KHR", 1000314000, true},
    {"ATTACHMENT_OPTIMAL_KHR", 1000314001, true},
    {"VIDEO_DECODE_DST_KHR", 1000024000, false},
    {"VIDEO_DECODE_SRC_KHR", 1000024001, false},
    {"VIDEO_DECODE_DPB_KHR", 1000024002, false},
    {"VIDEO_ENCODE_DST_KHR", 1000299000, false},
    {"VIDEO_ENCODE_SRC_KHR", 1000299001, false},
    {"VIDEO_ENCODE_DPB_KHR", 1000299002, false},
    {"READ_ONLY_OPTIMAL", 1000314000, false},
    {"ATTACHMENT_OPTIMAL", 1000314001, false},
    {"ATTACHMENT_FEEDBACK_LOOP_OPTIMAL_EXT", 1000339000, false},
};

EnumValueSet const VkImageTilingSets[] = {
    {"OPTIMAL", 0, false},
    {"LINEAR", 1, false},
    {"DRM_FORMAT_MODIFIER_EXT", 1000158000, false},
};

EnumValueSet const VkImageTypeSets[] = {
    {"1D", 0, false},
    {"2D", 1, false},
    {"3D", 2, false},
};

EnumValueSet const VkImageViewTypeSets[] = {
    {"1D", 0, false},       {"2D", 1, false},       {"3D", 2, false},         {"CUBE", 3, false},
    {"1D_ARRAY", 4, false}, {"2D_ARRAY", 5, false}, {"CUBE_ARRAY", 6, false},
};

EnumValueSet const VkSharingModeSets[] = {
    {"EXCLUSIVE", 0, false},
    {"CONCURRENT", 1, false},
};

EnumValueSet const VkIndexTypeSets[] = {
    {"UINT16", 0, false},
    {"UINT32", 1, false},
    {"NONE_NV", 1000165000, true},
    {"UINT8_EXT", 1000265000, false},
    {"NONE_KHR", 1000165000, false},
};

EnumValueSet const VkLogicOpSets[] = {
    {"CLEAR", 0, false},
    {"AND", 1, false},
    {"AND_REVERSE", 2, false},
    {"COPY", 3, false},
    {"AND_INVERTED", 4, false},
    {"NO_OP", 5, false},
    {"XOR", 6, false},
    {"OR", 7, false},
    {"NOR", 8, false},
    {"EQUIVALENT", 9, false},
    {"INVERT", 10, false},
    {"OR_REVERSE", 11, false},
    {"COPY_INVERTED", 12, false},
    {"OR_INVERTED", 13, false},
    {"NAND", 14, false},
    {"SET", 15, false},
};

EnumValueSet const VkPhysicalDeviceTypeSets[] = {
    {"OTHER", 0, false},        {"INTEGRATED_GPU", 1, false},
    {"DISCRETE_GPU", 2, false}, {"VIRTUAL_GPU", 3, false},
    {"CPU", 4, false},
};

EnumValueSet const VkPipelineBindPointSets[] = {
    {"GRAPHICS", 0, false},
    {"COMPUTE", 1, false},
    {"RAYTRACING_NVX", 1000165000, false},
    {"RAY_TRACING_NV", 1000165000, true},
    {"RAY_TRACING_KHR", 1000165000, false},
    {"SUBPASS_SHADING_HUAWEI", 1000369003, false},
    {"EXECUTION_GRAPH_AMDX", 1000134000, false},
};

EnumValueSet const VkPrimitiveTopologySets[] = {
    {"POINT_LIST", 0, false},
    {"LINE_LIST", 1, false},
    {"LINE_STRIP", 2, false},
    {"TRIANGLE_LIST", 3, false},
    {"TRIANGLE_STRIP", 4, false},
    {"TRIANGLE_FAN", 5, false},
    {"LINE_LIST_WITH_ADJACENCY", 6, false},
    {"LINE_STRIP_WITH_ADJACENCY", 7, false},
    {"TRIANGLE_LIST_WITH_ADJACENCY", 8, false},
    {"TRIANGLE_STRIP_WITH_ADJACENCY", 9, false},
    {"PATCH_LIST", 10, false},
};

EnumValueSet const VkQueryTypeSets[] = {
    {"OCCLUSION", 0, false},
    {"PIPELINE_STATISTICS", 1, false},
    {"TIMESTAMP", 2, false},
    {"COMPACTED_SIZE_NVX", 1000165000, false},
    {"TRANSFORM_FEEDBACK_STREAM_EXT", 1000028004, false},
    {"ACCELERATION_STRUCTURE_COMPACTED_SIZE_NV", 1000165000, false},
    {"PERFORMANCE_QUERY_INTEL", 1000210000, false},
    {"PERFORMANCE_QUERY_KHR", 1000116000, false},
    {"ACCELERATION_STRUCTURE_COMPACTED_SIZE_KHR", 1000150000, false},
    {"ACCELERATION_STRUCTURE_SERIALIZATION_SIZE_KHR", 1000150001, false},
    {"RESULT_STATUS_ONLY_KHR", 1000023000, false},
    {"VIDEO_ENCODE_BITSTREAM_BUFFER_RANGE_KHR", 1000299000, false},
    {"PRIMITIVES_GENERATED_EXT", 1000382000, false},
    {"ACCELERATION_STRUCTURE_SERIALIZATION_BOTTOM_LEVEL_POINTERS_KHR", 1000386000, false},
    {"ACCELERATION_STRUCTURE_SIZE_KHR", 1000386001, false},
    {"MESH_PRIMITIVES_GENERATED_EXT", 1000328000, false},
    {"MICROMAP_SERIALIZATION_SIZE_EXT", 1000396000, false},
    {"MICROMAP_COMPACTED_SIZE_EXT", 1000396001, false},
    {"VIDEO_ENCODE_FEEDBACK_KHR", 1000299000, false},
};

EnumValueSet const VkSubpassContentsSets[] = {
    {"INLINE", 0, false},
    {"SECONDARY_COMMAND_BUFFERS", 1, false},
    {"INLINE_AND_SECONDARY_COMMAND_BUFFERS_EXT", 1000451000, false},
};

EnumValueSet const VkStencilOpSets[] = {
    {"KEEP", 0, false},
    {"ZERO", 1, false},
    {"REPLACE", 2, false},
    {"INCREMENT_AND_CLAMP", 3, false},
    {"DECREMENT_AND_CLAMP", 4, false},
    {"INVERT", 5, false},
    {"INCREMENT_AND_WRAP", 6, false},
    {"DECREMENT_AND_WRAP", 7, false},
};

EnumValueSet const VkSystemAllocationScopeSets[] = {
    {"COMMAND", 0, false}, {"OBJECT", 1, false},   {"CACHE", 2, false},
    {"DEVICE", 3, false},  {"INSTANCE", 4, false},
};

EnumValueSet const VkInternalAllocationTypeSets[] = {
    {"EXECUTABLE", 0, false},
};

EnumValueSet const VkSamplerAddressModeSets[] = {
    {"REPEAT", 0, false},
    {"MIRRORED_REPEAT", 1, false},
    {"CLAMP_TO_EDGE", 2, false},
    {"CLAMP_TO_BORDER", 3, false},
    {"MIRROR_CLAMP_TO_EDGE", 4, false},
    {"MIRROR_CLAMP_TO_EDGE_KHR", 4, true},
};

EnumValueSet const VkFilterSets[] = {
    {"NEAREST", 0, false},
    {"LINEAR", 1, false},
    {"CUBIC_IMG", 1000015000, true},
    {"CUBIC_EXT", 1000015000, false},
};

EnumValueSet const VkSamplerMipmapModeSets[] = {
    {"NEAREST", 0, false},
    {"LINEAR", 1, false},
};

EnumValueSet const VkVertexInputRateSets[] = {
    {"VERTEX", 0, false},
    {"INSTANCE", 1, false},
};

EnumValueSet const VkObjectTypeSets[] = {
    {"UNKNOWN", 0, false},
    {"INSTANCE", 1, false},
    {"PHYSICAL_DEVICE", 2, false},
    {"DEVICE", 3, false},
    {"QUEUE", 4, false},
    {"SEMAPHORE", 5, false},
    {"COMMAND_BUFFER", 6, false},
    {"FENCE", 7, false},
    {"DEVICE_MEMORY", 8, false},
    {"BUFFER", 9, false},
    {"IMAGE", 10, false},
    {"EVENT", 11, false},
    {"QUERY_POOL", 12, false},
    {"BUFFER_VIEW", 13, false},
    {"IMAGE_VIEW", 14, false},
    {"SHADER_MODULE", 15, false},
    {"PIPELINE_CACHE", 16, false},
    {"PIPELINE_LAYOUT", 17, false},
    {"RENDER_PASS", 18, false},
    {"PIPELINE", 19, false},
    {"DESCRIPTOR_SET_LAYOUT", 20, false},
    {"SAMPLER", 21, false},
    {"DESCRIPTOR_POOL", 22, false},
    {"DESCRIPTOR_SET", 23, false},
    {"FRAMEBUFFER", 24, false},
    {"COMMAND_POOL", 25, false},
    {"SAMPLER_YCBCR_CONVERSION", 1000156000, false},
    {"DESCRIPTOR_UPDATE_TEMPLATE", 1000085000, false},
    {"SURFACE_KHR", 1000000000, false},
    {"SWAPCHAIN_KHR", 1000001000, false},
    {"DISPLAY_KHR", 1000002000, false},
    {"DISPLAY_MODE_KHR", 1000002001, false},
    {"DEBUG_REPORT_CALLBACK_EXT", 1000011000, false},
    {"DESCRIPTOR_UPDATE_TEMPLATE_KHR", 1000085000, true},
    {"DEBUG_UTILS_MESSENGER_EXT", 1000128000, false},
    {"SAMPLER_YCBCR_CONVERSION_KHR", 1000156000, true},
    {"VALIDATION_CACHE_EXT", 1000160000, false},
    {"OBJECT_TABLE_NVX", 1000086000, false},
    {"INDIRECT_COMMANDS_LAYOUT_NVX", 1000086001, false},
    {"ACCELERATION_STRUCTURE_NVX", 1000165000, false},
    {"ACCELERATION_STRUCTURE_NV", 1000165000, false},
    {"PERFORMANCE_CONFIGURATION_INTEL", 1000210000, false},
    {"ACCELERATION_STRUCTURE_KHR", 1000150000, false},
    {"DEFERRED_OPERATION_KHR", 1000268000, false},
    {"INDIRECT_COMMANDS_LAYOUT_NV", 1000277000, false},
    {"PRIVATE_DATA_SLOT_EXT", 1000295000, true},
    {"VIDEO_SESSION_KHR", 1000023000, false},
    {"VIDEO_SESSION_PARAMETERS_KHR", 1000023001, false},
    {"CU_MODULE_NVX", 1000029000, false},
    {"CU_FUNCTION_NVX", 1000029001, false},
    {"BUFFER_COLLECTION_FUCHSIA", 1000366000, false},
    {"PRIVATE_DATA_SLOT", 1000295000, false},
    {"MICROMAP_EXT", 1000396000, false},
    {"OPTICAL_FLOW_SESSION_NV", 1000464000, false},
    {"SHADER_EXT", 1000482000, false},
    {"CUDA_MODULE_NV", 1000307000, false},
    {"CUDA_FUNCTION_NV", 1000307001, false},
};

EnumValueSet const VkRayTracingInvocationReorderModeNVSets[] = {
    {"NONE", 0, false},
    {"REORDER", 1, false},
};

EnumValueSet const VkIndirectCommandsTokenTypeNVSets[] = {
    {"SHADER_GROUP", 0, false},
    {"STATE_FLAGS", 1, false},
    {"INDEX_BUFFER", 2, false},
    {"VERTEX_BUFFER", 3, false},
    {"PUSH_CONSTANT", 4, false},
    {"DRAW_INDEXED", 5, false},
    {"DRAW", 6, false},
    {"DRAW_TASKS", 7, false},
    {"DRAW_MESH_TASKS", 1000328000, false},
    {"PIPELINE", 1000428003, false},
    {"DISPATCH", 1000428004, false},
};

EnumValueSet const VkDescriptorUpdateTemplateTypeSets[] = {
    {"DESCRIPTOR_SET", 0, false},
    {"PUSH_DESCRIPTORS_KHR", 1, false},
    {"DESCRIPTOR_SET_KHR", 0, true},
};

EnumValueSet const VkViewportCoordinateSwizzleNVSets[] = {
    {"POSITIVE_X", 0, false}, {"NEGATIVE_X", 1, false}, {"POSITIVE_Y", 2, false},
    {"NEGATIVE_Y", 3, false}, {"POSITIVE_Z", 4, false}, {"NEGATIVE_Z", 5, false},
    {"POSITIVE_W", 6, false}, {"NEGATIVE_W", 7, false},
};

EnumValueSet const VkDiscardRectangleModeEXTSets[] = {
    {"INCLUSIVE", 0, false},
    {"EXCLUSIVE", 1, false},
};

EnumValueSet const VkPointClippingBehaviorSets[] = {
    {"ALL_CLIP_PLANES", 0, false},
    {"USER_CLIP_PLANES_ONLY", 1, false},
    {"ALL_CLIP_PLANES_KHR", 0, true},
    {"USER_CLIP_PLANES_ONLY_KHR", 1, true},
};

EnumValueSet const VkCoverageModulationModeNVSets[] = {
    {"NONE", 0, false},
    {"RGB", 1, false},
    {"ALPHA", 2, false},
    {"RGBA", 3, false},
};

EnumValueSet const VkCoverageReductionModeNVSets[] = {
    {"MERGE", 0, false},
    {"TRUNCATE", 1, false},
};

EnumValueSet const VkValidationCacheHeaderVersionEXTSets[] = {
    {"ONE", 1, false},
};

EnumValueSet const VkShaderInfoTypeAMDSets[] = {
    {"STATISTICS", 0, false},
    {"BINARY", 1, false},
    {"DISASSEMBLY", 2, false},
};

EnumValueSet const VkQueueGlobalPriorityKHRSets[] = {
    {"LOW", 128, false},       {"MEDIUM", 256, false},       {"HIGH", 512, false},
    {"REALTIME", 1024, false}, {"LOW_EXT", 128, true},       {"MEDIUM_EXT", 256, true},
    {"HIGH_EXT", 512, true},   {"REALTIME_EXT", 1024, true},
};

EnumValueSet const VkTimeDomainKHRSets[] = {
    {"DEVICE", 0, false},
    {"CLOCK_MONOTONIC", 1, false},
    {"CLOCK_MONOTONIC_RAW", 2, false},
    {"QUERY_PERFORMANCE_COUNTER", 3, false},
    {"DEVICE_EXT", 0, true},
    {"CLOCK_MONOTONIC_EXT", 1, true},
    {"CLOCK_MONOTONIC_RAW_EXT", 2, true},
    {"QUERY_PERFORMANCE_COUNTER_EXT", 3, true},
};

EnumValueSet const VkConservativeRasterizationModeEXTSets[] = {
    {"DISABLED", 0, false},
    {"OVERESTIMATE", 1, false},
    {"UNDERESTIMATE", 2, false},
};

EnumValueSet const VkSemaphoreTypeSets[] = {
    {"BINARY", 0, false},
    {"TIMELINE", 1, false},
    {"BINARY_KHR", 0, true},
    {"TIMELINE_KHR", 1, true},
};

EnumValueSet const VkBuildAccelerationStructureModeKHRSets[] = {
    {"BUILD", 0, false},
    {"UPDATE", 1, false},
};

EnumValueSet const VkCopyAccelerationStructureModeKHRSets[] = {
    {"CLONE", 0, false},       {"COMPACT", 1, false}, {"SERIALIZE", 2, false},
    {"DESERIALIZE", 3, false}, {"CLONE_NV", 0, true}, {"COMPACT_NV", 1, true},
};

EnumValueSet const VkAccelerationStructureTypeKHRSets[] = {
    {"TOP_LEVEL", 0, false},      {"BOTTOM_LEVEL", 1, false}, {"TOP_LEVEL_NV", 0, true},
    {"BOTTOM_LEVEL_NV", 1, true}, {"GENERIC", 2, false},
};

EnumValueSet const VkGeometryTypeKHRSets[] = {
    {"TRIANGLES", 0, false},   {"AABBS", 1, false},   {"INSTANCES", 2, false},
    {"TRIANGLES_NV", 0, true}, {"AABBS_NV", 1, true},
};

EnumValueSet const VkRayTracingShaderGroupTypeKHRSets[] = {
    {"GENERAL", 0, false},
    {"TRIANGLES_HIT_GROUP", 1, false},
    {"PROCEDURAL_HIT_GROUP", 2, false},
    {"GENERAL_NV", 0, true},
    {"TRIANGLES_HIT_GROUP_NV", 1, true},
    {"PROCEDURAL_HIT_GROUP_NV", 2, true},
};

EnumValueSet const VkAccelerationStructureMemoryRequirementsTypeNVSets[] = {
    {"OBJECT", 0, false},
    {"BUILD_SCRATCH", 1, false},
    {"UPDATE_SCRATCH", 2, false},
};

EnumValueSet const VkAccelerationStructureBuildTypeKHRSets[] = {
    {"HOST", 0, false},
    {"DEVICE", 1, false},
    {"HOST_OR_DEVICE", 2, false},
};

EnumValueSet const VkAccelerationStructureCompatibilityKHRSets[] = {
    {"COMPATIBLE", 0, false},
    {"INCOMPATIBLE", 1, false},
};

EnumValueSet const VkShaderGroupShaderKHRSets[] = {
    {"GENERAL", 0, false},
    {"CLOSEST_HIT", 1, false},
    {"ANY_HIT", 2, false},
    {"INTERSECTION", 3, false},
};

EnumValueSet const VkMemoryOverallocationBehaviorAMDSets[] = {
    {"DEFAULT", 0, false},
    {"ALLOWED", 1, false},
    {"DISALLOWED", 2, false},
};

EnumValueSet const VkPerformanceCounterScopeKHRSets[] = {
    {"VK_QUERY_SCOPE_COMMAND_BUFFER", 0, true},
    {"VK_QUERY_SCOPE_RENDER_PASS", 1, true},
    {"VK_QUERY_SCOPE_COMMAND", 2, true},
    {"COMMAND_BUFFER", 0, false},
    {"RENDER_PASS", 1, false},
    {"COMMAND", 2, false},
};

EnumValueSet const VkPerformanceCounterUnitKHRSets[] = {
    {"GENERIC", 0, false},
    {"PERCENTAGE", 1, false},
    {"NANOSECONDS", 2, false},
    {"BYTES", 3, false},
    {"BYTES_PER_SECOND", 4, false},
    {"KELVIN", 5, false},
    {"WATTS", 6, false},
    {"VOLTS", 7, false},
    {"AMPS", 8, false},
    {"HERTZ", 9, false},
    {"CYCLES", 10, false},
};

EnumValueSet const VkPerformanceCounterStorageKHRSets[] = {
    {"INT32", 0, false},  {"INT64", 1, false},   {"UINT32", 2, false},
    {"UINT64", 3, false}, {"FLOAT32", 4, false}, {"FLOAT64", 5, false},
};

EnumValueSet const VkPerformanceConfigurationTypeINTELSets[] = {
    {"COMMAND_QUEUE_METRICS_DISCOVERY_ACTIVATED", 0, false},
};

EnumValueSet const VkQueryPoolSamplingModeINTELSets[] = {
    {"MANUAL", 0, false},
};

EnumValueSet const VkPerformanceOverrideTypeINTELSets[] = {
    {"NULL_HARDWARE", 0, false},
    {"FLUSH_GPU_CACHES", 1, false},
};

EnumValueSet const VkPerformanceParameterTypeINTELSets[] = {
    {"HW_COUNTERS_SUPPORTED", 0, false},
    {"STREAM_MARKER_VALID_BITS", 1, false},
};

EnumValueSet const VkPerformanceValueTypeINTELSets[] = {
    {"UINT32", 0, false}, {"UINT64", 1, false}, {"FLOAT", 2, false},
    {"BOOL", 3, false},   {"STRING", 4, false},
};

EnumValueSet const VkLineRasterizationModeEXTSets[] = {
    {"DEFAULT", 0, false},
    {"RECTANGULAR", 1, false},
    {"BRESENHAM", 2, false},
    {"RECTANGULAR_SMOOTH", 3, false},
};

EnumValueSet const VkFaultLevelSets[] = {
    {"UNASSIGNED", 0, false},
    {"CRITICAL", 1, false},
    {"RECOVERABLE", 2, false},
    {"WARNING", 3, false},
};

EnumValueSet const VkFaultTypeSets[] = {
    {"INVALID", 0, false},           {"UNASSIGNED", 1, false},
    {"IMPLEMENTATION", 2, false},    {"SYSTEM", 3, false},
    {"PHYSICAL_DEVICE", 4, false},   {"COMMAND_BUFFER_FULL", 5, false},
    {"INVALID_API_USAGE", 6, false},
};

EnumValueSet const VkFaultQueryBehaviorSets[] = {
    {"GET_AND_CLEAR_ALL_FAULTS", 0, false},
};

EnumValueSet const VkPipelineMatchControlSets[] = {
    {"APPLICATION_UUID_EXACT_MATCH", 0, false},
};

EnumValueSet const VkSciSyncClientTypeNVSets[] = {
    {"SIGNALER", 0, false},
    {"WAITER", 1, false},
    {"SIGNALER_WAITER", 2, false},
};

EnumValueSet const VkSciSyncPrimitiveTypeNVSets[] = {
    {"FENCE", 0, false},
    {"SEMAPHORE", 1, false},
};

EnumValueSet const VkFragmentShadingRateNVSets[] = {
    {"1_INVOCATION_PER_PIXEL", 0, false},       {"1_INVOCATION_PER_1X2_PIXELS", 1, false},
    {"1_INVOCATION_PER_2X1_PIXELS", 4, false},  {"1_INVOCATION_PER_2X2_PIXELS", 5, false},
    {"1_INVOCATION_PER_2X4_PIXELS", 6, false},  {"1_INVOCATION_PER_4X2_PIXELS", 9, false},
    {"1_INVOCATION_PER_4X4_PIXELS", 10, false}, {"2_INVOCATIONS_PER_PIXEL", 11, false},
    {"4_INVOCATIONS_PER_PIXEL", 12, false},     {"8_INVOCATIONS_PER_PIXEL", 13, false},
    {"16_INVOCATIONS_PER_PIXEL", 14, false},    {"NO_INVOCATIONS", 15, false},
};

EnumValueSet const VkFragmentShadingRateTypeNVSets[] = {
    {"FRAGMENT_SIZE", 0, false},
    {"ENUMS", 1, false},
};

EnumValueSet const VkSubpassMergeStatusEXTSets[] = {
    {"MERGED", 0, false},
    {"DISALLOWED", 1, false},
    {"NOT_MERGED_SIDE_EFFECTS", 2, false},
    {"NOT_MERGED_SAMPLES_MISMATCH", 3, false},
    {"NOT_MERGED_VIEWS_MISMATCH", 4, false},
    {"NOT_MERGED_ALIASING", 5, false},
    {"NOT_MERGED_DEPENDENCIES", 6, false},
    {"NOT_MERGED_INCOMPATIBLE_INPUT_ATTACHMENT", 7, false},
    {"NOT_MERGED_TOO_MANY_ATTACHMENTS", 8, false},
    {"NOT_MERGED_INSUFFICIENT_STORAGE", 9, false},
    {"NOT_MERGED_DEPTH_STENCIL_COUNT", 10, false},
    {"NOT_MERGED_RESOLVE_ATTACHMENT_REUSE", 11, false},
    {"NOT_MERGED_SINGLE_SUBPASS", 12, false},
    {"NOT_MERGED_UNSPECIFIED", 13, false},
};

EnumValueSet const VkProvokingVertexModeEXTSets[] = {
    {"FIRST_VERTEX", 0, false},
    {"LAST_VERTEX", 1, false},
};

EnumValueSet const VkPipelineCacheValidationVersionSets[] = {
    {"SAFETY_CRITICAL_ONE", 1, false},
};

EnumValueSet const VkPipelineRobustnessBufferBehaviorEXTSets[] = {
    {"DEVICE_DEFAULT", 0, false},
    {"DISABLED", 1, false},
    {"ROBUST_BUFFER_ACCESS", 2, false},
    {"ROBUST_BUFFER_ACCESS_2", 3, false},
};

EnumValueSet const VkPipelineRobustnessImageBehaviorEXTSets[] = {
    {"DEVICE_DEFAULT", 0, false},
    {"DISABLED", 1, false},
    {"ROBUST_IMAGE_ACCESS", 2, false},
    {"ROBUST_IMAGE_ACCESS_2", 3, false},
};

EnumValueSet const VkDeviceAddressBindingTypeEXTSets[] = {
    {"BIND", 0, false},
    {"UNBIND", 1, false},
};

EnumValueSet const VkMicromapTypeEXTSets[] = {
    {"OPACITY_MICROMAP", 0, false},
    {"DISPLACEMENT_MICROMAP_NV", 1000397000, false},
};

EnumValueSet const VkBuildMicromapModeEXTSets[] = {
    {"BUILD", 0, false},
};

EnumValueSet const VkCopyMicromapModeEXTSets[] = {
    {"CLONE", 0, false},
    {"SERIALIZE", 1, false},
    {"DESERIALIZE", 2, false},
    {"COMPACT", 3, false},
};

EnumValueSet const VkOpacityMicromapFormatEXTSets[] = {
    {"2_STATE", 1, false},
    {"4_STATE", 2, false},
};

EnumValueSet const VkOpacityMicromapSpecialIndexEXTSets[] = {
    {"FULLY_TRANSPARENT", -1, false},
    {"FULLY_OPAQUE", -2, false},
    {"FULLY_UNKNOWN_TRANSPARENT", -3, false},
    {"FULLY_UNKNOWN_OPAQUE", -4, false},
};

EnumValueSet const VkDeviceFaultVendorBinaryHeaderVersionEXTSets[] = {
    {"ONE", 1, false},
};

EnumValueSet const VkDepthBiasRepresentationEXTSets[] = {
    {"LEAST_REPRESENTABLE_VALUE_FORMAT", 0, false},
    {"LEAST_REPRESENTABLE_VALUE_FORCE_UNORM", 1, false},
    {"FLOAT", 2, false},
};

EnumValueSet const VkDirectDriverLoadingModeLUNARGSets[] = {
    {"EXCLUSIVE", 0, false},
    {"INCLUSIVE", 1, false},
};

EnumValueSet const VkDisplacementMicromapFormatNVSets[] = {
    {"64_TRIANGLES_64_BYTES", 1, false},
    {"256_TRIANGLES_128_BYTES", 2, false},
    {"1024_TRIANGLES_128_BYTES", 3, false},
};

EnumValueSet const VkShaderCodeTypeEXTSets[] = {
    {"BINARY", 0, false},
    {"SPIRV", 1, false},
};

EnumValueSet const VkScopeKHRSets[] = {
    {"DEVICE", 1, false},       {"WORKGROUP", 2, false},      {"SUBGROUP", 3, false},
    {"QUEUE_FAMILY", 5, false}, {"DEVICE_NV", 1, true},       {"WORKGROUP_NV", 2, true},
    {"SUBGROUP_NV", 3, true},   {"QUEUE_FAMILY_NV", 5, true},
};

EnumValueSet const VkComponentTypeKHRSets[] = {
    {"FLOAT16", 0, false},   {"FLOAT32", 1, false},   {"FLOAT64", 2, false},
    {"SINT8", 3, false},     {"SINT16", 4, false},    {"SINT32", 5, false},
    {"SINT64", 6, false},    {"UINT8", 7, false},     {"UINT16", 8, false},
    {"UINT32", 9, false},    {"UINT64", 10, false},   {"FLOAT16_NV", 0, true},
    {"FLOAT32_NV", 1, true}, {"FLOAT64_NV", 2, true}, {"SINT8_NV", 3, true},
    {"SINT16_NV", 4, true},  {"SINT32_NV", 5, true},  {"SINT64_NV", 6, true},
    {"UINT8_NV", 7, true},   {"UINT16_NV", 8, true},  {"UINT32_NV", 9, true},
    {"UINT64_NV", 10, true},
};

EnumValueSet const VkCubicFilterWeightsQCOMSets[] = {
    {"CATMULL_ROM", 0, false},
    {"ZERO_TANGENT_CARDINAL", 1, false},
    {"B_SPLINE", 2, false},
    {"MITCHELL_NETRAVALI", 3, false},
};

EnumValueSet const VkBlockMatchWindowCompareModeQCOMSets[] = {
    {"MIN", 0, false},
    {"MAX", 1, false},
};

EnumValueSet const VkLayeredDriverUnderlyingApiMSFTSets[] = {
    {"NONE", 0, false},
    {"D3D12", 1, false},
};

EnumValueSet const VkColorSpaceKHRSets[] = {
    {"SRGB_NONLINEAR", 0, false},
    {"DISPLAY_P3_NONLINEAR_EXT", 1000104001, false},
    {"EXTENDED_SRGB_LINEAR_EXT", 1000104002, false},
    {"DCI_P3_NONLINEAR_EXT", 1000104004, false},
    {"BT709_LINEAR_EXT", 1000104005, false},
    {"BT709_NONLINEAR_EXT", 1000104006, false},
    {"BT2020_LINEAR_EXT", 1000104007, false},
    {"HDR10_ST2084_EXT", 1000104008, false},
    {"DOLBYVISION_EXT", 1000104009, false},
    {"HDR10_HLG_EXT", 1000104010, false},
    {"ADOBERGB_LINEAR_EXT", 1000104011, false},
    {"ADOBERGB_NONLINEAR_EXT", 1000104012, false},
    {"PASS_THROUGH_EXT", 1000104013, false},
    {"EXTENDED_SRGB_NONLINEAR_EXT", 1000104014, false},
    {"DCI_P3_LINEAR_EXT", 1000104003, true},
    {"VK_COLORSPACE_SRGB_NONLINEAR", 0, true},
    {"DISPLAY_NATIVE_AMD", 1000213000, false},
    {"DISPLAY_P3_LINEAR_EXT", 1000104003, false},
};

EnumValueSet const VkPresentModeKHRSets[] = {
    {"IMMEDIATE", 0, false},
    {"MAILBOX", 1, false},
    {"FIFO", 2, false},
    {"FIFO_RELAXED", 3, false},
    {"SHARED_DEMAND_REFRESH", 1000111000, false},
    {"SHARED_CONTINUOUS_REFRESH", 1000111001, false},
};

EnumValueSet const VkDebugReportObjectTypeEXTSets[] = {
    {"UNKNOWN", 0, false},
    {"INSTANCE", 1, false},
    {"PHYSICAL_DEVICE", 2, false},
    {"DEVICE", 3, false},
    {"QUEUE", 4, false},
    {"SEMAPHORE", 5, false},
    {"COMMAND_BUFFER", 6, false},
    {"FENCE", 7, false},
    {"DEVICE_MEMORY", 8, false},
    {"BUFFER", 9, false},
    {"IMAGE", 10, false},
    {"EVENT", 11, false},
    {"QUERY_POOL", 12, false},
    {"BUFFER_VIEW", 13, false},
    {"IMAGE_VIEW", 14, false},
    {"SHADER_MODULE", 15, false},
    {"PIPELINE_CACHE", 16, false},
    {"PIPELINE_LAYOUT", 17, false},
    {"RENDER_PASS", 18, false},
    {"PIPELINE", 19, false},
    {"DESCRIPTOR_SET_LAYOUT", 20, false},
    {"SAMPLER", 21, false},
    {"DESCRIPTOR_POOL", 22, false},
    {"DESCRIPTOR_SET", 23, false},
    {"FRAMEBUFFER", 24, false},
    {"COMMAND_POOL", 25, false},
    {"SURFACE_KHR", 26, false},
    {"SWAPCHAIN_KHR", 27, false},
    {"DEBUG_REPORT_CALLBACK_EXT", 28, false},
    {"DISPLAY_KHR", 29, false},
    {"DISPLAY_MODE_KHR", 30, false},
    {"VALIDATION_CACHE_EXT", 33, false},
    {"SAMPLER_YCBCR_CONVERSION", 1000156000, false},
    {"DESCRIPTOR_UPDATE_TEMPLATE", 1000085000, false},
    {"DESCRIPTOR_UPDATE_TEMPLATE_KHR", 1000085000, true},
    {"SAMPLER_YCBCR_CONVERSION_KHR", 1000156000, true},
    {"OBJECT_TABLE_NVX", 31, false},
    {"INDIRECT_COMMANDS_LAYOUT_NVX", 32, false},
    {"DEBUG_REPORT", 28, true},
    {"VALIDATION_CACHE", 33, true},
    {"ACCELERATION_STRUCTURE_NVX", 1000165000, false},
    {"ACCELERATION_STRUCTURE_NV", 1000165000, false},
    {"ACCELERATION_STRUCTURE_KHR", 1000150000, false},
    {"CU_MODULE_NVX", 1000029000, false},
    {"CU_FUNCTION_NVX", 1000029001, false},
    {"BUFFER_COLLECTION_FUCHSIA", 1000366000, false},
    {"CUDA_MODULE_NV", 1000307000, false},
    {"CUDA_FUNCTION_NV", 1000307001, false},
    {"CUDA_MODULE_NV", 1000307000, false},
    {"CUDA_FUNCTION_NV", 1000307001, false},
};

EnumValueSet const VkDeviceMemoryReportEventTypeEXTSets[] = {
    {"ALLOCATE", 0, false},
    {"FREE", 1, false},
    {"IMPORT", 2, false},
    {"UNIMPORT", 3, false},
    {"ALLOCATION_FAILED", 4, false},
};

EnumValueSet const VkRasterizationOrderAMDSets[] = {
    {"STRICT", 0, false},
    {"RELAXED", 1, false},
};

EnumValueSet const VkValidationCheckEXTSets[] = {
    {"ALL", 0, false},
    {"SHADERS", 1, false},
};

EnumValueSet const VkValidationFeatureEnableEXTSets[] = {
    {"GPU_ASSISTED", 0, false},
    {"GPU_ASSISTED_RESERVE_BINDING_SLOT", 1, false},
    {"BEST_PRACTICES", 2, false},
    {"DEBUG_PRINTF", 3, false},
    {"SYNCHRONIZATION_VALIDATION", 4, false},
};

EnumValueSet const VkValidationFeatureDisableEXTSets[] = {
    {"ALL", 0, false},
    {"SHADERS", 1, false},
    {"THREAD_SAFETY", 2, false},
    {"API_PARAMETERS", 3, false},
    {"OBJECT_LIFETIMES", 4, false},
    {"CORE_CHECKS", 5, false},
    {"UNIQUE_HANDLES", 6, false},
    {"SHADER_VALIDATION_CACHE", 7, false},
};

EnumValueSet const VkDisplayPowerStateEXTSets[] = {
    {"OFF", 0, false},
    {"SUSPEND", 1, false},
    {"ON", 2, false},
};

EnumValueSet const VkDeviceEventTypeEXTSets[] = {
    {"DISPLAY_HOTPLUG", 0, false},
};

EnumValueSet const VkDisplayEventTypeEXTSets[] = {
    {"FIRST_PIXEL_OUT", 0, false},
};

EnumValueSet const VkTessellationDomainOriginSets[] = {
    {"UPPER_LEFT", 0, false},
    {"LOWER_LEFT", 1, false},
    {"UPPER_LEFT_KHR", 0, true},
    {"LOWER_LEFT_KHR", 1, true},
};

EnumValueSet const VkSamplerYcbcrModelConversionSets[] = {
    {"RGB_IDENTITY", 0, false},      {"YCBCR_IDENTITY", 1, false}, {"YCBCR_709", 2, false},
    {"YCBCR_601", 3, false},         {"YCBCR_2020", 4, false},     {"RGB_IDENTITY_KHR", 0, true},
    {"YCBCR_IDENTITY_KHR", 1, true}, {"YCBCR_709_KHR", 2, true},   {"YCBCR_601_KHR", 3, true},
    {"YCBCR_2020_KHR", 4, true},
};

EnumValueSet const VkSamplerYcbcrRangeSets[] = {
    {"ITU_FULL", 0, false},
    {"ITU_NARROW", 1, false},
    {"ITU_FULL_KHR", 0, true},
    {"ITU_NARROW_KHR", 1, true},
};

EnumValueSet const VkChromaLocationSets[] = {
    {"COSITED_EVEN", 0, false},
    {"MIDPOINT", 1, false},
    {"COSITED_EVEN_KHR", 0, true},
    {"MIDPOINT_KHR", 1, true},
};

EnumValueSet const VkSamplerReductionModeSets[] = {
    {"WEIGHTED_AVERAGE", 0, false},
    {"MIN", 1, false},
    {"MAX", 2, false},
    {"WEIGHTED_AVERAGE_EXT", 0, true},
    {"MIN_EXT", 1, true},
    {"MAX_EXT", 2, true},
    {"WEIGHTED_AVERAGE_RANGECLAMP_QCOM", 1000521000, false},
};

EnumValueSet const VkBlendOverlapEXTSets[] = {
    {"UNCORRELATED", 0, false},
    {"DISJOINT", 1, false},
    {"CONJOINT", 2, false},
};

EnumValueSet const VkFullScreenExclusiveEXTSets[] = {
    {"DEFAULT", 0, false},
    {"ALLOWED", 1, false},
    {"DISALLOWED", 2, false},
    {"APPLICATION_CONTROLLED", 3, false},
};

EnumValueSet const VkShaderFloatControlsIndependenceSets[] = {
    {"32_BIT_ONLY", 0, false},    {"ALL", 1, false},    {"NONE", 2, false},
    {"32_BIT_ONLY_KHR", 0, true}, {"ALL_KHR", 1, true}, {"NONE_KHR", 2, true},
};

EnumValueSet const VkFragmentShadingRateCombinerOpKHRSets[] = {
    {"KEEP", 0, false}, {"REPLACE", 1, false}, {"MIN", 2, false},
    {"MAX", 3, false},  {"MUL", 4, false},
};

EnumValueSet const VkOpticalFlowPerformanceLevelNVSets[] = {
    {"UNKNOWN", 0, false},
    {"SLOW", 1, false},
    {"MEDIUM", 2, false},
    {"FAST", 3, false},
};

EnumValueSet const VkOpticalFlowSessionBindingPointNVSets[] = {
    {"UNKNOWN", 0, false}, {"INPUT", 1, false},         {"REFERENCE", 2, false},
    {"HINT", 3, false},    {"FLOW_VECTOR", 4, false},   {"BACKWARD_FLOW_VECTOR", 5, false},
    {"COST", 6, false},    {"BACKWARD_COST", 7, false}, {"GLOBAL_FLOW", 8, false},
};

EnumValueSet const VkDeviceFaultAddressTypeEXTSets[] = {
    {"NONE", 0, false},
    {"READ_INVALID", 1, false},
    {"WRITE_INVALID", 2, false},
    {"EXECUTE_INVALID", 3, false},
    {"INSTRUCTION_POINTER_UNKNOWN", 4, false},
    {"INSTRUCTION_POINTER_INVALID", 5, false},
    {"INSTRUCTION_POINTER_FAULT", 6, false},
};

EnumValueSet const VkLayerSettingTypeEXTSets[] = {
    {"BOOL32", 0, false}, {"INT32", 1, false},   {"INT64", 2, false},   {"UINT32", 3, false},
    {"UINT64", 4, false}, {"FLOAT32", 5, false}, {"FLOAT64", 6, false}, {"STRING", 7, false},
};

EnumValueSet const VkLatencyMarkerNVSets[] = {
    {"SIMULATION_START", 0, false},
    {"SIMULATION_END", 1, false},
    {"RENDERSUBMIT_START", 2, false},
    {"RENDERSUBMIT_END", 3, false},
    {"PRESENT_START", 4, false},
    {"PRESENT_END", 5, false},
    {"INPUT_SAMPLE", 6, false},
    {"TRIGGER_FLASH", 7, false},
    {"OUT_OF_BAND_RENDERSUBMIT_START", 8, false},
    {"OUT_OF_BAND_RENDERSUBMIT_END", 9, false},
    {"OUT_OF_BAND_PRESENT_START", 10, false},
    {"OUT_OF_BAND_PRESENT_END", 11, false},
};

EnumValueSet const VkOutOfBandQueueTypeNVSets[] = {
    {"RENDER", 0, false},
    {"PRESENT", 1, false},
};

EnumValueSet const VkVendorIdSets[] = {
    {"VIV", 0x10001, false},      {"VSI", 0x10002, false},  {"KAZAN", 0x10003, false},
    {"CODEPLAY", 0x10004, false}, {"MESA", 0x10005, false}, {"POCL", 0x10006, false},
    {"MOBILEYE", 0x10007, false},
};

EnumValueSet const VkDriverIdSets[] = {
    {"AMD_PROPRIETARY", 1, false},
    {"AMD_OPEN_SOURCE", 2, false},
    {"MESA_RADV", 3, false},
    {"NVIDIA_PROPRIETARY", 4, false},
    {"INTEL_PROPRIETARY_WINDOWS", 5, false},
    {"INTEL_OPEN_SOURCE_MESA", 6, false},
    {"IMAGINATION_PROPRIETARY", 7, false},
    {"QUALCOMM_PROPRIETARY", 8, false},
    {"ARM_PROPRIETARY", 9, false},
    {"GOOGLE_SWIFTSHADER", 10, false},
    {"GGP_PROPRIETARY", 11, false},
    {"BROADCOM_PROPRIETARY", 12, false},
    {"AMD_PROPRIETARY_KHR", 1, true},
    {"AMD_OPEN_SOURCE_KHR", 2, true},
    {"MESA_RADV_KHR", 3, true},
    {"NVIDIA_PROPRIETARY_KHR", 4, true},
    {"INTEL_PROPRIETARY_WINDOWS_KHR", 5, true},
    {"INTEL_OPEN_SOURCE_MESA_KHR", 6, true},
    {"IMAGINATION_PROPRIETARY_KHR", 7, true},
    {"QUALCOMM_PROPRIETARY_KHR", 8, true},
    {"ARM_PROPRIETARY_KHR", 9, true},
    {"GOOGLE_SWIFTSHADER_KHR", 10, true},
    {"GGP_PROPRIETARY_KHR", 11, true},
    {"BROADCOM_PROPRIETARY_KHR", 12, true},
    {"MESA_LLVMPIPE", 13, false},
    {"MOLTENVK", 14, false},
    {"COREAVI_PROPRIETARY", 15, false},
    {"JUICE_PROPRIETARY", 16, false},
    {"VERISILICON_PROPRIETARY", 17, false},
    {"MESA_TURNIP", 18, false},
    {"MESA_V3DV", 19, false},
    {"MESA_PANVK", 20, false},
    {"SAMSUNG_PROPRIETARY", 21, false},
    {"MESA_VENUS", 22, false},
    {"MESA_DOZEN", 23, false},
    {"MESA_NVK", 24, false},
    {"IMAGINATION_OPEN_SOURCE_MESA", 25, false},
    {"MESA_AGXV", 26, false},
};

EnumValueSet const VkShadingRatePaletteEntryNVSets[] = {
    {"NO_INVOCATIONS", 0, false},
    {"16_INVOCATIONS_PER_PIXEL", 1, false},
    {"8_INVOCATIONS_PER_PIXEL", 2, false},
    {"4_INVOCATIONS_PER_PIXEL", 3, false},
    {"2_INVOCATIONS_PER_PIXEL", 4, false},
    {"1_INVOCATION_PER_PIXEL", 5, false},
    {"1_INVOCATION_PER_2X1_PIXELS", 6, false},
    {"1_INVOCATION_PER_1X2_PIXELS", 7, false},
    {"1_INVOCATION_PER_2X2_PIXELS", 8, false},
    {"1_INVOCATION_PER_4X2_PIXELS", 9, false},
    {"1_INVOCATION_PER_2X4_PIXELS", 10, false},
    {"1_INVOCATION_PER_4X4_PIXELS", 11, false},
};

EnumValueSet const VkCoarseSampleOrderTypeNVSets[] = {
    {"DEFAULT", 0, false},
    {"CUSTOM", 1, false},
    {"PIXEL_MAJOR", 2, false},
    {"SAMPLE_MAJOR", 3, false},
};

EnumValueSet const VkPipelineExecutableStatisticFormatKHRSets[] = {
    {"BOOL32", 0, false},
    {"INT64", 1, false},
    {"UINT64", 2, false},
    {"FLOAT64", 3, false},
};

EnumValueSet const VkQueryResultStatusKHRSets[] = {
    {"ERROR", -1, false},
    {"NOT_READY", 0, false},
    {"COMPLETE", 1, false},
    {"INSUFFICIENT_BITSTREAM_BUFFER_RANGE", -1000299000, false},
};

EnumValueSet const VkVideoEncodeTuningModeKHRSets[] = {
    {"DEFAULT", 0, false},           {"HIGH_QUALITY", 1, false}, {"LOW_LATENCY", 2, false},
    {"ULTRA_LOW_LATENCY", 3, false}, {"LOSSLESS", 4, false},
};

EnumValueSet const VkAccelerationStructureMotionInstanceTypeNVSets[] = {
    {"STATIC", 0, false},
    {"MATRIX_MOTION", 1, false},
    {"SRT_MOTION", 2, false},
};

EnumValueSet const VkVideoEncodeH264RateControlStructureEXTSets[] = {
    {"UNKNOWN", 0, false},
    {"FLAT", 1, false},
    {"DYADIC", 2, false},
};

EnumValueSet const VkVideoEncodeH265RateControlStructureEXTSets[] = {
    {"UNKNOWN", 0, false},
    {"FLAT", 1, false},
    {"DYADIC", 2, false},
};

EnumValueSet const VkVideoEncodeH264InputModeFlagsEXTSets[] = {
    {"FRAME", 0x00000001, false},
    {"SLICE", 0x00000002, false},
    {"NON_VCL", 0x00000004, false},
};

EnumValueSet const VkVideoEncodeH264OutputModeFlagsEXTSets[] = {
    {"FRAME", 0x00000001, false},
    {"SLICE", 0x00000002, false},
    {"NON_VCL", 0x00000004, false},
};

EnumValueSet const VkVideoEncodeH265InputModeFlagsEXTSets[] = {
    {"FRAME", 0x00000001, false},
    {"NON_VCL", 0x00000004, false},
    {"SLICE", 0x00000002, false},
    {"SLICE_SEGMENT", 0x00000002, false},
};

EnumValueSet const VkVideoEncodeH265OutputModeFlagsEXTSets[] = {
    {"FRAME", 0x00000001, false},
    {"NON_VCL", 0x00000004, false},
    {"SLICE", 0x00000002, false},
    {"SLICE_SEGMENT", 0x00000002, false},
};

EnumValueSet const VkVideoDecodeH264PictureLayoutFlagsEXTSets[] = {
    {"PROGRESSIVE", 0, false},
    {"INTERLACED_INTERLEAVED_LINES", 0x00000001, false},
    {"INTERLACED_SEPARATE_PLANES", 0x00000002, false},
};

EnumValueSet const VkVideoCodingQualityPresetFlagsKHRSets[] = {
    {"NORMAL", 0x00000001, false},
    {"POWER", 0x00000002, false},
    {"QUALITY", 0x00000004, false},
    {"DEFAULT", 0, false},
};

EnumValueSet const VkVideoEncodeH264RateControlStructureFlagsEXTSets[] = {
    {"UNKNOWN", 0, false},
    {"FLAT", 0x00000001, false},
    {"DYADIC", 0x00000002, false},
};

EnumValueSet const VkVideoEncodeH265RateControlStructureFlagsEXTSets[] = {
    {"UNKNOWN", 0, false},
    {"FLAT", 0x00000001, false},
    {"DYADIC", 0x00000002, false},
};

EnumValueSet const VkVideoEncodeH264CreateFlagsEXTSets[] = {
    {"DEFAULT", 0, false},
    {"RESERVED_0", 0x00000001, false},
};

EnumValueSet const VkVideoCapabilitiesFlagsKHRSets[] = {
    {"PROTECTED_CONTENT", 0x00000001, false},
    {"SEPARATE_REFERENCE_IMAGES", 0x00000002, false},
};

EnumValueSet const VkVideoDecodeH264FieldLayoutFlagsEXTSets[] = {
    {"VK_VIDEO_DECODE_H264_PROGRESSIVE_PICTURES_ONLY", 0, false},
    {"LINE_INTERLACED_PLANE", 0x00000001, false},
    {"SEPARATE_INTERLACED_PLANE", 0x00000002, false},
};

EnumValueSet const VkVideoEncodeH264CapabilitiesFlagsEXTSets[] = {
    {"VK_VIDEO_ENCODE_H264_CAPABILITY_CABAC", 0x00000001, false},
    {"VK_VIDEO_ENCODE_H264_CAPABILITY_CAVLC", 0x00000002, false},
    {"VK_VIDEO_ENCODE_H264_CAPABILITY_WEIGHTED_BI_PRED_IMPLICIT", 0x00000004, false},
    {"VK_VIDEO_ENCODE_H264_CAPABILITY_TRANSFORM_8X8", 0x00000008, false},
    {"VK_VIDEO_ENCODE_H264_CAPABILITY_CHROMA_QP_OFFSET", 0x00000010, false},
    {"VK_VIDEO_ENCODE_H264_CAPABILITY_SECOND_CHROMA_QP_OFFSET", 0x00000020, false},
    {"VK_VIDEO_ENCODE_H264_CAPABILITY_DEBLOCKING_FILTER_DISABLED", 0x00000040, false},
    {"VK_VIDEO_ENCODE_H264_CAPABILITY_DEBLOCKING_FILTER_ENABLED", 0x00000080, false},
    {"VK_VIDEO_ENCODE_H264_CAPABILITY_DEBLOCKING_FILTER_PARTIAL", 0x00000100, false},
    {"VK_VIDEO_ENCODE_H264_CAPABILITY_MULTIPLE_SLICE_PER_FRAME", 0x00000200, false},
    {"VK_VIDEO_ENCODE_H264_CAPABILITY_EVENLY_DISTRIBUTED_SLICE_SIZE", 0x00000400, false},
};

EnumValueSet const VkAccelerationStructureMemoryRequirementsTypeKHRSets[] = {
    {"OBJECT", 0, false},   {"BUILD_SCRATCH", 1, false},   {"UPDATE_SCRATCH", 2, false},
    {"OBJECT_NV", 0, true}, {"BUILD_SCRATCH_NV", 1, true}, {"UPDATE_SCRATCH_NV", 2, true},
};

EnumValueSet const VkIndirectCommandsLayoutUsageFlagsNVXSets[] = {
    {"UNORDERED_SEQUENCES", 0x00000001, false},
    {"SPARSE_SEQUENCES", 0x00000002, false},
    {"EMPTY_EXECUTIONS", 0x00000004, false},
    {"INDEXED_SEQUENCES", 0x00000008, false},
};

EnumValueSet const VkObjectEntryUsageFlagsNVXSets[] = {
    {"GRAPHICS", 0x00000001, false},
    {"COMPUTE", 0x00000002, false},
};

EnumValueSet const VkIndirectCommandsTokenTypeNVXSets[] = {
    {"PIPELINE", 0, false},      {"DESCRIPTOR_SET", 1, false}, {"INDEX_BUFFER", 2, false},
    {"VERTEX_BUFFER", 3, false}, {"PUSH_CONSTANT", 4, false},  {"DRAW_INDEXED", 5, false},
    {"DRAW", 6, false},          {"DISPATCH", 7, false},
};

EnumValueSet const VkObjectEntryTypeNVXSets[] = {
    {"DESCRIPTOR_SET", 0, false}, {"PIPELINE", 1, false},      {"INDEX_BUFFER", 2, false},
    {"VERTEX_BUFFER", 3, false},  {"PUSH_CONSTANT", 4, false},
};

EnumValueSet const VkGeometryFlagsNVXSets[] = {
    {"OPAQUE", 0x00000001, false},
    {"NO_DUPLICATE_ANY_HIT_INVOCATION", 0x00000002, false},
};

EnumValueSet const VkGeometryInstanceFlagsNVXSets[] = {
    {"TRIANGLE_CULL_DISABLE", 0x00000001, false},
    {"TRIANGLE_CULL_FLIP_WINDING", 0x00000002, false},
    {"FORCE_OPAQUE", 0x00000004, false},
    {"FORCE_NO_OPAQUE", 0x00000008, false},
};

EnumValueSet const VkBuildAccelerationStructureFlagsNVXSets[] = {
    {"ALLOW_UPDATE", 0x00000001, false},      {"ALLOW_COMPACTION", 0x00000002, false},
    {"PREFER_FAST_TRACE", 0x00000004, false}, {"PREFER_FAST_BUILD", 0x00000008, false},
    {"LOW_MEMORY", 0x00000010, false},
};

EnumValueSet const VkCopyAccelerationStructureModeNVXSets[] = {
    {"CLONE", 0, false},
    {"COMPACT", 1, false},
};

EnumValueSet const VkAccelerationStructureTypeNVXSets[] = {
    {"TOP_LEVEL", 0, false},
    {"BOTTOM_LEVEL", 1, false},
};

EnumValueSet const VkGeometryTypeNVXSets[] = {
    {"TRIANGLES", 0, false},
    {"AABBS", 1, false},
};

typedef struct EnumType {
  char const *name;
  EnumValueSet const *data;
  uint32_t count;
} EnumType;

#define cEnumTypeCount sizeof(cEnumTypes) / sizeof(EnumType)
EnumType const cEnumTypes[348] = {
    {"VkFramebufferCreateFlags", VkFramebufferCreateFlagsSets, 2},
    {"VkQueryPoolCreateFlags", NULL, 0},
    {"VkRenderPassCreateFlags", VkRenderPassCreateFlagsSets, 1},
    {"VkSamplerCreateFlags", VkSamplerCreateFlagsSets, 5},
    {"VkPipelineLayoutCreateFlags", VkPipelineLayoutCreateFlagsSets, 1},
    {"VkPipelineCacheCreateFlags", VkPipelineCacheCreateFlagsSets, 2},
    {"VkPipelineDepthStencilStateCreateFlags", VkPipelineDepthStencilStateCreateFlagsSets, 4},
    {"VkPipelineDynamicStateCreateFlags", NULL, 0},
    {"VkPipelineColorBlendStateCreateFlags", VkPipelineColorBlendStateCreateFlagsSets, 2},
    {"VkPipelineMultisampleStateCreateFlags", NULL, 0},
    {"VkPipelineRasterizationStateCreateFlags", NULL, 0},
    {"VkPipelineViewportStateCreateFlags", NULL, 0},
    {"VkPipelineTessellationStateCreateFlags", NULL, 0},
    {"VkPipelineInputAssemblyStateCreateFlags", NULL, 0},
    {"VkPipelineVertexInputStateCreateFlags", NULL, 0},
    {"VkPipelineShaderStageCreateFlags", VkPipelineShaderStageCreateFlagsSets, 4},
    {"VkDescriptorSetLayoutCreateFlags", VkDescriptorSetLayoutCreateFlagsSets, 8},
    {"VkBufferViewCreateFlags", NULL, 0},
    {"VkInstanceCreateFlags", VkInstanceCreateFlagsSets, 1},
    {"VkDeviceCreateFlags", NULL, 0},
    {"VkDeviceQueueCreateFlags", VkDeviceQueueCreateFlagsSets, 1},
    {"VkQueueFlags", VkQueueFlagsSets, 8},
    {"VkMemoryPropertyFlags", VkMemoryPropertyFlagsSets, 9},
    {"VkMemoryHeapFlags", VkMemoryHeapFlagsSets, 3},
    {"VkAccessFlags", VkAccessFlagsSets, 37},
    {"VkBufferUsageFlags", VkBufferUsageFlagsSets, 31},
    {"VkBufferCreateFlags", VkBufferCreateFlagsSets, 8},
    {"VkShaderStageFlags", VkShaderStageFlagsSets, 32},
    {"VkImageUsageFlags", VkImageUsageFlagsSets, 22},
    {"VkImageCreateFlags", VkImageCreateFlagsSets, 25},
    {"VkImageViewCreateFlags", VkImageViewCreateFlagsSets, 3},
    {"VkPipelineCreateFlags", VkPipelineCreateFlagsSets, 39},
    {"VkColorComponentFlags", VkColorComponentFlagsSets, 4},
    {"VkFenceCreateFlags", VkFenceCreateFlagsSets, 1},
    {"VkSemaphoreCreateFlags", NULL, 0},
    {"VkFormatFeatureFlags", VkFormatFeatureFlagsSets, 42},
    {"VkQueryControlFlags", VkQueryControlFlagsSets, 1},
    {"VkQueryResultFlags", VkQueryResultFlagsSets, 5},
    {"VkShaderModuleCreateFlags", NULL, 0},
    {"VkEventCreateFlags", VkEventCreateFlagsSets, 2},
    {"VkCommandPoolCreateFlags", VkCommandPoolCreateFlagsSets, 3},
    {"VkCommandPoolResetFlags", VkCommandPoolResetFlagsSets, 1},
    {"VkCommandBufferResetFlags", VkCommandBufferResetFlagsSets, 1},
    {"VkCommandBufferUsageFlags", VkCommandBufferUsageFlagsSets, 3},
    {"VkQueryPipelineStatisticFlags", VkQueryPipelineStatisticFlagsSets, 14},
    {"VkMemoryMapFlags", NULL, 0},
    {"VkMemoryUnmapFlagsKHR", NULL, 0},
    {"VkImageAspectFlags", VkImageAspectFlagsSets, 16},
    {"VkSparseMemoryBindFlags", VkSparseMemoryBindFlagsSets, 1},
    {"VkSparseImageFormatFlags", VkSparseImageFormatFlagsSets, 3},
    {"VkSubpassDescriptionFlags", VkSubpassDescriptionFlagsSets, 11},
    {"VkPipelineStageFlags", VkPipelineStageFlagsSets, 35},
    {"VkSampleCountFlags", VkSampleCountFlagsSets, 7},
    {"VkAttachmentDescriptionFlags", VkAttachmentDescriptionFlagsSets, 1},
    {"VkStencilFaceFlags", VkStencilFaceFlagsSets, 4},
    {"VkCullModeFlags", VkCullModeFlagsSets, 4},
    {"VkDescriptorPoolCreateFlags", VkDescriptorPoolCreateFlagsSets, 7},
    {"VkDescriptorPoolResetFlags", NULL, 0},
    {"VkDependencyFlags", VkDependencyFlagsSets, 6},
    {"VkSubgroupFeatureFlags", VkSubgroupFeatureFlagsSets, 9},
    {"VkIndirectCommandsLayoutUsageFlagsNV", VkIndirectCommandsLayoutUsageFlagsNVSets, 3},
    {"VkIndirectStateFlagsNV", VkIndirectStateFlagsNVSets, 1},
    {"VkGeometryFlagsKHR", VkGeometryFlagsKHRSets, 4},
    {"VkGeometryInstanceFlagsKHR", VkGeometryInstanceFlagsKHRSets, 11},
    {"VkBuildAccelerationStructureFlagsKHR", VkBuildAccelerationStructureFlagsKHRSets, 16},
    {"VkPrivateDataSlotCreateFlags", NULL, 0},
    {"VkAccelerationStructureCreateFlagsKHR", VkAccelerationStructureCreateFlagsKHRSets, 3},
    {"VkDescriptorUpdateTemplateCreateFlags", NULL, 0},
    {"VkPipelineCreationFeedbackFlags", VkPipelineCreationFeedbackFlagsSets, 6},
    {"VkPerformanceCounterDescriptionFlagsKHR", VkPerformanceCounterDescriptionFlagsKHRSets, 4},
    {"VkAcquireProfilingLockFlagsKHR", NULL, 0},
    {"VkSemaphoreWaitFlags", VkSemaphoreWaitFlagsSets, 2},
    {"VkPipelineCompilerControlFlagsAMD", NULL, 0},
    {"VkShaderCorePropertiesFlagsAMD", NULL, 0},
    {"VkDeviceDiagnosticsConfigFlagsNV", VkDeviceDiagnosticsConfigFlagsNVSets, 4},
    {"VkRefreshObjectFlagsKHR", NULL, 0},
    {"VkAccessFlags2", VkAccessFlags2Sets, 67},
    {"VkPipelineStageFlags2", VkPipelineStageFlags2Sets, 75},
    {"VkAccelerationStructureMotionInfoFlagsNV", NULL, 0},
    {"VkAccelerationStructureMotionInstanceFlagsNV", NULL, 0},
    {"VkFormatFeatureFlags2", VkFormatFeatureFlags2Sets, 70},
    {"VkRenderingFlags", VkRenderingFlagsSets, 8},
    {"VkMemoryDecompressionMethodFlagsNV", VkMemoryDecompressionMethodFlagsNVSets, 1},
    {"VkBuildMicromapFlagsEXT", VkBuildMicromapFlagsEXTSets, 3},
    {"VkMicromapCreateFlagsEXT", VkMicromapCreateFlagsEXTSets, 1},
    {"VkDirectDriverLoadingFlagsLUNARG", NULL, 0},
    {"VkPipelineCreateFlags2KHR", VkPipelineCreateFlags2KHRSets, 44},
    {"VkBufferUsageFlags2KHR", VkBufferUsageFlags2KHRSets, 36},
    {"VkCompositeAlphaFlagsKHR", VkCompositeAlphaFlagsKHRSets, 4},
    {"VkDisplayPlaneAlphaFlagsKHR", VkDisplayPlaneAlphaFlagsKHRSets, 4},
    {"VkSurfaceTransformFlagsKHR", VkSurfaceTransformFlagsKHRSets, 9},
    {"VkSwapchainCreateFlagsKHR", VkSwapchainCreateFlagsKHRSets, 4},
    {"VkDisplayModeCreateFlagsKHR", NULL, 0},
    {"VkDisplaySurfaceCreateFlagsKHR", NULL, 0},
    {"VkAndroidSurfaceCreateFlagsKHR", NULL, 0},
    {"VkViSurfaceCreateFlagsNN", NULL, 0},
    {"VkWaylandSurfaceCreateFlagsKHR", NULL, 0},
    {"VkWin32SurfaceCreateFlagsKHR", NULL, 0},
    {"VkXlibSurfaceCreateFlagsKHR", NULL, 0},
    {"VkXcbSurfaceCreateFlagsKHR", NULL, 0},
    {"VkDirectFBSurfaceCreateFlagsEXT", NULL, 0},
    {"VkIOSSurfaceCreateFlagsMVK", NULL, 0},
    {"VkMacOSSurfaceCreateFlagsMVK", NULL, 0},
    {"VkMetalSurfaceCreateFlagsEXT", NULL, 0},
    {"VkImagePipeSurfaceCreateFlagsFUCHSIA", NULL, 0},
    {"VkStreamDescriptorSurfaceCreateFlagsGGP", NULL, 0},
    {"VkHeadlessSurfaceCreateFlagsEXT", NULL, 0},
    {"VkScreenSurfaceCreateFlagsQNX", NULL, 0},
    {"VkPeerMemoryFeatureFlags", VkPeerMemoryFeatureFlagsSets, 8},
    {"VkMemoryAllocateFlags", VkMemoryAllocateFlagsSets, 6},
    {"VkDeviceGroupPresentModeFlagsKHR", VkDeviceGroupPresentModeFlagsKHRSets, 4},
    {"VkDebugReportFlagsEXT", VkDebugReportFlagsEXTSets, 5},
    {"VkCommandPoolTrimFlags", NULL, 0},
    {"VkExternalMemoryHandleTypeFlagsNV", VkExternalMemoryHandleTypeFlagsNVSets, 4},
    {"VkExternalMemoryFeatureFlagsNV", VkExternalMemoryFeatureFlagsNVSets, 3},
    {"VkExternalMemoryHandleTypeFlags", VkExternalMemoryHandleTypeFlagsSets, 21},
    {"VkExternalMemoryFeatureFlags", VkExternalMemoryFeatureFlagsSets, 6},
    {"VkExternalSemaphoreHandleTypeFlags", VkExternalSemaphoreHandleTypeFlagsSets, 12},
    {"VkExternalSemaphoreFeatureFlags", VkExternalSemaphoreFeatureFlagsSets, 4},
    {"VkSemaphoreImportFlags", VkSemaphoreImportFlagsSets, 2},
    {"VkExternalFenceHandleTypeFlags", VkExternalFenceHandleTypeFlagsSets, 8},
    {"VkExternalFenceFeatureFlags", VkExternalFenceFeatureFlagsSets, 4},
    {"VkFenceImportFlags", VkFenceImportFlagsSets, 2},
    {"VkSurfaceCounterFlagsEXT", VkSurfaceCounterFlagsEXTSets, 2},
    {"VkPipelineViewportSwizzleStateCreateFlagsNV", NULL, 0},
    {"VkPipelineDiscardRectangleStateCreateFlagsEXT", NULL, 0},
    {"VkPipelineCoverageToColorStateCreateFlagsNV", NULL, 0},
    {"VkPipelineCoverageModulationStateCreateFlagsNV", NULL, 0},
    {"VkPipelineCoverageReductionStateCreateFlagsNV", NULL, 0},
    {"VkValidationCacheCreateFlagsEXT", NULL, 0},
    {"VkDebugUtilsMessageSeverityFlagsEXT", VkDebugUtilsMessageSeverityFlagsEXTSets, 4},
    {"VkDebugUtilsMessageTypeFlagsEXT", VkDebugUtilsMessageTypeFlagsEXTSets, 4},
    {"VkDebugUtilsMessengerCreateFlagsEXT", NULL, 0},
    {"VkDebugUtilsMessengerCallbackDataFlagsEXT", NULL, 0},
    {"VkDeviceMemoryReportFlagsEXT", NULL, 0},
    {"VkPipelineRasterizationConservativeStateCreateFlagsEXT", NULL, 0},
    {"VkDescriptorBindingFlags", VkDescriptorBindingFlagsSets, 8},
    {"VkConditionalRenderingFlagsEXT", VkConditionalRenderingFlagsEXTSets, 1},
    {"VkResolveModeFlags", VkResolveModeFlagsSets, 11},
    {"VkPipelineRasterizationStateStreamCreateFlagsEXT", NULL, 0},
    {"VkPipelineRasterizationDepthClipStateCreateFlagsEXT", NULL, 0},
    {"VkSwapchainImageUsageFlagsANDROID", VkSwapchainImageUsageFlagsANDROIDSets, 1},
    {"VkToolPurposeFlags", VkToolPurposeFlagsSets, 12},
    {"VkSubmitFlags", VkSubmitFlagsSets, 2},
    {"VkImageFormatConstraintsFlagsFUCHSIA", NULL, 0},
    {"VkHostImageCopyFlagsEXT", VkHostImageCopyFlagsEXTSets, 1},
    {"VkImageConstraintsInfoFlagsFUCHSIA", VkImageConstraintsInfoFlagsFUCHSIASets, 5},
    {"VkGraphicsPipelineLibraryFlagsEXT", VkGraphicsPipelineLibraryFlagsEXTSets, 4},
    {"VkImageCompressionFlagsEXT", VkImageCompressionFlagsEXTSets, 4},
    {"VkImageCompressionFixedRateFlagsEXT", VkImageCompressionFixedRateFlagsEXTSets, 25},
    {"VkExportMetalObjectTypeFlagsEXT", VkExportMetalObjectTypeFlagsEXTSets, 6},
    {"VkDeviceAddressBindingFlagsEXT", VkDeviceAddressBindingFlagsEXTSets, 1},
    {"VkOpticalFlowGridSizeFlagsNV", VkOpticalFlowGridSizeFlagsNVSets, 5},
    {"VkOpticalFlowUsageFlagsNV", VkOpticalFlowUsageFlagsNVSets, 6},
    {"VkOpticalFlowSessionCreateFlagsNV", VkOpticalFlowSessionCreateFlagsNVSets, 5},
    {"VkOpticalFlowExecuteFlagsNV", VkOpticalFlowExecuteFlagsNVSets, 1},
    {"VkFrameBoundaryFlagsEXT", VkFrameBoundaryFlagsEXTSets, 1},
    {"VkPresentScalingFlagsEXT", VkPresentScalingFlagsEXTSets, 3},
    {"VkPresentGravityFlagsEXT", VkPresentGravityFlagsEXTSets, 3},
    {"VkShaderCreateFlagsEXT", VkShaderCreateFlagsEXTSets, 7},
    {"VkPhysicalDeviceSchedulingControlsFlagsARM", VkPhysicalDeviceSchedulingControlsFlagsARMSets,
     1},
    {"VkVideoCodecOperationFlagsKHR", VkVideoCodecOperationFlagsKHRSets, 8},
    {"VkVideoCapabilityFlagsKHR", VkVideoCapabilityFlagsKHRSets, 2},
    {"VkVideoSessionCreateFlagsKHR", VkVideoSessionCreateFlagsKHRSets, 3},
    {"VkVideoSessionParametersCreateFlagsKHR", NULL, 0},
    {"VkVideoBeginCodingFlagsKHR", NULL, 0},
    {"VkVideoEndCodingFlagsKHR", NULL, 0},
    {"VkVideoCodingControlFlagsKHR", VkVideoCodingControlFlagsKHRSets, 5},
    {"VkVideoDecodeUsageFlagsKHR", VkVideoDecodeUsageFlagsKHRSets, 4},
    {"VkVideoDecodeCapabilityFlagsKHR", VkVideoDecodeCapabilityFlagsKHRSets, 3},
    {"VkVideoDecodeFlagsKHR", VkVideoDecodeFlagsKHRSets, 2},
    {"VkVideoDecodeH264PictureLayoutFlagsKHR", VkVideoDecodeH264PictureLayoutFlagsKHRSets, 3},
    {"VkVideoEncodeFlagsKHR", VkVideoEncodeFlagsKHRSets, 2},
    {"VkVideoEncodeUsageFlagsKHR", VkVideoEncodeUsageFlagsKHRSets, 5},
    {"VkVideoEncodeContentFlagsKHR", VkVideoEncodeContentFlagsKHRSets, 4},
    {"VkVideoEncodeCapabilityFlagsKHR", VkVideoEncodeCapabilityFlagsKHRSets, 3},
    {"VkVideoEncodeFeedbackFlagsKHR", VkVideoEncodeFeedbackFlagsKHRSets, 3},
    {"VkVideoEncodeRateControlFlagsKHR", VkVideoEncodeRateControlFlagsKHRSets, 3},
    {"VkVideoEncodeRateControlModeFlagsKHR", VkVideoEncodeRateControlModeFlagsKHRSets, 5},
    {"VkVideoChromaSubsamplingFlagsKHR", VkVideoChromaSubsamplingFlagsKHRSets, 6},
    {"VkVideoComponentBitDepthFlagsKHR", VkVideoComponentBitDepthFlagsKHRSets, 4},
    {"VkVideoEncodeH264CapabilityFlagsEXT", VkVideoEncodeH264CapabilityFlagsEXTSets, 35},
    {"VkVideoEncodeH264StdFlagsEXT", VkVideoEncodeH264StdFlagsEXTSets, 20},
    {"VkVideoEncodeH264RateControlFlagsEXT", VkVideoEncodeH264RateControlFlagsEXTSets, 5},
    {"VkVideoEncodeH265CapabilityFlagsEXT", VkVideoEncodeH265CapabilityFlagsEXTSets, 43},
    {"VkVideoEncodeH265StdFlagsEXT", VkVideoEncodeH265StdFlagsEXTSets, 21},
    {"VkVideoEncodeH265RateControlFlagsEXT", VkVideoEncodeH265RateControlFlagsEXTSets, 5},
    {"VkVideoEncodeH265CtbSizeFlagsEXT", VkVideoEncodeH265CtbSizeFlagsEXTSets, 4},
    {"VkVideoEncodeH265TransformBlockSizeFlagsEXT", VkVideoEncodeH265TransformBlockSizeFlagsEXTSets,
     4},
    {"VkAttachmentLoadOp", VkAttachmentLoadOpSets, 4},
    {"VkAttachmentStoreOp", VkAttachmentStoreOpSets, 6},
    {"VkBlendFactor", VkBlendFactorSets, 19},
    {"VkBlendOp", VkBlendOpSets, 51},
    {"VkBorderColor", VkBorderColorSets, 8},
    {"VkPipelineCacheHeaderVersion", VkPipelineCacheHeaderVersionSets, 1},
    {"VkComponentSwizzle", VkComponentSwizzleSets, 7},
    {"VkCommandBufferLevel", VkCommandBufferLevelSets, 2},
    {"VkCompareOp", VkCompareOpSets, 8},
    {"VkDescriptorType", VkDescriptorTypeSets, 20},
    {"VkDynamicState", VkDynamicStateSets, 87},
    {"VkPolygonMode", VkPolygonModeSets, 4},
    {"VkFormat", VkFormatSets, 304},
    {"VkFrontFace", VkFrontFaceSets, 2},
    {"VkImageLayout", VkImageLayoutSets, 37},
    {"VkImageTiling", VkImageTilingSets, 3},
    {"VkImageType", VkImageTypeSets, 3},
    {"VkImageViewType", VkImageViewTypeSets, 7},
    {"VkSharingMode", VkSharingModeSets, 2},
    {"VkIndexType", VkIndexTypeSets, 5},
    {"VkLogicOp", VkLogicOpSets, 16},
    {"VkPhysicalDeviceType", VkPhysicalDeviceTypeSets, 5},
    {"VkPipelineBindPoint", VkPipelineBindPointSets, 7},
    {"VkPrimitiveTopology", VkPrimitiveTopologySets, 11},
    {"VkQueryType", VkQueryTypeSets, 19},
    {"VkSubpassContents", VkSubpassContentsSets, 3},
    {"VkStencilOp", VkStencilOpSets, 8},
    {"VkSystemAllocationScope", VkSystemAllocationScopeSets, 5},
    {"VkInternalAllocationType", VkInternalAllocationTypeSets, 1},
    {"VkSamplerAddressMode", VkSamplerAddressModeSets, 6},
    {"VkFilter", VkFilterSets, 4},
    {"VkSamplerMipmapMode", VkSamplerMipmapModeSets, 2},
    {"VkVertexInputRate", VkVertexInputRateSets, 2},
    {"VkObjectType", VkObjectTypeSets, 57},
    {"VkRayTracingInvocationReorderModeNV", VkRayTracingInvocationReorderModeNVSets, 2},
    {"VkIndirectCommandsTokenTypeNV", VkIndirectCommandsTokenTypeNVSets, 11},
    {"VkDescriptorUpdateTemplateType", VkDescriptorUpdateTemplateTypeSets, 3},
    {"VkViewportCoordinateSwizzleNV", VkViewportCoordinateSwizzleNVSets, 8},
    {"VkDiscardRectangleModeEXT", VkDiscardRectangleModeEXTSets, 2},
    {"VkPointClippingBehavior", VkPointClippingBehaviorSets, 4},
    {"VkCoverageModulationModeNV", VkCoverageModulationModeNVSets, 4},
    {"VkCoverageReductionModeNV", VkCoverageReductionModeNVSets, 2},
    {"VkValidationCacheHeaderVersionEXT", VkValidationCacheHeaderVersionEXTSets, 1},
    {"VkShaderInfoTypeAMD", VkShaderInfoTypeAMDSets, 3},
    {"VkQueueGlobalPriorityKHR", VkQueueGlobalPriorityKHRSets, 8},
    {"VkTimeDomainKHR", VkTimeDomainKHRSets, 8},
    {"VkConservativeRasterizationModeEXT", VkConservativeRasterizationModeEXTSets, 3},
    {"VkSemaphoreType", VkSemaphoreTypeSets, 4},
    {"VkBuildAccelerationStructureModeKHR", VkBuildAccelerationStructureModeKHRSets, 2},
    {"VkCopyAccelerationStructureModeKHR", VkCopyAccelerationStructureModeKHRSets, 6},
    {"VkAccelerationStructureTypeKHR", VkAccelerationStructureTypeKHRSets, 5},
    {"VkGeometryTypeKHR", VkGeometryTypeKHRSets, 5},
    {"VkRayTracingShaderGroupTypeKHR", VkRayTracingShaderGroupTypeKHRSets, 6},
    {"VkAccelerationStructureMemoryRequirementsTypeNV",
     VkAccelerationStructureMemoryRequirementsTypeNVSets, 3},
    {"VkAccelerationStructureBuildTypeKHR", VkAccelerationStructureBuildTypeKHRSets, 3},
    {"VkAccelerationStructureCompatibilityKHR", VkAccelerationStructureCompatibilityKHRSets, 2},
    {"VkShaderGroupShaderKHR", VkShaderGroupShaderKHRSets, 4},
    {"VkMemoryOverallocationBehaviorAMD", VkMemoryOverallocationBehaviorAMDSets, 3},
    {"VkPerformanceCounterScopeKHR", VkPerformanceCounterScopeKHRSets, 6},
    {"VkPerformanceCounterUnitKHR", VkPerformanceCounterUnitKHRSets, 11},
    {"VkPerformanceCounterStorageKHR", VkPerformanceCounterStorageKHRSets, 6},
    {"VkPerformanceConfigurationTypeINTEL", VkPerformanceConfigurationTypeINTELSets, 1},
    {"VkQueryPoolSamplingModeINTEL", VkQueryPoolSamplingModeINTELSets, 1},
    {"VkPerformanceOverrideTypeINTEL", VkPerformanceOverrideTypeINTELSets, 2},
    {"VkPerformanceParameterTypeINTEL", VkPerformanceParameterTypeINTELSets, 2},
    {"VkPerformanceValueTypeINTEL", VkPerformanceValueTypeINTELSets, 5},
    {"VkLineRasterizationModeEXT", VkLineRasterizationModeEXTSets, 4},
    {"VkFaultLevel", VkFaultLevelSets, 4},
    {"VkFaultType", VkFaultTypeSets, 7},
    {"VkFaultQueryBehavior", VkFaultQueryBehaviorSets, 1},
    {"VkPipelineMatchControl", VkPipelineMatchControlSets, 1},
    {"VkSciSyncClientTypeNV", VkSciSyncClientTypeNVSets, 3},
    {"VkSciSyncPrimitiveTypeNV", VkSciSyncPrimitiveTypeNVSets, 2},
    {"VkFragmentShadingRateNV", VkFragmentShadingRateNVSets, 12},
    {"VkFragmentShadingRateTypeNV", VkFragmentShadingRateTypeNVSets, 2},
    {"VkSubpassMergeStatusEXT", VkSubpassMergeStatusEXTSets, 14},
    {"VkProvokingVertexModeEXT", VkProvokingVertexModeEXTSets, 2},
    {"VkPipelineCacheValidationVersion", VkPipelineCacheValidationVersionSets, 1},
    {"VkPipelineRobustnessBufferBehaviorEXT", VkPipelineRobustnessBufferBehaviorEXTSets, 4},
    {"VkPipelineRobustnessImageBehaviorEXT", VkPipelineRobustnessImageBehaviorEXTSets, 4},
    {"VkDeviceAddressBindingTypeEXT", VkDeviceAddressBindingTypeEXTSets, 2},
    {"VkMicromapTypeEXT", VkMicromapTypeEXTSets, 2},
    {"VkBuildMicromapModeEXT", VkBuildMicromapModeEXTSets, 1},
    {"VkCopyMicromapModeEXT", VkCopyMicromapModeEXTSets, 4},
    {"VkOpacityMicromapFormatEXT", VkOpacityMicromapFormatEXTSets, 2},
    {"VkOpacityMicromapSpecialIndexEXT", VkOpacityMicromapSpecialIndexEXTSets, 4},
    {"VkDeviceFaultVendorBinaryHeaderVersionEXT", VkDeviceFaultVendorBinaryHeaderVersionEXTSets, 1},
    {"VkDepthBiasRepresentationEXT", VkDepthBiasRepresentationEXTSets, 3},
    {"VkDirectDriverLoadingModeLUNARG", VkDirectDriverLoadingModeLUNARGSets, 2},
    {"VkDisplacementMicromapFormatNV", VkDisplacementMicromapFormatNVSets, 3},
    {"VkShaderCodeTypeEXT", VkShaderCodeTypeEXTSets, 2},
    {"VkScopeKHR", VkScopeKHRSets, 8},
    {"VkComponentTypeKHR", VkComponentTypeKHRSets, 22},
    {"VkCubicFilterWeightsQCOM", VkCubicFilterWeightsQCOMSets, 4},
    {"VkBlockMatchWindowCompareModeQCOM", VkBlockMatchWindowCompareModeQCOMSets, 2},
    {"VkLayeredDriverUnderlyingApiMSFT", VkLayeredDriverUnderlyingApiMSFTSets, 2},
    {"VkColorSpaceKHR", VkColorSpaceKHRSets, 18},
    {"VkPresentModeKHR", VkPresentModeKHRSets, 6},
    {"VkDebugReportObjectTypeEXT", VkDebugReportObjectTypeEXTSets, 50},
    {"VkDeviceMemoryReportEventTypeEXT", VkDeviceMemoryReportEventTypeEXTSets, 5},
    {"VkRasterizationOrderAMD", VkRasterizationOrderAMDSets, 2},
    {"VkValidationCheckEXT", VkValidationCheckEXTSets, 2},
    {"VkValidationFeatureEnableEXT", VkValidationFeatureEnableEXTSets, 5},
    {"VkValidationFeatureDisableEXT", VkValidationFeatureDisableEXTSets, 8},
    {"VkDisplayPowerStateEXT", VkDisplayPowerStateEXTSets, 3},
    {"VkDeviceEventTypeEXT", VkDeviceEventTypeEXTSets, 1},
    {"VkDisplayEventTypeEXT", VkDisplayEventTypeEXTSets, 1},
    {"VkTessellationDomainOrigin", VkTessellationDomainOriginSets, 4},
    {"VkSamplerYcbcrModelConversion", VkSamplerYcbcrModelConversionSets, 10},
    {"VkSamplerYcbcrRange", VkSamplerYcbcrRangeSets, 4},
    {"VkChromaLocation", VkChromaLocationSets, 4},
    {"VkSamplerReductionMode", VkSamplerReductionModeSets, 7},
    {"VkBlendOverlapEXT", VkBlendOverlapEXTSets, 3},
    {"VkFullScreenExclusiveEXT", VkFullScreenExclusiveEXTSets, 4},
    {"VkShaderFloatControlsIndependence", VkShaderFloatControlsIndependenceSets, 6},
    {"VkFragmentShadingRateCombinerOpKHR", VkFragmentShadingRateCombinerOpKHRSets, 5},
    {"VkOpticalFlowPerformanceLevelNV", VkOpticalFlowPerformanceLevelNVSets, 4},
    {"VkOpticalFlowSessionBindingPointNV", VkOpticalFlowSessionBindingPointNVSets, 9},
    {"VkDeviceFaultAddressTypeEXT", VkDeviceFaultAddressTypeEXTSets, 7},
    {"VkLayerSettingTypeEXT", VkLayerSettingTypeEXTSets, 8},
    {"VkLatencyMarkerNV", VkLatencyMarkerNVSets, 12},
    {"VkOutOfBandQueueTypeNV", VkOutOfBandQueueTypeNVSets, 2},
    {"VkVendorId", VkVendorIdSets, 7},
    {"VkDriverId", VkDriverIdSets, 38},
    {"VkShadingRatePaletteEntryNV", VkShadingRatePaletteEntryNVSets, 12},
    {"VkCoarseSampleOrderTypeNV", VkCoarseSampleOrderTypeNVSets, 4},
    {"VkPipelineExecutableStatisticFormatKHR", VkPipelineExecutableStatisticFormatKHRSets, 4},
    {"VkQueryResultStatusKHR", VkQueryResultStatusKHRSets, 4},
    {"VkVideoEncodeTuningModeKHR", VkVideoEncodeTuningModeKHRSets, 5},
    {"VkAccelerationStructureMotionInstanceTypeNV", VkAccelerationStructureMotionInstanceTypeNVSets,
     3},
    {"VkVideoEncodeH264RateControlStructureEXT", VkVideoEncodeH264RateControlStructureEXTSets, 3},
    {"VkVideoEncodeH265RateControlStructureEXT", VkVideoEncodeH265RateControlStructureEXTSets, 3},
    {"VkVideoEncodeH264InputModeFlagsEXT", VkVideoEncodeH264InputModeFlagsEXTSets, 3},
    {"VkVideoEncodeH264OutputModeFlagsEXT", VkVideoEncodeH264OutputModeFlagsEXTSets, 3},
    {"VkVideoEncodeH265InputModeFlagsEXT", VkVideoEncodeH265InputModeFlagsEXTSets, 4},
    {"VkVideoEncodeH265OutputModeFlagsEXT", VkVideoEncodeH265OutputModeFlagsEXTSets, 4},
    {"VkVideoDecodeH264PictureLayoutFlagsEXT", VkVideoDecodeH264PictureLayoutFlagsEXTSets, 3},
    {"VkVideoCodingQualityPresetFlagsKHR", VkVideoCodingQualityPresetFlagsKHRSets, 4},
    {"VkVideoEncodeH264RateControlStructureFlagsEXT",
     VkVideoEncodeH264RateControlStructureFlagsEXTSets, 3},
    {"VkVideoEncodeH265RateControlStructureFlagsEXT",
     VkVideoEncodeH265RateControlStructureFlagsEXTSets, 3},
    {"VkVideoDecodeH264CreateFlagsEXT", NULL, 0},
    {"VkVideoDecodeH265CreateFlagsEXT", NULL, 0},
    {"VkVideoEncodeH264CreateFlagsEXT", VkVideoEncodeH264CreateFlagsEXTSets, 2},
    {"VkVideoEncodeH265CreateFlagsEXT", NULL, 0},
    {"VkVideoCapabilitiesFlagsKHR", VkVideoCapabilitiesFlagsKHRSets, 2},
    {"VkVideoDecodeH264FieldLayoutFlagsEXT", VkVideoDecodeH264FieldLayoutFlagsEXTSets, 3},
    {"VkVideoEncodeH264CapabilitiesFlagsEXT", VkVideoEncodeH264CapabilitiesFlagsEXTSets, 11},
    {"VkAccelerationStructureMemoryRequirementsTypeKHR",
     VkAccelerationStructureMemoryRequirementsTypeKHRSets, 6},
    {"VkIndirectCommandsLayoutUsageFlagsNVX", VkIndirectCommandsLayoutUsageFlagsNVXSets, 4},
    {"VkObjectEntryUsageFlagsNVX", VkObjectEntryUsageFlagsNVXSets, 2},
    {"VkIndirectCommandsTokenTypeNVX", VkIndirectCommandsTokenTypeNVXSets, 8},
    {"VkObjectEntryTypeNVX", VkObjectEntryTypeNVXSets, 5},
    {"VkGeometryFlagsNVX", VkGeometryFlagsNVXSets, 2},
    {"VkGeometryInstanceFlagsNVX", VkGeometryInstanceFlagsNVXSets, 4},
    {"VkBuildAccelerationStructureFlagsNVX", VkBuildAccelerationStructureFlagsNVXSets, 5},
    {"VkMirSurfaceCreateFlagsKHR", NULL, 0},
    {"VkCopyAccelerationStructureModeNVX", VkCopyAccelerationStructureModeNVXSets, 2},
    {"VkAccelerationStructureTypeNVX", VkAccelerationStructureTypeNVXSets, 2},
    {"VkGeometryTypeNVX", VkGeometryTypeNVXSets, 2},
};

/**
 * @brief Removes a vendor tag from the end of the given string view
 * @param str string to chop the vendor tag from
 * @param size is the current length of the string being used
 * @return Length of the string without the vendor tag, if it was suffixed, otherwise the size
 * originally passed in.
 */
size_t stripVendor(char const *str, size_t len) {
  for (size_t i = 0; i < cVendorCount; ++i) {
    char const *it = cVendorList[i];
    if (strlen(it) > len)
      continue;

    // Don't strip if it's all that's left
    if (len == strlen(it) && strncmp(str, it, len) == 0)
      break;

    if (strncmp(str + len - strlen(it), it, strlen(it)) == 0) {
      len -= strlen(it);
      break;
    }
  }

  return len;
}

/**
 * @brief Strips '_BIT' from the end of a string, if there
 * @param str string to chop the vendor tag from
 * @param size is the current length of the string being used
 * @return Length of the string without the '_BIT'' tag, if it was suffixed, otherwise the size
 * originally passed in.
 */
size_t stripBit(char const *str, size_t len) {
  if (len > strlen("_BIT")) {
    if (strncmp(str + len - strlen("_BIT"), "_BIT", strlen("_BIT")) == 0) {
      len -= strlen("_BIT");
    }
  }

  return len;
}

/**
 * @brief Iterates through and finds the corresponding type's EnumValueSet
 * @param pVkType is a pointer to the string name of the Vulkan type
 * @param ppStart is a double-pointer that will point to the start of any found set
 * @param ppEnd is a double-pointer that will point to the end of any found set
 * values
 * @return True if a matching type value set is found, false otherwise.
 *
 * This iterates through the big cEnumTypes array, attempting to find a matching type and returning
 * data about it.
 */
bool getEnumType(char const *pVkType, EnumValueSet const **ppStart, EnumValueSet const **ppEnd) {
  // Check for a conversion from FlagBits -> Flags
  char localStr[64];
  size_t localLen = strlen(pVkType);
  memcpy(localStr, pVkType, localLen);
  localStr[localLen] = '\0';

  {
    char const *const pSubStrStart = strstr(pVkType, "FlagBits");
    if (pSubStrStart != NULL) {
      size_t const subStrStartCount = pSubStrStart - pVkType;
      memcpy(localStr + subStrStartCount, "Flags", strlen("Flags")); // Replacement Data
      memcpy(localStr + subStrStartCount + strlen("Flags"),
             pVkType + subStrStartCount + strlen("FlagBits"),
             localLen - subStrStartCount - strlen("FlagBits")); // Trailing Data
      localLen = localLen - strlen("FlagBits") + strlen("Flags");
      localStr[localLen] = '\0';
    }
  }

  // Try the original name (with flagbits -> flags)
  for (size_t i = 0; i < cEnumTypeCount; ++i) {
    EnumType const *it = &cEnumTypes[i];
    if (strcmp(localStr, it->name) == 0) {
      *ppStart = it->data;
      *ppEnd = it->data + it->count;

      return true;
    }
  }

  // Try a vendor-stripped name
  localStr[stripVendor(localStr, localLen)] = '\0';
  for (size_t i = 0; i < cEnumTypeCount; ++i) {
    EnumType const *it = &cEnumTypes[i];
    if (strcmp(localStr, it->name) == 0) {
      *ppStart = it->data;
      *ppEnd = it->data + it->count;

      return true;
    }
  }

  return false;
}

/**
 * @brief Converts a Vulkan Flag typename into the prefix that is used for it's enums
 * @param pTypeName is the type to generate the Vulkan enum prefix for
 * @param nameLength is the length of the type name
 * @return Generated prefix string, the ownership of which passes to the caller
 *
 * Any capitalized letters except for the first has an underscore inserted before it, an underscore
 * is added to the end, and all characters are converted to upper case.
 *
 * It also removed the 'Flags' or 'FlagBits' suffixes.
 */
char const *generateEnumPrefix(char const *pTypeName, size_t nameLength) {
  // Flag Bits
  char const *pFlags = strstr(pTypeName, "Flags");
  // Flags
  char const *pFlagBits = strstr(pTypeName, "FlagBits");

  char *pPrefixStr = (char *)malloc(nameLength * 2);
  char *pDst = pPrefixStr;
  for (char const *ch = pTypeName; ch < pTypeName + nameLength;) {
    if (ch == pFlags) {
      ch += strlen("Flags");
    } else if (ch == pFlagBits) {
      ch += strlen("FlagBits");
    } else if (ch == pTypeName) {
      *pDst++ = toupper(*ch);
      ++ch;
    } else if (isupper(*ch) || isdigit(*ch)) {
      *pDst++ = '_';
      *pDst++ = *ch;
      ++ch;
    } else {
      *pDst++ = toupper(*ch);
      ++ch;
    }
  }
  *pDst++ = '_';
  *pDst = '\0';
  assert(pDst < pPrefixStr + (nameLength * 2));

  return pPrefixStr;
}

/**
 * @brief Finds the corresponding value for the given string
 * @param pValueStr is a pointer to the string representing the value
 * @param valueLength is the length of the pValueStr string
 * @param pPrefixStr is a pointer to a pre-determined prefix string that the value may have
 * @param prefixLength is the length of the pPrefixStr string
 * @param pSearchStart is a pointer to the start of the value set to search
 * @param pSearchEnd is a pointer to the end of the value set to search
 * @param pParsedValue is a pointer that will be updated with any found matching value
 * @return True if a matching value was found and pParsedValue updated. False otherwise.
 *
 * Using the given Vulkan token string, this function will attempt to find a matching value in the
 * given search set.
 */
bool parseValue(char const *pValueStr,
                size_t valueLength,
                char const *pPrefixStr,
                size_t prefixLength,
                EnumValueSet const *pSearchStart,
                EnumValueSet const *pSearchEnd,
                uint64_t *pParsedValue) {
  // Check if there's a matching prefix
  if (valueLength >= prefixLength && strncmp(pValueStr, pPrefixStr, prefixLength) == 0) {
    // There is, limit the searching scope to the part *after* the prefix
    pValueStr += prefixLength;
    valueLength -= prefixLength;
  }

  // Try the initial value
  for (EnumValueSet const *pStart = pSearchStart; pStart != pSearchEnd; ++pStart) {
    if (valueLength == strlen(pStart->name) && strncmp(pValueStr, pStart->name, valueLength) == 0) {
      *pParsedValue |= pStart->value;
      return true;
    }
  }

  // Remove the vendor tag suffix if it's on the value
  valueLength = stripVendor(pValueStr, valueLength);
  if (valueLength > 0 && pValueStr[valueLength - 1] == '_')
    --valueLength;

  // Remove '_BIT' if it's there
  valueLength = stripBit(pValueStr, valueLength);

  for (EnumValueSet const *pStart = pSearchStart; pStart != pSearchEnd; ++pStart) {
    if (valueLength == strlen(pStart->name) && strncmp(pValueStr, pStart->name, valueLength) == 0) {
      *pParsedValue |= pStart->value;
      return true;
    }
  }

  return false;
}

/**
 * @brief Takes a given string and formats it for use with parsing
 * @param ppStart is a double-pointer to the start of the string, which can be moved
 * @param pEnd is a pointer to the current end of the string
 * @return Pointer to the new end of the formatted string
 *
 * First, any non alphanumeric characters are trimmed from both ends of the string.
 * After than, any spaces are replaced with underscores, and finally all the characters are
 * capitalized. This will generate the string closest to the original ones found in the XML spec.
 */
char *formatString(char **ppStart, char *pEnd) {
  // Trim left
  for (; *ppStart != pEnd;) {
    if (isalnum(**ppStart))
      break;
    else
      ++(*ppStart);
  }

  // Trim right
  char *pNewEnd = *ppStart;
  for (char *ch = *ppStart; ch < pEnd; ++ch) {
    if (isalnum(*ch))
      pNewEnd = ch + 1;
  }

  for (char *ch = *ppStart; ch < pNewEnd; ++ch) {
    if (*ch == ' ')
      *ch = '_';
    else
      *ch = toupper(*ch);
  }

  return pNewEnd;
}

// Returns the smallest of two values
uint32_t serializeMin(uint32_t lhs, uint32_t rhs) {
  if (lhs < rhs) {
    return lhs;
  }
  return rhs;
}

STecVkSerializationResult serializeBitmask(EnumValueSet const *pSearchStart,
                                           EnumValueSet const *pSearchEnd,
                                           uint64_t vkValue,
                                           uint32_t *pSerializedLength,
                                           char *pSerialized) {
  if (pSearchStart == pSearchEnd) {
    // If this is a non-existing bitmask, then return an empty string
    *pSerializedLength = 0;
    return STEC_VK_SERIALIZATION_RESULT_SUCCESS;
  }

  // As we want to search in reverse order (to possible catch values that encompass multiple bits)
  // we decrement both items here, so the 'end' is at a valid value and 'start' is now one 'beyond
  // the end'
  EnumValueSet const *pSwap = pSearchStart;
  pSearchStart = pSearchEnd - 1;
  pSearchEnd = pSwap - 1;

  // Number of characters serialized so far
  uint32_t serializedLength = 0;
  // Will turn true if there isn't enough space in the destination string to fully serialize all the
  // values
  bool incomplete = false;
  // Will host the temporary internal string, so we don't overwrite data in the destination string
  // unless we're successfully returning
  char *pTempStr = NULL;

  if (pSerialized != NULL) {
    // We'll only bother with the internal string if we can outputt string data
    pTempStr = (char *)malloc(*pSerializedLength);
  }
  char *pSrcStr = pTempStr;

  while (pSearchStart != pSearchEnd) {
    if (vkValue == 0 && serializedLength > 0) {
      // No more non-zero values to serialize, and we've serialized something,
      // so we can skip any possible zero-values
      break;
    }

    if (!pSearchStart->alias && (pSearchStart->value & vkValue) == pSearchStart->value) {
      // Found a compatible bit mask, add it
      if (serializedLength > 0) {
        if (pTempStr == NULL) {
          serializedLength += 3;
        } else {
          uint32_t toCopy = serializeMin(*pSerializedLength - serializedLength, 3);
          memcpy(pSrcStr, " | ", toCopy);
          pSrcStr += toCopy;
          serializedLength += toCopy;
          if (toCopy != 3) {
            incomplete = true;
            break;
          }
        }
      }

      if (pSrcStr == NULL) {
        serializedLength += strlen(pSearchStart->name);
      } else {
        uint32_t toCopy =
            serializeMin(*pSerializedLength - serializedLength, strlen(pSearchStart->name));
        memcpy(pSrcStr, pSearchStart->name, toCopy);
        pSrcStr += toCopy;
        serializedLength += toCopy;
        if (toCopy != strlen(pSearchStart->name)) {
          incomplete = true;
          break;
        }
      }
      vkValue = vkValue ^ pSearchStart->value;
    }

    --pSearchStart;
  }

  if (!incomplete && vkValue != 0) {
    // Failed to find a valid bitmask for the value
    free(pTempStr);
    return STEC_VK_SERIALIZATION_RESULT_ERROR_VALUE_NOT_FOUND;
  }

  *pSerializedLength = serializedLength;
  if (pSerialized != NULL && serializedLength > 0) {
    memcpy(pSerialized, pTempStr, serializedLength);
  }
  free(pTempStr);
  if (incomplete) {
    return STEC_VK_SERIALIZATION_RESULT_ERROR_INCOMPLETE;
  }
  return STEC_VK_SERIALIZATION_RESULT_SUCCESS;
}

STecVkSerializationResult serializeEnum(EnumValueSet const *pSearchStart,
                                        EnumValueSet const *pSearchEnd,
                                        uint64_t vkValue,
                                        uint32_t *pSerializedLength,
                                        char *pSerialized) {
  while (pSearchStart != pSearchEnd) {
    if (!pSearchStart->alias && pSearchStart->value == vkValue) {
      uint32_t const sourceLength = strlen(pSearchStart->name);
      if (pSerialized != NULL) {
        if (*pSerializedLength < sourceLength) {
          memcpy(pSerialized, pSearchStart->name, *pSerializedLength);
          return STEC_VK_SERIALIZATION_RESULT_ERROR_INCOMPLETE;
        } else {
          // Copy full value
          memcpy(pSerialized, pSearchStart->name, sourceLength);
        }
      }
      // In all success cases, set the length of the value string, either for how much is needed or
      // was copied.
      *pSerializedLength = sourceLength;

      return STEC_VK_SERIALIZATION_RESULT_SUCCESS;
    }

    ++pSearchStart;
  }

  return STEC_VK_SERIALIZATION_RESULT_ERROR_VALUE_NOT_FOUND;
}

STecVkSerializationResult parseBitmask(char *pVkString,
                                       EnumValueSet const *pSearchStart,
                                       EnumValueSet const *pSearchEnd,
                                       char const *pPrefixStr,
                                       size_t prefixLength,
                                       uint64_t *pParsedValue) {
  uint64_t retVal = 0;
  char *const strEnd = pVkString + strlen(pVkString);

  char *startCh = pVkString;
  char *endCh = pVkString;
  for (; endCh != strEnd; ++endCh) {
    if (*endCh == '|') {
      char *pNewEndCh = formatString(&startCh, endCh);

      bool foundVal = parseValue(startCh, pNewEndCh - startCh, pPrefixStr, prefixLength,
                                 pSearchStart, pSearchEnd, &retVal);
      if (!foundVal)
        return STEC_VK_SERIALIZATION_RESULT_ERROR_VALUE_NOT_FOUND;

      startCh = endCh + 1;
    }
  }
  if (startCh != endCh) {
    char *pNewEndCh = formatString(&startCh, endCh);

    bool foundVal = parseValue(startCh, pNewEndCh - startCh, pPrefixStr, prefixLength, pSearchStart,
                               pSearchEnd, &retVal);
    if (!foundVal)
      return STEC_VK_SERIALIZATION_RESULT_ERROR_VALUE_NOT_FOUND;
  }

  *pParsedValue = retVal;
  return STEC_VK_SERIALIZATION_RESULT_SUCCESS;
}

STecVkSerializationResult parseEnum(char *pVkString,
                                    EnumValueSet const *pSearchStart,
                                    EnumValueSet const *pSearchEnd,
                                    char const *pPrefixStr,
                                    size_t prefixLength,
                                    uint64_t *pParsedValue) {
  uint64_t retVal = 0;

  char *pStrEnd = formatString(&pVkString, pVkString + strlen(pVkString));
  bool found = parseValue(pVkString, pStrEnd - pVkString, pPrefixStr, prefixLength, pSearchStart,
                          pSearchEnd, &retVal);
  if (found) {
    *pParsedValue = retVal;
    return STEC_VK_SERIALIZATION_RESULT_SUCCESS;
  }

  return STEC_VK_SERIALIZATION_RESULT_ERROR_VALUE_NOT_FOUND;
}

STecVkSerializationResult vk_serialize32(char const *pVkType,
                                         uint32_t vkValue,
                                         uint32_t *pSerializedLength,
                                         char *pSerialized) {
  return vk_serialize64(pVkType, (uint64_t)vkValue, pSerializedLength, pSerialized);
}

STecVkSerializationResult vk_serialize64(char const *pVkType,
                                         uint64_t vkValue,
                                         uint32_t *pSerializedLength,
                                         char *pSerialized) {
  if (pVkType == NULL || strlen(pVkType) == 0) {
    return STEC_VK_SERIALIZATION_RESULT_ERROR_TYPE_NOT_FOUND;
  }

  EnumValueSet const *pSearchStart, *pSearchEnd;
  if (!getEnumType(pVkType, &pSearchStart, &pSearchEnd)) {
    return STEC_VK_SERIALIZATION_RESULT_ERROR_TYPE_NOT_FOUND;
  }

  if (strstr(pVkType, "Flags") != NULL || strstr(pVkType, "FlagBits") != NULL) {
    return serializeBitmask(pSearchStart, pSearchEnd, vkValue, pSerializedLength, pSerialized);
  }

  return serializeEnum(pSearchStart, pSearchEnd, vkValue, pSerializedLength, pSerialized);
}

STecVkSerializationResult vk_parse32(char const *pVkType,
                                     char const *pVkString,
                                     uint32_t *pParsedValue) {
  uint64_t tempValue;
  STecVkSerializationResult result = vk_parse64(pVkType, pVkString, &tempValue);
  if (result == STEC_VK_SERIALIZATION_RESULT_SUCCESS) {
    *pParsedValue = (uint32_t)tempValue;
  }
  return result;
}

STecVkSerializationResult vk_parse64(char const *pVkType,
                                     char const *pVkString,
                                     uint64_t *pParsedValue) {
  if (pVkType == NULL || strlen(pVkType) == 0) {
    return STEC_VK_SERIALIZATION_RESULT_ERROR_TYPE_NOT_FOUND;
  }

  EnumValueSet const *pSearchStart, *pSearchEnd;
  if (!getEnumType(pVkType, &pSearchStart, &pSearchEnd)) {
    return STEC_VK_SERIALIZATION_RESULT_ERROR_TYPE_NOT_FOUND;
  }

  size_t const strLength = strlen(pVkString);
  if (strLength == 0) {
    // Only bitmasks can have empty values, all enum types must have *something*
    if (strstr(pVkType, "Flags") != NULL || strstr(pVkType, "FlagBits") != NULL) {
      *pParsedValue = 0;
      return STEC_VK_SERIALIZATION_RESULT_SUCCESS;
    } else {
      return STEC_VK_SERIALIZATION_RESULT_ERROR_TYPE_HAS_NO_EMPTY_VALUE;
    }
  }

  char *mutableStr = (char *)malloc(strLength + 1);
  memcpy(mutableStr, pVkString, strLength);
  mutableStr[strLength] = '\0';

  char const *prefixStr = generateEnumPrefix(pVkType, stripVendor(pVkType, strlen(pVkType)));

  STecVkSerializationResult result;
  if (strstr(pVkType, "Flags") != NULL || strstr(pVkType, "FlagBits") != NULL) {
    result = parseBitmask(mutableStr, pSearchStart, pSearchEnd, prefixStr, strlen(prefixStr),
                          pParsedValue);
  } else {
    result =
        parseEnum(mutableStr, pSearchStart, pSearchEnd, prefixStr, strlen(prefixStr), pParsedValue);
  }

  free((void *)prefixStr);
  free(mutableStr);

  return result;
}

#endif // VK_VALUE_SERIALIZATION_CONFIG_MAIN

#ifdef __cplusplus
}
#endif

#endif // VK_VALUE_SERIALIZATION_H
