# Global

stages:
  - Arch
  - Debian
  - Fedora
  - Ubuntu
  - Windows
  - macOS
  - Analysis

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  CTEST_OUTPUT_ON_FAILURE: '1'

# Platform Tests

.platform_unix_template: &platform_unix_template
  needs: []
  dependencies: []
  script:
    - mkdir build && cd build
    - cmake .. -GNinja -DCMAKE_BUILD_TYPE=Release -DBUILD_EXAMPLES=ON -DBUILD_TESTS=ON
    - ninja
    - ctest

.platform_windows_template: &platform_windows_template
  stage: Windows
  image: docker.io/stabletec/build-foe:windows
  tags:
    - docker-windows
    - amd64
  needs: []
  dependencies: []
  script:
    - mkdir build; cd build
    - cmake .. -GNinja -DCMAKE_BUILD_TYPE=Release -DBUILD_EXAMPLES=ON -DBUILD_TESTS=ON
    - ninja
    - ninja test

.platform_macos_template: &platform_macos_template
  stage: macOS
  needs: []
  dependencies: []
  script:
    - mkdir build && cd build
    - cmake .. -GNinja -DCMAKE_BUILD_TYPE=Release -DBUILD_EXAMPLES=ON -DBUILD_TESTS=ON
    - ninja
    - ctest

Arch/GCC (amd64):
  stage: Arch
  image: docker.io/stabletec/build-foe:arch
  tags:
    - container
    - linux
    - amd64
  variables:
    CC: gcc
    CXX: g++
  <<: *platform_unix_template

Arch/Clang (amd64):
  stage: Arch
  image: docker.io/stabletec/build-foe:arch
  tags:
    - container
    - linux
    - amd64
  variables:
    CC: clang
    CXX: clang++
  <<: *platform_unix_template

Fedora/GCC (amd64):
  stage: Fedora
  image: docker.io/stabletec/build-foe:fedora
  tags:
    - container
    - linux
    - amd64
  variables:
    CC: gcc
    CXX: g++
  <<: *platform_unix_template

Fedora/Clang (amd64):
  stage: Fedora
  image: docker.io/stabletec/build-foe:fedora
  tags:
    - container
    - linux
    - amd64
  variables:
    CC: clang
    CXX: clang++
  <<: *platform_unix_template

Fedora/GCC (arm64):
  stage: Fedora
  image: docker.io/stabletec/build-foe:fedora
  tags:
    - container
    - linux
    - arm64
  variables:
    CC: gcc
    CXX: g++
  <<: *platform_unix_template

Fedora/Clang (arm64):
  stage: Fedora
  image: docker.io/stabletec/build-foe:fedora
  tags:
    - container
    - linux
    - arm64
  variables:
    CC: clang
    CXX: clang++
  <<: *platform_unix_template

Ubuntu/GCC (amd64):
  stage: Ubuntu
  image: docker.io/stabletec/build-foe:ubuntu
  tags:
    - container
    - linux
    - amd64
  variables:
    CC: gcc
    CXX: g++
  <<: *platform_unix_template

Ubuntu/Clang (amd64):
  stage: Ubuntu
  image: docker.io/stabletec/build-foe:ubuntu
  tags:
    - container
    - linux
    - amd64
  variables:
    CC: clang
    CXX: clang++
  <<: *platform_unix_template

Ubuntu/GCC (arm64):
  stage: Ubuntu
  image: docker.io/stabletec/build-foe:ubuntu
  tags:
    - container
    - linux
    - arm64
  variables:
    CC: gcc
    CXX: g++
  <<: *platform_unix_template

Ubuntu/Clang (arm64):
  stage: Ubuntu
  image: docker.io/stabletec/build-foe:ubuntu
  tags:
    - container
    - linux
    - arm64
  variables:
    CC: clang
    CXX: clang++
  <<: *platform_unix_template

Ubuntu/GCC (riscv64):
  stage: Ubuntu
  image: docker.io/stabletec/build-foe:ubuntu
  tags:
    - container
    - linux
    - riscv64
  variables:
    CC: gcc
    CXX: g++
  <<: *platform_unix_template

Ubuntu/Clang (riscv64):
  stage: Ubuntu
  image: docker.io/stabletec/build-foe:ubuntu
  tags:
    - container
    - linux
    - riscv64
  variables:
    CC: clang
    CXX: clang++
  <<: *platform_unix_template

Debian 10/GCC (Old v97)(amd64):
  stage: Debian
  image: docker.io/stabletec/build-core:debian-10
  tags:
    - container
    - linux
    - amd64
  variables:
    CC: gcc
    CXX: g++
  script:
    - apt install -y libvulkan-dev
    - mkdir build && cd build
    - cmake .. -GNinja -DCMAKE_BUILD_TYPE=Release -DBUILD_EXAMPLES=ON -DBUILD_TESTS=ON
    - ninja
    - ctest

Debian 10/Clang (Old v97)(amd64):
  stage: Debian
  image: docker.io/stabletec/build-core:debian-10
  tags:
    - container
    - linux
    - amd64
  variables:
    CC: clang
    CXX: clang++
  script:
    - apt install -y libvulkan-dev
    - mkdir build && cd build
    - cmake .. -GNinja -DCMAKE_BUILD_TYPE=Release -DBUILD_EXAMPLES=ON -DBUILD_TESTS=ON
    - ninja
    - ctest

Windows/MSVC (amd64):
  <<: *platform_windows_template

Windows/Clang-cl (amd64):
  variables:
    CC: clang-cl
    CXX: clang-cl
  <<: *platform_windows_template

macOS/Clang (amd64):
  tags:
    - macos
    - amd64
  variables:
    CC: clang
    CXX: clang++
  <<: *platform_macos_template

macOS/Clang (arm64):
  tags:
    - macos
    - arm64
  variables:
    CC: clang
    CXX: clang++
  <<: *platform_macos_template

# Analysis
Code Coverage:
  stage: Analysis
  image: docker.io/stabletec/build-foe:arch
  tags:
    - container
    - linux
    - amd64
  needs:
  - Arch/GCC (amd64)
  - Arch/Clang (amd64)
  dependencies: []
  variables:
    CC: clang
    CXX: clang++
  script:
    - mkdir build && cd build
    - cmake .. -GNinja -DCMAKE_BUILD_TYPE=Release -DCODE_COVERAGE=ON -DBUILD_TESTS=ON
    - ninja
    - ninja ccov-VkSerializationTests
    - ninja ccov-report-VkSerializationTests
  artifacts:
    name: CodeCoverage
    paths: 
      - build/ccov
    expire_in: 1 day

.analysis_template: &analysis_template
  stage: Analysis
  image: docker.io/stabletec/build-foe:arch
  tags:
    - container
    - linux
    - amd64
  needs:
  - Arch/GCC (amd64)
  - Arch/Clang (amd64)
  dependencies: []
  script:
    - mkdir build && cd build
    - cmake .. -GNinja -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON ${CMAKE_OPTIONS}
    - ninja
    - ninja test

AddressSanitizer:
  variables:
    CC: clang
    CXX: clang++
    CMAKE_OPTIONS: -DUSE_SANITIZER=Address
  <<: *analysis_template

LeakSanitizer:
  variables:
    CC: clang
    CXX: clang++
    CMAKE_OPTIONS: -DUSE_SANITIZER=Leak
  <<: *analysis_template

UndefinedSanitizer:
  variables:
    CC: clang
    CXX: clang++
    CMAKE_OPTIONS: -DUSE_SANITIZER=Undefined
  <<: *analysis_template